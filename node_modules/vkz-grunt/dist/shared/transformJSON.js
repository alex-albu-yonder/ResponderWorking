module.exports = function (grunt) {
	grunt.registerMultiTask('transformJSON', 'copies a json file and gives the ability to transform it', function () {
        this.files.forEach(function (file) {
            var sourcePath = file.src;
            var transformPath = file.transform;
            var destPath = file.dest;

            var jsonSrcFile = grunt.file.readJSON(sourcePath);

            if (transformPath) {
                var jsonTransformFile = grunt.file.readJSON(transformPath);

                replaceRecursive(jsonSrcFile, jsonTransformFile);
            }

            grunt.file.write(destPath, JSON.stringify(jsonSrcFile, null, 2));
        });

        function replaceRecursive(objectSrc, objectTransform) {
            iterateThroughAllSrcProperties(objectSrc, objectTransform);

            iterateThroughAllLeftoverTransformProperties(objectSrc, objectTransform);
        }

        function iterateThroughAllSrcProperties(objectSrc, objectTransform) {
            for (var index in objectSrc) {
                if (typeof objectTransform[index] === 'undefined') {
                    continue;
                }

                if (typeof objectSrc[index] === 'object') {
                    replaceRecursive(objectSrc[index], objectTransform[index]);
                }
                else {
                    objectSrc[index] = objectTransform[index];
                }

                delete objectTransform[index];
            }
        }

        function iterateThroughAllLeftoverTransformProperties(objectSrc, objectTransform) {
            for (var index in objectTransform) {
                objectSrc[index] = objectTransform[index];
            }
        }
    });
};
