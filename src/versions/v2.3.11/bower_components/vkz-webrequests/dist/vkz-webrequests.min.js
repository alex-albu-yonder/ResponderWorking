/*! vkz-webrequests 12-12-2018 */
angular.module("verklizan.umox.common.html5.vkz-webrequests",["verklizan.umox.common.html5.vkz-webrequests.domain","verklizan.umox.common.html5.vkz-webrequests.service","verklizan.umox.common.html5.vkz-webrequests.directives"]),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain",["verklizan.umox.common.html5.vkz-utilities.general","verklizan.umox.common.html5.vkz-webrequests.domain.enums"]),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums",[]),angular.module("verklizan.umox.common.html5.vkz-webrequests.service",["verklizan.umox.common.html5.vkz-webrequests.proxy","verklizan.umox.common.html5.vkz-webrequests.domain","verklizan.umox.common.html5.vkz-utilities"]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy",["verklizan.umox.common.html5.vkz-webrequests.general"]),angular.module("verklizan.umox.common.html5.vkz-webrequests.general",["verklizan.umox.common.html5.vkz-utilities.settings"]),angular.module("verklizan.umox.common.html5.vkz-webrequests.directives",["verklizan.umox.common.html5.vkz-webrequests.general"]),angular.module("verklizan.umox.common.html5.vkz-webrequests.directives").directive("diAuthorized",["$rootScope","$window","$log","taskAuthorizationService","moduleAuthorizationService",function(a,b,c,d,e){"use strict";return{restrict:"E",scope:{ngAuthorizationTask:"=",ngAuthorizationModule:"="},transclude:!0,link:function(a,b,c,f,g){function h(){if(angular.isArray(a.ngAuthorizationTask))for(var b=0;b<a.ngAuthorizationTask.length;b++){var c=a.ngAuthorizationTask[b];if(d.isAuthorizedForTask(c)===!1)return!1}else if(d.isAuthorizedForTask(a.ngAuthorizationTask)===!1)return!1;return!0}function i(){if(angular.isArray(a.ngAuthorizationModule))for(var b=0;b<a.ngAuthorizationModule.length;b++){var c=a.ngAuthorizationModule[b];if(e.isAuthorizedForModule(c)===!1)return!1}else if(e.isAuthorizedForModule(a.ngAuthorizationModule)===!1)return!1;return!0}h()&&i()&&g(a.$parent,function(a){b.append(a),console.log("authorized granted")})}}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain").factory("appointmentFactory",["domainDefaults","domainEnums",function(a,b){"use strict";var c={};return c.createAppointment=function(){var a={appointmentPageDtoItem:null,customAppointmentDtoItem:c.createCustomAppointmentDtoItem(),plannedDate:null,endDate:null,isRecurrenceEnabled:!1,isAllowedToEditRecurrence:!0};return a.setAppointmentType=function(b){a.customAppointmentDtoItem.Appointment.AppointmentTypeId=b.Id,a.customAppointmentDtoItem.Appointment.AppointmentHandlerId=b.AppointmentHandlerId},a},c.createCustomAppointmentDtoItem=function(){return{Appointment:{AppointmentTypeId:null,AppointmentHandlerId:null,Subject:null,Remarks:null,RecurrenceDaysOfWeek:0,DurationMinutes:0}}},c.createCalendarDto=function(a){return{OwnerType:b.calendarOwnerTypeValues.Subscriber,OwnerId:a}},c.createRecurringAppointmentDto=function(a,d,e,f,g,h,i,j,k){return{Appointment:{AppointmentKind:b.appointmentKindValues.Appointment,AppointmentTypeId:a,AppointmentHandlerId:d,Subject:e,Remarks:f,DurationMinutes:0,HandlerActionBeforeStartDateMinutes:k,StartDate:g,TimeZone:h,RecurrenceCount:-1,RecurrenceFrequency:1,RecurrenceType:b.appointmentRecurrenceTypeValues.Weekly,RecurrenceDaysOfWeek:i,RecurrenceDayNumber:0,RecurrenceDayType:b.appointmentRecurrenceDaysOfWeekValues.None},Calendars:[c.createCalendarDto(j)]}},c.createSingleAppointmentDto=function(a,d,e,f,g,h,i,j){return{Appointment:{AppointmentKind:b.appointmentKindValues.Appointment,AppointmentTypeId:a,AppointmentHandlerId:d,Subject:e,Remarks:f,DurationMinutes:i,HandlerActionBeforeStartDateMinutes:j,PlannedDate:g,Status:b.appointmentStateValues.Planned,HandlerStatus:b.appointmentHandlerStateValues.Unhandled},Calendars:[c.createCalendarDto(h)]}},c}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain").factory("descriptorFactory",["$window","descriptors","domainEnums","pageSize",function(a,b,c,d){"use strict";function e(){var a=[];return a.push(new b.filterDescriptorItem("Selectable",!0,c.filterOperation.Equals)),a}function f(){return new b.sortDescriptor(!0,"SortIndex")}function g(){return new b.sortDescriptor(!1,"SortIndex")}function h(){return new b.sortDescriptor(!0,"Name")}function i(){return new b.sortDescriptor(!0,"Description")}var j={};return function(){function k(d,e,f){return function(g,h){var i=f,j=null;if(angular.isArray(h))for(var k=0;k<h.length;k++){var l=h[k];i=a.isNullOrUndefined(i)?[]:i,i.push(new b.filterDescriptorItem(l.filterProperty,l.filterValue,l.filterOperator))}return a.isNullOrUndefined(i)===!1&&(j=new b.filterDescriptor(i,c.filterOperator.And)),{pageDescriptor:new b.pageDescriptor(g,d),sort:e,filters:j}}}for(var l=[{name:"Small",pageSize:d.Small},{name:"Normal",pageSize:d.Normal},{name:"Large",pageSize:d.Large},{name:"XXLarge",pageSize:d.XXLarge}],m=[{name:"Selectable",fnc:e()}],n=[{name:"SortIndex",fnc:f()},{name:"SortIndexDesc",fnc:g()},{name:"Name",fnc:h()},{name:"Description",fnc:i()}],o=0;o<l.length;o++){var p="read"+l[o].name+"Data";j[p]=k(l[o].pageSize,null,null);for(var q=0;q<n.length;q++){var r="read"+l[o].name+"DataSort"+n[q].name;j[r]=k(l[o].pageSize,n[q].fnc,null);for(var s=0;s<m.length;s++){var t="read"+l[o].name+"DataSort"+n[q].name+"Filter"+m[s].name;j[t]=k(l[o].pageSize,n[q].fnc,m[s].fnc)}}for(var u=0;u<m.length;u++){var v="read"+l[o].name+"DataFilter"+m[u].name;j[v]=k(l[o].pageSize,null,m[u].fnc)}}}(),j.FilterOptionObject=function(b,d,e){if(a.isNullOrUndefined(b)||angular.isUndefined(d))throw"Incorrect creation of a FilterOptionObject";e=e||c.filterOperation.Equals,this.filterProperty=b,this.filterValue=d,this.filterOperator=e},j}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain").factory("descriptors",function(){"use strict";var a={};return a.pageDescriptor=function(a,b){this.__type="PageDescriptor:www.verklizan.com",this.PageIndex=a,this.PageSize=b},a.filterDescriptorItem=function(a,b,c){angular.isArray(a)===!1&&(a=[a]),this.__type="FilterDescriptor:www.verklizan.com",this.FilterProperty=a,this.FilterValue=b,this.Operation=c},a.filterDescriptor=function(a,b){this.__type="FilterDescriptorList:www.verklizan.com",this.List=a,this.Operator=b},a.sortDescriptor=function(a,b){this.__type="SortDescriptorList:www.verklizan.com",this.List=[{Direction:a?1:2,SortProperty:[b]}]},a.sortDescriptorWithMultipleSortProperties=function(a,b){this.__type="SortDescriptorList:www.verklizan.com",this.List=[{Direction:a?1:2,SortProperty:b}]},a}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain").factory("domainDefaults",function(){"use strict";var a={};return a.emptyGuid="00000000-0000-0000-0000-000000000000",a.emptyString="",a.defaultImageMemeType="image/jpeg",a}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain").factory("domainEnums",function(){"use strict";var a={};return a.addressFormatTypeValues={Default:0,UKAddress:1},a.appointmentHandlerStateValues={Unknown:0,Unhandled:1,Succeeded:2,Failed:3,OutOfTime:4},a.appointmentKindValues={Unknown:0,Appointment:1,ServiceTask:2,AutoProc:3},a.appointmentRecurrenceTypeValues={Daily:0,Weekly:1,Monthly:2,Yearly:3},a.appointmentRecurrenceDaysOfWeekValues={None:0,Sunday:1,Monday:2,Tuesday:4,Wednesday:8,Thursday:16,Friday:32,Saturday:64},a.appointmentStateValues={Unknown:0,Planned:1,Unplanned:2,Completed:3,Failed:4},a.calendarOwnerTypeValues={None:0,Operator:1,Subscriber:2,Technician:3,Role:4},a.caregiverCategory={Unknown:0,Professional:1,Relational:2,Warden:4,ProfessionalAsRelational:8},a.careRequestStatus={Unknown:0,Send:1,RequestReceived:2,Accept:3,Decline:4,Arrived:5,Done:6,DeviceNotReachable:7,Cancelled:8,Closed:9},a.deviceTypeValues={Unknown:0,DeviceType:1,SimpleDeviceType:2},a.eventTypeValues={Unknown:0,NoAlarm:16777216,OperatorStartAlarm:16777217,MainAlarm:16777316,VoiceRemoteAlarm:16777317,PersonalTrigger1Alarm:16777317,PersonalTrigger2Alarm:16777318,PersonalTrigger3Alarm:16777319,PersonalTrigger4Alarm:16777320,PersonalTrigger5Alarm:16777321,PersonalTrigger6Alarm:16777322,PersonalTrigger7Alarm:16777323,PersonalTrigger8Alarm:16777324,PersonalTrigger9Alarm:16777325,PersonalTrigger10Alarm:16777326,MainEndAlarm:16777326,RepeatedCallAlarm:16777327,DoorBellAlarm:16777328,BurglaryDetectionAlarm:16777329,SmokeDetectorAlarm:16777330,LowTemperatureAlarm:16777331,AcousticAlarm:16777332,DoorAlarm:16777333,MedicalAlarmWithVoiceAlarm:16777334,BedAlarm:16777335,AssistanceAlarmWithVoiceAlarm:16777336,KitchenAlarm:16777337,LivingroomAlarm:16777338,HallAlarm:16777339,ToiletAlarm:16777340,SurroundingAlarm:16777341,GasAlarm:16777342,LightFailureAlarm:16777343,FireAlarm:16777344,HeaterFailureAlarm:16777345,VoiceTestAlarm:16777346,PowerFailAlarm:16777347,AbsentAlarm:16777348,PresentAlarm:16777349,PoweronAlarm:16777350,VoicePowerRestoreAlarm:16777351,TamperAlarm:16777352,MaintenanceAlarm:16777353,MovementDetectionAlarm:16777354,SmokeAlarm:16777355,SleepingroomAlarm:16777356,BathroomAlarm:16777357,DiningroomAlarm:16777358,StudyAlarm:16777359,StairsAlarm:16777360,GarageAlarm:16777361,GardenAlarm:16777362,FallDetectorAlarm:16777363,ElevatorAlarm:16777364,GeoFenceAlarm:16777365,InactivitieDetectAlarm:16777366,PeriodicCheckReportAlarm:16777367,FrequentOutOfBedAlarm:16777368,PullCordAlarm:16777369,CareWorkerAbsentVoiceAlarm:16777370,MoistureAlarm:16777371,VoiceRemoteLostAlarm:16777372,GeneralDeviceErrorAlarm:16777373,CoDetectorAlarm:16777375,ServiceReportAlarm:16777376,VoicePowerFaultAlarm:16777377,VoiceRemoteBatteryFaultAlarm:16777378,VoiceBatteryFaultAlarm:16777379,VoiceWardenAttendanceAlarm:16777380,UrgencyAlarm:16777381,ExternalAlarm:16777382,InvalidEndOfAlarm:16777383,VoiceIntruderAlarm:16777385,CareWorkerPresentVoiceAlarm:16777386,VoiceBatteryRestoreAlarm:16777387,CriteriumFaultAlarm:16777388,DeviceCommunicationLostAlarm:16777389,DeviceCommunicationRestoreAlarm:16777390,AssaultAlarm:16777391,PullCordTamperAlarm:16777392,WanderAlarm:16777393,LoneWorkerAlarm:16777394,VoicePanicButtonAlarm:16777395,Error1Alarm:16777396,Error2Alarm:16777397,Error3Alarm:16777398,Error4Alarm:16777399,Error5Alarm:16777400,UnwantedVisitorAlarm:16777401,ReservedAlarm:16777402,NewSubscriberAlarm:16777403,ClosedSubscriberAlarm:16777404,ForgottenMedicationAlarm:16777405,VideoAlarm:16777406,MobileAlarm:16777407,WristbandOffAlarm:16777408,WristbandOnAlarm:16777409,NoActivityAlarm:16777410,WorseningHealthAlarm:16777411,TelephoneAlarm:16777412,TelephoneCallAlarm:16777413,ManualAlarm:16777414,DialAlarm:16777415,OperatorEndAlarm:16777415,LogStartAlarm:16777416,MainAlarmNoVoiceAlarm:16777416,DevicePowerFailAlarm:16777417,TelephoneLineFaultAlarm:16777418,BatteryFaultAlarm:16777419,ExternalBatteryFaultAlarm:16777420,DisconnectAlarm:16777421,LightFailureAlarmNoVoiceAlarm:16777422,FireAlarmNoVoiceAlarm:16777423,HeaterFailureAlarmNoVoiceAlarm:16777424,SystemAlarm:16777425,ProtocolTimeoutAlarm:16777426,DeviceIdErrorAlarm:16777427,AlarmIdErrorAlarm:16777428,IntruderDetectionAlarm:16777429,SmokeDetectorAlarmNoVoiceAlarm:16777430,LowTemperatureAlarmNoVoiceAlarm:16777431,GasAlarmNoVoiceAlarm:16777432,MoistureAlarmNoVoiceAlarm:16777433,ManualAlarmNoVoiceAlarm:16777434,DoorAlarmNoVoiceAlarm:16777435,GeneralInputAlarm:16777436,Input1TestAlarm:16777437,Input2TestAlarm:16777438,Input3TestAlarm:16777439,Input4TestAlarm:16777440,Input5TestAlarm:16777441,Input6TestAlarm:16777442,Input7TestAlarm:16777443,Input8TestAlarm:16777444,Input9TestAlarm:16777445,BedAlarmNoVoiceAlarm:16777446,HeaterAlarmNoVoiceAlarm:16777447,ToiletAlarmNoVoiceAlarm:16777448,KitchenAlarmNoVoiceAlarm:16777449,LivingroomAlarmNoVoiceAlarm:16777450,HallAlarmNoVoiceAlarm:16777451,AbsentAlarmNoVoiceAlarm:16777452,PresentAlarmNoVoiceAlarm:16777453,PoweronAlarmNoVoiceAlarm:16777454,SurroundingAlarmNoVoiceAlarm:16777455,EpilepsyAlarm:16777456,DementiaAlarm:16777457,TestAlarm:16777458,MedicalAlarm:16777459,AssistanceAlarm:16777461,StartInterruptorAlarm:16777462,ExternAlarm:16777463,MaintenanceAlarmNoVoiceAlarm:16777464,MovementAlarm:16777465,DeviceLostAlarm:16777466,DeviceVerifyAlarm:16777467,WatchdogReportAlarm:16777468,SmokeDetectorFailureNoVoiceAlarm:16777469,LocalResetAlarm:16777470,RemoteBatteryFaultAlarm:16777471,RemoteLostAlarm:16777472,InactivitieDetectNoVoiceAlarm:16777473,ServiceReadyAlarm:16777474,RemoteLongDistanceAlarm:16777475,BaseStationLostAlarm:16777476,WardenAttendanceAlarm:16777477,BaseStationErrorAlarm:16777478,LogAlarm:16777479,DeviceCommunicationLostNoVoiceAlarm:16777480,DeviceCommunicationRestoreNoVoiceAlarm:16777481,SmokeDetectorStartupAlarm:16777482,BatteryFullAlarm:16777483,IntruderAlarm:16777484,ErrorInMessageAlarm:16777485,PanicButtonAlarm:16777486,DevicePowerRestoreAlarm:16777487,TelephoneLineRestoreAlarm:16777488,BatteryRestoreAlarm:16777489,DevicePoweronAlarm:16777490,SmokeDetectorRestoreAlarm:16777491,LowTempDetectorRestoreAlarm:16777492,IntruderDetectorRestoreAlarm:16777493,RemoteCommunicationRestoreAlarm:16777494,RemoteFoundAlarm:16777495,SystemError1ReportAlarm:16777496,SystemError2ReportAlarm:16777497,SystemError3ReportAlarm:16777498,SystemError4ReportAlarm:16777499,SystemError5ReportAlarm:16777500,SystemError6ReportAlarm:16777501,SystemError7ReportAlarm:16777502,SystemError8ReportAlarm:16777503,SystemError9ReportAlarm:16777504,SystemError10ReportAlarm:16777505,SystemError11ReportAlarm:16777506,SystemError12ReportAlarm:16777507,SystemError13ReportAlarm:16777508,SystemError14ReportAlarm:16777509,SystemError15ReportAlarm:16777510,SystemError16ReportAlarm:16777511,SystemError17ReportAlarm:16777512,SystemError18ReportAlarm:16777513,SystemError19ReportAlarm:16777514,SystemError20ReportAlarm:16777515,LocationVoiceStartAlarm:16777516,AcousticAlarmNoVoiceAlarm:16777516,FloodDetectorAlarm:16777517,FloodDetectorAlarm2Alarm:16777518,FloodDetectorAlarm3Alarm:16777519,FloodDetectorAlarm4Alarm:16777520,FloodDetectorAlarm5Alarm:16777521,NotToBedAlarm:16777522,NotOutOfBedAlarm:16777523,OutOfBedAlarm:16777524,Sleepingroom1Alarm:16777525,Sleepingroom2Alarm:16777526,RadioOutputModule1Alarm:16777527,RadioOutputModule2Alarm:16777528,RadioOutputModule3Alarm:16777529,RadioOutputModule4Alarm:16777530,Bathroom1Alarm:16777531,Bathroom2Alarm:16777532,ToiletDownstairsAlarm:16777533,ToiletOutsideAlarm:16777534,Kitchen1Alarm:16777535,Kitchen2Alarm:16777536,Livingroom1Alarm:16777537,Livingroom2Alarm:16777538,Garage1Alarm:16777539,Garage2Alarm:16777540,FrontYardAlarm:16777541,BackYardAlarm:16777542,AcousticDetector1Alarm:16777543,AcousticDetector2Alarm:16777544,AcousticDetector3Alarm:16777545,AcousticDetector4Alarm:16777546,AcousticDetector5Alarm:16777547,ExtremeTemperatureDetectorAlarm:16777548,ExtremeTemperatureDetectorLowAlarm:16777549,ExtremeTemperatureDetectorHighAlarm:16777550,PushButtonFallDetectorAlarm:16777551,WanderDetectorAlarm:16777552,FallDetector2Alarm:16777553,SensorFailureAlarm:16777554,SensorLifetimeExpiredAlarm:16777555,Epilepsy2Alarm:16777556,HeartProblemsAlarm:16777557,SupervisorOnLocationAlarm:16777558,PersonDownAlarm:16777559,TemperatureLowAlarm:16777560,TemperatureRisingAlarm:16777561,BedInuseAlarm:16777562,ChairInUseAlarm:16777563,BathroomInUseAlarm:16777564,PremisesInUseAlarm:16777565,SupervisorLeftLocationAlarm:16777566,ChairAbandonedAlarm:16777567,BedLevelAlarm:16777568,SystemTestModeAlarm:16777569,AnounceBatteryFailAlarm:16777571,InBatteryLoaderAlarm:16777576,RemovedFromBatteryLoaderAlarm:16777577,DoorLeftOpenAlarm:16777578,BackupDeviceCommunicationLostNoVoiceAlarm:16777580,BackupDeviceCommunicationRestoreNoVoiceAlarm:16777581,ParkinsonAlarm:16777592,OutsideGeoFenceAreaAlarm:16777596,InsideGeoFenceAreaAlarm:16777597,OutsideGeoFenceAreaReportAlarm:16777598,InsideGeoFenceAreaReportAlarm:16777599,PeriodicMessageNotAcknowledgedAlarm:16777600,PeriodicMessageAcknowledgedAlarm:16777601,AlarmunitNoRFdevicesAlarm:16777604,ExternalAlarmRestoredAlarm:16777605,AlarmRecoveredAlarm:16777615,LocationVoiceEndAlarm:16777615,HomeUnitOkAlarm:16777616,SubscriberOkAlarm:16777617,PanicRestoreAlarm:16777618,BatteryFaultyAlarm:16777619,ReminderAlarm:16777620,PreviousSessionCommunicationErrorAlarm:16777621,IncontinenceAlarm:16777622,FallDetectionOnAlarm:16777623,FallDetectionOffAlarm:16777624,DevicePowerdownAlarm:16777625,SimulatedAlarm:16777626,RepeatedCallNoVoiceAlarm:16777627,IncommingCallAlarm:16777628,IntruderAlarmOnAlarm:16777629,IntruderAlarmOffAlarm:16777630,TeleMedicineAlarm:16777631,AcknowledgementAlarm:16777632,TeleMedicineErrorAlarm:16777633,TelemedicineAlarm:16777634,Movement2Alarm:16777635,BadMeasurementDataAlarm:16777636,BraceletOnAlarm:16777637,BraceletOffAlarm:16777638,BloodPressureHighAlarm:16777639,PulseAlarm:16777640,BodyTemperatureAlarm:16777641,TelemedicineCancledAlarm:16777642,TelemedicineTimeoutAlarm:16777643,ServiceAlarm:16777645,TeleMedicineTresholdAlarm:16777646,TeleMedicineCriticalAlarm:16777646,DeviceResetAlarm:16777647,AlarmZoneShortedAlarm:16777648,FalseAlarm:16777649,DeviceRegisteredAlarm:16777650,AlarmDeactivatedAlarm:16777651,CareWorkerAbsentNoVoiceAlarm:16777652,CareWorkerPresentNoVoiceAlarm:16777653,CareWorkerMobilizedNoVoiceAlarm:16777654,ActivityMonitorOnAlarm:16777655,ActivityMonitorOffAlarm:16777656,RadioRestoreAlarm:16777657,ActionInformationAlarm:16777658,NurseCallAlarm:16777659,DoorMatAlarm:16777660,TamperRestoreAlarm:16777661,TamperNoVoiceAlarm:16777662,FallDetectorNoVoiceAlarm:16777663,CareWorkerRefusedNoVoiceAlarm:16777664,GeoFenceAlarmNoVoiceAlarm:16777665,GeoFenceReportAlarm:16777666,ResetInactivityAlarm:16777667,TransmitterOutOfRangeAlarm:16777668,TransmitterInRangeAlarm:16777669,RemoteBatteryRestoreAlarm:16777670,NoAlarmAlarm:16777671,RadioFailureAlarm:16777672,CareworkerDoneAutomaticallyAlarm:16777673,SmokeDetectorBatteryLowAlarm:16777674,TransmitterLongRangeAlarm:16777675,PositionUpdateAlarm:16777676,PositionRequestByPhoneAlarm:16777677,PositionRequestBySmsAlarm:16777678,TraceOnAlarm:16777679,TraceOffAlarm:16777680,PositionUpdateRegistrationAlarm:16777681,PositionRequestByPhoneRegistrationAlarm:16777682,PositionRequestBySmsRegistrationAlarm:16777683,TraceOnRegistrationAlarm:16777684,TraceOffRegistrationAlarm:16777685,DoorOpenRequestAlarm:16777686,DoorOpenCommandAlarm:16777687,PinVerifyRequestAlarm:16777688,SerialNumberInputAlarm:16777689,IgnitionAlarm:16777690,StatusAlarmInputAlarm:16777691,SpeedViolationAlarm:16777692,KeyCodeRequestAlarm:16777693,KeyCodeChangeAlarm:16777694,UnrequestedDataAlarm:16777695,MedicationAlarm:16777696,MedicationTakenAlarm:16777697,MedicationNotTakenAlarm:16777698,NewTrayAlarm:16777699,OnlineAlarm:16777700,NoSchematicAlarm:16777701,UnknownMessageAlarm:16777702,TimePeriodExpiredAlarm:16777703,WrongTemperatureAlarm:16777706,FlatBatteryAlarm:16777707,KidnapAlarm:16777708,CarJackAlarm:16777709,CollisionAlarm:16777710,AssistanceRequestAlarm:16777711,TrailerUncoupledAlarm:16777712,TrailerUncoupledRestoreAlarm:16777713,EmergencyStopAlarm:16777714,EmergencyStopRestoreAlarm:16777715,IncontinenceBatteryLowAlarm:16777716,NotInBedDetectorBatteryLowAlarm:16777717,NotOutOfBedDetectorBatteryLowAlarm:16777718,OutOfBedDetectorBatteryLowAlarm:16777719,BatteryLoadingAlarm:16777720,SimReplacedAlarm:16777721,CriteriaNotSupportedAlarm:16777722,ChargingInterruptedAlarm:16777723,ProgramModeEntryAlarm:16777734,ProgramModeExitAlarm:16777735,DownloadStartAlarm:16777736,TimeDateResetAlarm:16777737,GasDetectionRestoreAlarm:16777738,TeleMedicineWarningAlarm:16777746,InactivityRestoredAlarm:16777765,DeviceRestoredAlarm:16777766,DeviceResultAlarm:16777767,Test2Alarm:16777771,NetworkConnectionErrorAlarm:16777775,NetworkConnectionRestoredAlarm:16777776,GSMNetworkerrorAlarm:16777778,GSMNetworkRestoredAlarm:16777779,UnknownMeaningFirstAlarm:16777816,UnknownMeaningLastAlarm:16777915,AdministrationAlarm:16777916,SubAlarm:16777917,LoneWorkerJobAlarm:16777918,PortStatusAlarm:16778016,ProgrammingSuccesfullAlarm:16778017,NoSystemAcknowledgeReceivedAlarm:16778018,LogEndAlarm:16778115,InternalStartAlarm:16778116,InterfaceTimedoutAlarm:16778116,SystemPowerFailAlarm:16778117,SystemPowerRestoreAlarm:16778118,LineFaultAlarm:16778119,LineRestoreAlarm:16778120,asBatteryFaultAlarm:16778121,asBatteryRestoredAlarm:16778122,BridgeStopAlarm:16778123,BridgeStartAlarm:16778124,LocalDiskAlarm:16778125,ExceptionAlarm:16778126,NetworkAlarm:16778127,TransactionErrAlarm:16778128,LogFileCopyAlarm:16778129,TransactionOkAlarm:16778130,CardLostAlarm:16778131,CardFoundAlarm:16778132,CardApplicErrAlarm:16778133,CleanupFailAlarm:16778134,AutoProcessFailAlarm:16778135,ServiceFaultAlarm:16778136,ServiceRestoreAlarm:16778137,AudioNetworkFailAlarm:16778138,AudioNetworkRestoreAlarm:16778139,AudioRecorderLostAlarm:16778140,DuplicateLocationAlarm:16778141,DatabaseBackFailAlarm:16778142,AutoCloseAddedAlarm:16778143,AutoCloseRemovedAlarm:16778144,LoopBackRestoreAlarm:16778145,SmsModemLostAlarm:16778146,SmsModemRestoreAlarm:16778147,UmoTestAlarm:16778148,LoopBackFailAlarm:16778149,SmsModemNetworkLostAlarm:16778150,SmsModemNetworkRestoreAlarm:16778151,SmsModemSimNotInsertAlarm:16778152,SmsModemSimRestoreAlarm:16778153,UnknownSmsReceivedAlarm:16778154,AutoCloseStartedAlarm:16778155,CPUUsageLimitAlarm:16778156,DiskUsageLimitAlarm:16778157,MemoryUsageLimitAlarm:16778158,AudioRecorderFailureAlarm:16778159,ServiceModeStartAlarm:16778160,ServiceModeStopAlarm:16778161,UmoEscapeWarningAlarm:16778162,BackupAlarm:16778163,SwitchToStandbyAlarm:16778164,SwitchToActiveAlarm:16778165,ForcedCheckDoneAlarm:16778166,LoopbackTestAlarm:16778167,DialinWhileDialoutAlarm:16778168,InterfaceHardwareErrorAlarm:16778169,VoicemailWarningAlarm:16778170,CardDisconnectAlarm:16778171,CardWatchdogAlarm:16778172,GuardProtocolAlarm:16778173,CardConflictAlarm:16778174,ReplicationErrorAlarm:16778175,ProtocolErrorMinAlarm:16778176,ProtocolErrorAlarm:16778176,ProtocolError1Alarm:16778177,ProtocolError2Alarm:16778178,ProtocolError3Alarm:16778179,ProtocolError4Alarm:16778180,ProtocolError5Alarm:16778181,ProtocolError6Alarm:16778182,ProtocolError7Alarm:16778183,ProtocolError8Alarm:16778184,ProtocolError9Alarm:16778185,ProtocolErrorMaxAlarm:16778185,NetworkCommunicationRestoreAlarm:16778186,NetworkCommunicationTimeoutAlarm:16778187,NetworkCommunicationErrorAlarm:16778189,ExternalServiceCommunicationLostAlarm:16778190,ExternalServiceCommunicationRestoreAlarm:16778191,DataExportSucceededAlarm:16778192,DataExportRepeatedAttemptAlarm:16778193,DataExportFailedAlarm:16778194,ForcedProcessDbDisconnectAlarm:16778195,SmsModemRoamingAlarm:16778196,IncompleteAlarm:16778206,UmoTest2Alarm:16778210,WatchdogAlarm:16778211,AlarmConflictAlarm:16778212,AlarmLostAlarm:16778213,AlarmCleanedAlarm:16778214,CriteriumErrorAlarm:16778215,InternalEndAlarm:16778215,AutoCriteriumAlarm:16778216,AutoCriteriumStartAlarm:16778217,AutoCriteriumEndAlarm:16779215,EventCriteriumStartAlarm:16779216,EventCriteriumEndAlarm:16780215,MaxCriteriumAlarm:16780216,OpenIncidentRequest:33554432,HoldIncidentRequest:33554433,ReleaseIncidentRequest:33554434,CloseIncidentRequest:33554435,TakeoverIncidentRequest:33554436,NewIncidentSourceRequest:33554437,AssistanceRequiredRequest:33554438,AssistanceNotRequiredRequest:33554439,AssistanceMobilizedRequest:33554440,AssistanceDoneRequest:33554441,AcceptConferencePartyRequest:33554442,HoldConferencePartyRequest:33554443,StartConferencePartyRequest:33554444,CloseConferencePartyRequest:33554445,PersonContactRequest:33554446,CaregiverMobilizedRequest:33554447,CaregiverArrivedRequest:33554448,CaregiverDoneRequest:33554449,AddNoteRequest:33554450,RemoveNoteRequest:33554451,PrintRequest:33554452,EmailRequest:33554453,FaxRequest:33554454,SmsRequest:33554455,AddReminderRequest:33554456,RemoveReminderRequest:33554457,DismissReminderRequest:33554458,NewLoneworkerJobRequest:33554459,ExtendLoneworkerJobRequest:33554460,CancelLoneworkerJobRequest:33554461,DialPhoneNumberRequest:33554462,CancelDialRequest:33554463,GeneralDeviceControl:50331648,OpenDoorControl:50331649,TraceControl:50331650,TrackingControl:50331651,ForcedConnectControl:50331652,CarBlockControl:50331653,ServiceModeControl:50331654,DeviceProgrammingControl:50331655,DeviceReadoutControl:50331656,ForcedCheckControl:50331657,CareTimeoutWarning:67108864,CareRefusedWarning:67108865,BusyContactChannelWarning:67108866,NoAutoCareInfoWarning:67108867,AutoCareOverallTimeoutWarning:67108868,ContactChannelError:83886080,ForceReleaseIncidentSystem:100663296,UserDefinedInfo:117440512,IncidentMemoViewedInfo:117440513,TechnicalEventFollowupInfo:117440514,CaregiverRefusedInfo:117440515,AutoCareStartedInfo:117440516,AutoCareTerminatedInfo:117440517,TraceData:134217728,CaregiverCalledStatus:150994944,CaregiverMobilizedStatus:150994945,CaregiverArrivedStatus:150994946,CaregiverSignedOutStatus:150994947,OperatorRegistration:167772160,OperatorUnregistration:167772161,DeviceConnected:184549376,DeviceDisconnected:184549377},a.filterOperator={And:0,Or:1},a.filterOperation={InvalidOperation:0,Equals:1,Not:2,Like:3,Greater:4,Smaller:5,NotNULL:6,In:7,IsNULL:8,OnDate:9,StartsWith:10,EndsWith:11,GreaterThanOrEqual:12,LessThanOrEqual:13},a.functionValues={Unknown:0,ExternalPhone:1,InternalPhone:2,Operator:3,Email:4,PDA:5,SMS:6,SIP:7,SkypePhone:8,GsmModem:9,UniteMember:10,SmsAssist:11,CareFollowUp:12,Facetime:13,CareApp:14},a.genderValues={Unknown:0,Male:1,Female:2},a.invoiceAddressTypeValues={Unknown:0,ResidenceAddress:1,DebtorAddress:2,InvoiceAddress:3},a.leaseCountCategoryValues={Unknown:0,PersonAlarmAnaloge:1,PersonAlarmAnalogeSIP:2,IPAlarmSIPAudio:3,IPAlarmXMLInterface:4,MobileAlarmTalkMeHome:5,MobileAlarmTrackAndTrace:6,SMSInterface:7,TelemedicineDirect:8,TelemedicineIndirect:9,TelemedicineMedicineMonitoring:10,VideoSIPVideo:11,VideoMonitoring:12,KeySafe:13,DoorSystem:14,NoTax:15},a.linkingType={Unknown:0,None:1,Subscriber:2,Residence:3,Scheme:4},a.loginOwningTypeValues={None:0,Operator:1,Caregiver:2,Subscriber:4,Executable:8},a.operatingSystemType={Unkown:0,iOS:1,Android:2,WindowsPhone:3,AndroidFcm:4},a.pushSubscriptionType={Unknown:0,CareRequests:1,FaceTime:2},a.traceEventTypeEnum={Critical:1,Error:2,Warning:4,Information:8,Verbose:16,Start:256,Stop:512,Suspend:1024,Resume:2048,Transfer:4096},a.traceSourceType={Unknown:0,Executable:1,Operator:2,Subscriber:3,ProfessionalCaregiver:4},a.values={Unknown:0,Low:1,Medium:2,High:3},a}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("addressFormatTypeValues",{Default:0,UKAddress:1}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("appointmentHandlerStateValues",{Unknown:0,Unhandled:1,Succeeded:2,Failed:3,OutOfTime:4,Skipped:5}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("appointmentHandlerValues",{None:0,AppointmentRemindByAlarm:1,AutoProcExecute:2,AutoAppointmentService_OnBirthday:3,AutoAppointmentService_AfterSubscriberActivation:5,AutoAppointmentService_BeforeReIndicationDate:7,AutoAppointmentService_BeforeWellBeingAppointmentRangeEndDate:8,AutoAppointmentService_OnEndOfAbsencePeriod:9}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("appointmentKindValues",{Unknown:0,Appointment:1,ServiceTask:2,AutoProc:3}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("appointmentRecurrenceDaysOfWeekValues",{None:0,Sunday:1,Monday:2,Tuesday:4,Wednesday:8,Thursday:16,Friday:32,Saturday:64}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("appointmentRecurrenceTypeValues",{Daily:0,Weekly:1,Monthly:2,Yearly:3}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("appointmentStateValues",{Unknown:0,Planned:1,Unplanned:2,Completed:3,Failed:4,Postponed:5,CompletedAndPostponed:6,FailedAndPostponed:7,Canceled:8,CanceledAndPostponed:9,PlannedAndLocked:10,PostponedAndLocked:11,FailedAndLocked:12,FailedAndPostponedAndLocked:13}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("calendarOwnerTypeValues",{None:0,Operator:1,Subscriber:2,Technician:3,Role:4}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("caregiverTypeValues",{Unknown:0,Professional:1,Relational:2,Warden:4,ProfessionalAsRelational:8}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("conferencePartyState",{Unknown:0,Offline:1,Away:2,DoNotDisturb:3,Connecting:4,Online:5,Holding:6,OnHold:7,Disconnecting:8,Error:9}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").factory("conferencePartyType",function(){"use strict";return{Unknown:0,Operator:1,ProfCareGiver:2,DirectCareGiver:3,Subscriber:4,Technician:5}}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("conferenceState",{Unknown:0,Idle:1,Active:2}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("contactItemTypeFunctionValues",{Unknown:0,ExternalPhone:1,InternalPhone:2,Operator:3,Email:4,PDA:5,SMS:6,SIP:7,SkypePhone:8,GsmModem:9,UniteMember:10,SmsAssist:11,CareFollowUp:12,Facetime:13,CareApp:14,ExternalLinkCamera:101,ExternalLinkWeb:102,ExternalLinkMedical:103,ExternalLinkMap:104,ExternalLinkWord:105}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("contactItemTypeValues",{Unknown:0,PhoneNumber:1,EmailAddress:2,Website:3}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("customValidationType",{Unknown:0,Regex:1,IBAN:2,DNI:3}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("dayOfWeekValues",{WholeWeek:0,Sunday:1,Monday:2,Tuesday:3,Wednesday:4,Thursday:5,Friday:6,Saturday:7,Weekdays:8,Weekend:9,Never:10}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("deviceLinkingType",{Unknown:0,None:1,Subscriber:2,Residence:3,Scheme:4}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("deviceTypeTypeValues",{Unknown:0,DeviceType:1,SimpleDeviceType:2}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("eventTypeValues",{Unknown:0,NoAlarm:16777216,OperatorStartAlarm:16777217,MainAlarm:16777316,VoiceRemoteAlarm:16777317,PersonalTrigger1Alarm:16777317,PersonalTrigger2Alarm:16777318,PersonalTrigger3Alarm:16777319,PersonalTrigger4Alarm:16777320,PersonalTrigger5Alarm:16777321,PersonalTrigger6Alarm:16777322,PersonalTrigger7Alarm:16777323,PersonalTrigger8Alarm:16777324,PersonalTrigger9Alarm:16777325,PersonalTrigger10Alarm:16777326,MainEndAlarm:16777326,RepeatedCallAlarm:16777327,DoorBellAlarm:16777328,BurglaryDetectionAlarm:16777329,SmokeDetectorAlarm:16777330,LowTemperatureAlarm:16777331,AcousticAlarm:16777332,DoorAlarm:16777333,MedicalAlarmWithVoiceAlarm:16777334,BedAlarm:16777335,AssistanceAlarmWithVoiceAlarm:16777336,KitchenAlarm:16777337,LivingroomAlarm:16777338,HallAlarm:16777339,ToiletAlarm:16777340,SurroundingAlarm:16777341,GasAlarm:16777342,LightFailureAlarm:16777343,FireAlarm:16777344,HeaterFailureAlarm:16777345,VoiceTestAlarm:16777346,PowerFailAlarm:16777347,AbsentAlarm:16777348,PresentAlarm:16777349,PoweronAlarm:16777350,VoicePowerRestoreAlarm:16777351,TamperAlarm:16777352,MaintenanceAlarm:16777353,MovementDetectionAlarm:16777354,SmokeAlarm:16777355,SleepingroomAlarm:16777356,BathroomAlarm:16777357,DiningroomAlarm:16777358,StudyAlarm:16777359,StairsAlarm:16777360,GarageAlarm:16777361,GardenAlarm:16777362,FallDetectorAlarm:16777363,ElevatorAlarm:16777364,GeoFenceAlarm:16777365,InactivitieDetectAlarm:16777366,PeriodicCheckReportAlarm:16777367,FrequentOutOfBedAlarm:16777368,PullCordAlarm:16777369,CareWorkerAbsentVoiceAlarm:16777370,MoistureAlarm:16777371,VoiceRemoteLostAlarm:16777372,GeneralDeviceErrorAlarm:16777373,CoDetectorAlarm:16777375,ServiceReportAlarm:16777376,VoicePowerFaultAlarm:16777377,VoiceRemoteBatteryFaultAlarm:16777378,VoiceBatteryFaultAlarm:16777379,VoiceWardenAttendanceAlarm:16777380,UrgencyAlarm:16777381,ExternalAlarm:16777382,InvalidEndOfAlarm:16777383,VoiceIntruderAlarm:16777385,CareWorkerPresentVoiceAlarm:16777386,VoiceBatteryRestoreAlarm:16777387,CriteriumFaultAlarm:16777388,DeviceCommunicationLostAlarm:16777389,
DeviceCommunicationRestoreAlarm:16777390,AssaultAlarm:16777391,PullCordTamperAlarm:16777392,WanderAlarm:16777393,LoneWorkerAlarm:16777394,VoicePanicButtonAlarm:16777395,Error1Alarm:16777396,Error2Alarm:16777397,Error3Alarm:16777398,Error4Alarm:16777399,Error5Alarm:16777400,UnwantedVisitorAlarm:16777401,ReservedAlarm:16777402,NewSubscriberAlarm:16777403,ClosedSubscriberAlarm:16777404,ForgottenMedicationAlarm:16777405,VideoAlarm:16777406,MobileAlarm:16777407,WristbandOffAlarm:16777408,WristbandOnAlarm:16777409,NoActivityAlarm:16777410,WorseningHealthAlarm:16777411,TelephoneAlarm:16777412,TelephoneCallAlarm:16777413,ManualAlarm:16777414,DialAlarm:16777415,OperatorEndAlarm:16777415,LogStartAlarm:16777416,MainAlarmNoVoiceAlarm:16777416,DevicePowerFailAlarm:16777417,TelephoneLineFaultAlarm:16777418,BatteryFaultAlarm:16777419,ExternalBatteryFaultAlarm:16777420,DisconnectAlarm:16777421,LightFailureAlarmNoVoiceAlarm:16777422,FireAlarmNoVoiceAlarm:16777423,HeaterFailureAlarmNoVoiceAlarm:16777424,SystemAlarm:16777425,ProtocolTimeoutAlarm:16777426,DeviceIdErrorAlarm:16777427,AlarmIdErrorAlarm:16777428,IntruderDetectionAlarm:16777429,SmokeDetectorAlarmNoVoiceAlarm:16777430,LowTemperatureAlarmNoVoiceAlarm:16777431,GasAlarmNoVoiceAlarm:16777432,MoistureAlarmNoVoiceAlarm:16777433,ManualAlarmNoVoiceAlarm:16777434,DoorAlarmNoVoiceAlarm:16777435,GeneralInputAlarm:16777436,Input1TestAlarm:16777437,Input2TestAlarm:16777438,Input3TestAlarm:16777439,Input4TestAlarm:16777440,Input5TestAlarm:16777441,Input6TestAlarm:16777442,Input7TestAlarm:16777443,Input8TestAlarm:16777444,Input9TestAlarm:16777445,BedAlarmNoVoiceAlarm:16777446,HeaterAlarmNoVoiceAlarm:16777447,ToiletAlarmNoVoiceAlarm:16777448,KitchenAlarmNoVoiceAlarm:16777449,LivingroomAlarmNoVoiceAlarm:16777450,HallAlarmNoVoiceAlarm:16777451,AbsentAlarmNoVoiceAlarm:16777452,PresentAlarmNoVoiceAlarm:16777453,PoweronAlarmNoVoiceAlarm:16777454,SurroundingAlarmNoVoiceAlarm:16777455,EpilepsyAlarm:16777456,DementiaAlarm:16777457,TestAlarm:16777458,MedicalAlarm:16777459,AssistanceAlarm:16777461,StartInterruptorAlarm:16777462,ExternAlarm:16777463,MaintenanceAlarmNoVoiceAlarm:16777464,MovementAlarm:16777465,DeviceLostAlarm:16777466,DeviceVerifyAlarm:16777467,WatchdogReportAlarm:16777468,SmokeDetectorFailureNoVoiceAlarm:16777469,LocalResetAlarm:16777470,RemoteBatteryFaultAlarm:16777471,RemoteLostAlarm:16777472,InactivitieDetectNoVoiceAlarm:16777473,ServiceReadyAlarm:16777474,RemoteLongDistanceAlarm:16777475,BaseStationLostAlarm:16777476,WardenAttendanceAlarm:16777477,BaseStationErrorAlarm:16777478,LogAlarm:16777479,DeviceCommunicationLostNoVoiceAlarm:16777480,DeviceCommunicationRestoreNoVoiceAlarm:16777481,SmokeDetectorStartupAlarm:16777482,BatteryFullAlarm:16777483,IntruderAlarm:16777484,ErrorInMessageAlarm:16777485,PanicButtonAlarm:16777486,DevicePowerRestoreAlarm:16777487,TelephoneLineRestoreAlarm:16777488,BatteryRestoreAlarm:16777489,DevicePoweronAlarm:16777490,SmokeDetectorRestoreAlarm:16777491,LowTempDetectorRestoreAlarm:16777492,IntruderDetectorRestoreAlarm:16777493,RemoteCommunicationRestoreAlarm:16777494,RemoteFoundAlarm:16777495,SystemError1ReportAlarm:16777496,SystemError2ReportAlarm:16777497,SystemError3ReportAlarm:16777498,SystemError4ReportAlarm:16777499,SystemError5ReportAlarm:16777500,SystemError6ReportAlarm:16777501,SystemError7ReportAlarm:16777502,SystemError8ReportAlarm:16777503,SystemError9ReportAlarm:16777504,SystemError10ReportAlarm:16777505,SystemError11ReportAlarm:16777506,SystemError12ReportAlarm:16777507,SystemError13ReportAlarm:16777508,SystemError14ReportAlarm:16777509,SystemError15ReportAlarm:16777510,SystemError16ReportAlarm:16777511,SystemError17ReportAlarm:16777512,SystemError18ReportAlarm:16777513,SystemError19ReportAlarm:16777514,SystemError20ReportAlarm:16777515,LocationVoiceStartAlarm:16777516,AcousticAlarmNoVoiceAlarm:16777516,FloodDetectorAlarm:16777517,FloodDetectorAlarm2Alarm:16777518,FloodDetectorAlarm3Alarm:16777519,FloodDetectorAlarm4Alarm:16777520,FloodDetectorAlarm5Alarm:16777521,NotToBedAlarm:16777522,NotOutOfBedAlarm:16777523,OutOfBedAlarm:16777524,Sleepingroom1Alarm:16777525,Sleepingroom2Alarm:16777526,RadioOutputModule1Alarm:16777527,RadioOutputModule2Alarm:16777528,RadioOutputModule3Alarm:16777529,RadioOutputModule4Alarm:16777530,Bathroom1Alarm:16777531,Bathroom2Alarm:16777532,ToiletDownstairsAlarm:16777533,ToiletOutsideAlarm:16777534,Kitchen1Alarm:16777535,Kitchen2Alarm:16777536,Livingroom1Alarm:16777537,Livingroom2Alarm:16777538,Garage1Alarm:16777539,Garage2Alarm:16777540,FrontYardAlarm:16777541,BackYardAlarm:16777542,AcousticDetector1Alarm:16777543,AcousticDetector2Alarm:16777544,AcousticDetector3Alarm:16777545,AcousticDetector4Alarm:16777546,AcousticDetector5Alarm:16777547,ExtremeTemperatureDetectorAlarm:16777548,ExtremeTemperatureDetectorLowAlarm:16777549,ExtremeTemperatureDetectorHighAlarm:16777550,PushButtonFallDetectorAlarm:16777551,WanderDetectorAlarm:16777552,FallDetector2Alarm:16777553,SensorFailureAlarm:16777554,SensorLifetimeExpiredAlarm:16777555,Epilepsy2Alarm:16777556,HeartProblemsAlarm:16777557,SupervisorOnLocationAlarm:16777558,PersonDownAlarm:16777559,TemperatureLowAlarm:16777560,TemperatureRisingAlarm:16777561,BedInuseAlarm:16777562,ChairInUseAlarm:16777563,BathroomInUseAlarm:16777564,PremisesInUseAlarm:16777565,SupervisorLeftLocationAlarm:16777566,ChairAbandonedAlarm:16777567,BedLevelAlarm:16777568,SystemTestModeAlarm:16777569,AnounceBatteryFailAlarm:16777571,InBatteryLoaderAlarm:16777576,RemovedFromBatteryLoaderAlarm:16777577,DoorLeftOpenAlarm:16777578,BackupDeviceCommunicationLostNoVoiceAlarm:16777580,BackupDeviceCommunicationRestoreNoVoiceAlarm:16777581,ParkinsonAlarm:16777592,OutsideGeoFenceAreaAlarm:16777596,InsideGeoFenceAreaAlarm:16777597,OutsideGeoFenceAreaReportAlarm:16777598,InsideGeoFenceAreaReportAlarm:16777599,PeriodicMessageNotAcknowledgedAlarm:16777600,PeriodicMessageAcknowledgedAlarm:16777601,AlarmunitNoRFdevicesAlarm:16777604,ExternalAlarmRestoredAlarm:16777605,AlarmRecoveredAlarm:16777615,LocationVoiceEndAlarm:16777615,HomeUnitOkAlarm:16777616,SubscriberOkAlarm:16777617,PanicRestoreAlarm:16777618,BatteryFaultyAlarm:16777619,ReminderAlarm:16777620,PreviousSessionCommunicationErrorAlarm:16777621,IncontinenceAlarm:16777622,FallDetectionOnAlarm:16777623,FallDetectionOffAlarm:16777624,DevicePowerdownAlarm:16777625,SimulatedAlarm:16777626,RepeatedCallNoVoiceAlarm:16777627,IncommingCallAlarm:16777628,IntruderAlarmOnAlarm:16777629,IntruderAlarmOffAlarm:16777630,TeleMedicineAlarm:16777631,AcknowledgementAlarm:16777632,TeleMedicineErrorAlarm:16777633,TelemedicineAlarm:16777634,Movement2Alarm:16777635,BadMeasurementDataAlarm:16777636,BraceletOnAlarm:16777637,BraceletOffAlarm:16777638,BloodPressureHighAlarm:16777639,PulseAlarm:16777640,BodyTemperatureAlarm:16777641,TelemedicineCancledAlarm:16777642,TelemedicineTimeoutAlarm:16777643,ServiceAlarm:16777645,TeleMedicineTresholdAlarm:16777646,TeleMedicineCriticalAlarm:16777646,DeviceResetAlarm:16777647,AlarmZoneShortedAlarm:16777648,FalseAlarm:16777649,DeviceRegisteredAlarm:16777650,AlarmDeactivatedAlarm:16777651,CareWorkerAbsentNoVoiceAlarm:16777652,CareWorkerPresentNoVoiceAlarm:16777653,CareWorkerMobilizedNoVoiceAlarm:16777654,ActivityMonitorOnAlarm:16777655,ActivityMonitorOffAlarm:16777656,RadioRestoreAlarm:16777657,ActionInformationAlarm:16777658,NurseCallAlarm:16777659,DoorMatAlarm:16777660,TamperRestoreAlarm:16777661,TamperNoVoiceAlarm:16777662,FallDetectorNoVoiceAlarm:16777663,CareWorkerRefusedNoVoiceAlarm:16777664,GeoFenceAlarmNoVoiceAlarm:16777665,GeoFenceReportAlarm:16777666,ResetInactivityAlarm:16777667,TransmitterOutOfRangeAlarm:16777668,TransmitterInRangeAlarm:16777669,RemoteBatteryRestoreAlarm:16777670,NoAlarmAlarm:16777671,RadioFailureAlarm:16777672,CareworkerDoneAutomaticallyAlarm:16777673,SmokeDetectorBatteryLowAlarm:16777674,TransmitterLongRangeAlarm:16777675,PositionUpdateAlarm:16777676,PositionRequestByPhoneAlarm:16777677,PositionRequestBySmsAlarm:16777678,TraceOnAlarm:16777679,TraceOffAlarm:16777680,PositionUpdateRegistrationAlarm:16777681,PositionRequestByPhoneRegistrationAlarm:16777682,PositionRequestBySmsRegistrationAlarm:16777683,TraceOnRegistrationAlarm:16777684,TraceOffRegistrationAlarm:16777685,DoorOpenRequestAlarm:16777686,DoorOpenCommandAlarm:16777687,PinVerifyRequestAlarm:16777688,SerialNumberInputAlarm:16777689,IgnitionAlarm:16777690,StatusAlarmInputAlarm:16777691,SpeedViolationAlarm:16777692,KeyCodeRequestAlarm:16777693,KeyCodeChangeAlarm:16777694,UnrequestedDataAlarm:16777695,MedicationAlarm:16777696,MedicationTakenAlarm:16777697,MedicationNotTakenAlarm:16777698,NewTrayAlarm:16777699,OnlineAlarm:16777700,NoSchematicAlarm:16777701,UnknownMessageAlarm:16777702,TimePeriodExpiredAlarm:16777703,WrongTemperatureAlarm:16777706,FlatBatteryAlarm:16777707,KidnapAlarm:16777708,CarJackAlarm:16777709,CollisionAlarm:16777710,AssistanceRequestAlarm:16777711,TrailerUncoupledAlarm:16777712,TrailerUncoupledRestoreAlarm:16777713,EmergencyStopAlarm:16777714,EmergencyStopRestoreAlarm:16777715,IncontinenceBatteryLowAlarm:16777716,NotInBedDetectorBatteryLowAlarm:16777717,NotOutOfBedDetectorBatteryLowAlarm:16777718,OutOfBedDetectorBatteryLowAlarm:16777719,BatteryLoadingAlarm:16777720,SimReplacedAlarm:16777721,CriteriaNotSupportedAlarm:16777722,ChargingInterruptedAlarm:16777723,ProgramModeEntryAlarm:16777734,ProgramModeExitAlarm:16777735,DownloadStartAlarm:16777736,TimeDateResetAlarm:16777737,GasDetectionRestoreAlarm:16777738,TeleMedicineWarningAlarm:16777746,InactivityRestoredAlarm:16777765,DeviceRestoredAlarm:16777766,DeviceResultAlarm:16777767,Test2Alarm:16777771,NetworkConnectionErrorAlarm:16777775,NetworkConnectionRestoredAlarm:16777776,GSMNetworkerrorAlarm:16777778,GSMNetworkRestoredAlarm:16777779,UnknownMeaningFirstAlarm:16777816,UnknownMeaningLastAlarm:16777915,AdministrationAlarm:16777916,SubAlarm:16777917,LoneWorkerJobAlarm:16777918,PortStatusAlarm:16778016,ProgrammingSuccesfullAlarm:16778017,NoSystemAcknowledgeReceivedAlarm:16778018,LogEndAlarm:16778115,InternalStartAlarm:16778116,InterfaceTimedoutAlarm:16778116,SystemPowerFailAlarm:16778117,SystemPowerRestoreAlarm:16778118,LineFaultAlarm:16778119,LineRestoreAlarm:16778120,asBatteryFaultAlarm:16778121,asBatteryRestoredAlarm:16778122,BridgeStopAlarm:16778123,BridgeStartAlarm:16778124,LocalDiskAlarm:16778125,ExceptionAlarm:16778126,NetworkAlarm:16778127,TransactionErrAlarm:16778128,LogFileCopyAlarm:16778129,TransactionOkAlarm:16778130,CardLostAlarm:16778131,CardFoundAlarm:16778132,CardApplicErrAlarm:16778133,CleanupFailAlarm:16778134,AutoProcessFailAlarm:16778135,ServiceFaultAlarm:16778136,ServiceRestoreAlarm:16778137,AudioNetworkFailAlarm:16778138,AudioNetworkRestoreAlarm:16778139,AudioRecorderLostAlarm:16778140,DuplicateLocationAlarm:16778141,DatabaseBackFailAlarm:16778142,AutoCloseAddedAlarm:16778143,AutoCloseRemovedAlarm:16778144,LoopBackRestoreAlarm:16778145,SmsModemLostAlarm:16778146,SmsModemRestoreAlarm:16778147,UmoTestAlarm:16778148,LoopBackFailAlarm:16778149,SmsModemNetworkLostAlarm:16778150,SmsModemNetworkRestoreAlarm:16778151,SmsModemSimNotInsertAlarm:16778152,SmsModemSimRestoreAlarm:16778153,UnknownSmsReceivedAlarm:16778154,AutoCloseStartedAlarm:16778155,CPUUsageLimitAlarm:16778156,DiskUsageLimitAlarm:16778157,MemoryUsageLimitAlarm:16778158,AudioRecorderFailureAlarm:16778159,ServiceModeStartAlarm:16778160,ServiceModeStopAlarm:16778161,UmoEscapeWarningAlarm:16778162,BackupAlarm:16778163,SwitchToStandbyAlarm:16778164,SwitchToActiveAlarm:16778165,ForcedCheckDoneAlarm:16778166,LoopbackTestAlarm:16778167,DialinWhileDialoutAlarm:16778168,InterfaceHardwareErrorAlarm:16778169,VoicemailWarningAlarm:16778170,CardDisconnectAlarm:16778171,CardWatchdogAlarm:16778172,GuardProtocolAlarm:16778173,CardConflictAlarm:16778174,ReplicationErrorAlarm:16778175,ProtocolErrorMinAlarm:16778176,ProtocolErrorAlarm:16778176,ProtocolError1Alarm:16778177,ProtocolError2Alarm:16778178,ProtocolError3Alarm:16778179,ProtocolError4Alarm:16778180,ProtocolError5Alarm:16778181,ProtocolError6Alarm:16778182,ProtocolError7Alarm:16778183,ProtocolError8Alarm:16778184,ProtocolError9Alarm:16778185,ProtocolErrorMaxAlarm:16778185,NetworkCommunicationRestoreAlarm:16778186,NetworkCommunicationTimeoutAlarm:16778187,NetworkCommunicationErrorAlarm:16778189,ExternalServiceCommunicationLostAlarm:16778190,ExternalServiceCommunicationRestoreAlarm:16778191,DataExportSucceededAlarm:16778192,DataExportRepeatedAttemptAlarm:16778193,DataExportFailedAlarm:16778194,ForcedProcessDbDisconnectAlarm:16778195,SmsModemRoamingAlarm:16778196,IncompleteAlarm:16778206,UmoTest2Alarm:16778210,WatchdogAlarm:16778211,AlarmConflictAlarm:16778212,AlarmLostAlarm:16778213,AlarmCleanedAlarm:16778214,CriteriumErrorAlarm:16778215,InternalEndAlarm:16778215,AutoCriteriumAlarm:16778216,AutoCriteriumStartAlarm:16778217,AutoCriteriumEndAlarm:16779215,EventCriteriumStartAlarm:16779216,EventCriteriumEndAlarm:16780215,MaxCriteriumAlarm:16780216,OpenIncidentRequest:33554432,HoldIncidentRequest:33554433,ReleaseIncidentRequest:33554434,CloseIncidentRequest:33554435,TakeoverIncidentRequest:33554436,NewIncidentSourceRequest:33554437,AssistanceRequiredRequest:33554438,AssistanceNotRequiredRequest:33554439,AssistanceMobilizedRequest:33554440,AssistanceDoneRequest:33554441,AcceptConferencePartyRequest:33554442,HoldConferencePartyRequest:33554443,StartConferencePartyRequest:33554444,CloseConferencePartyRequest:33554445,PersonContactRequest:33554446,CaregiverMobilizedRequest:33554447,CaregiverArrivedRequest:33554448,CaregiverDoneRequest:33554449,AddNoteRequest:33554450,RemoveNoteRequest:33554451,PrintRequest:33554452,EmailRequest:33554453,FaxRequest:33554454,SmsRequest:33554455,AddReminderRequest:33554456,RemoveReminderRequest:33554457,DismissReminderRequest:33554458,NewLoneworkerJobRequest:33554459,ExtendLoneworkerJobRequest:33554460,CancelLoneworkerJobRequest:33554461,DialPhoneNumberRequest:33554462,CancelDialRequest:33554463,CloseConferenceRequest:33554464,CloseIncidentToFollowUpRequest:33554465,GeneralDeviceControl:50331648,OpenDoorControl:50331649,TraceControl:50331650,TrackingControl:50331651,ForcedConnectControl:50331652,CarBlockControl:50331653,ServiceModeControl:50331654,DeviceProgrammingControl:50331655,DeviceReadoutControl:50331656,ForcedCheckControl:50331657,CareTimeoutWarning:67108864,CareRefusedWarning:67108865,BusyContactChannelWarning:67108866,NoAutoCareInfoWarning:67108867,AutoCareOverallTimeoutWarning:67108868,ContactChannelError:83886080,ForceReleaseIncidentSystem:100663296,UpdateIncidentSystem:100663297,UpdateConferenceSystem:100663298,UserDefinedInfo:117440512,IncidentMemoViewedInfo:117440513,TechnicalEventFollowupInfo:117440514,CaregiverRefusedInfo:117440515,AutoCareStartedInfo:117440516,AutoCareTerminatedInfo:117440517,TraceData:134217728,CaregiverCalledStatus:150994944,CaregiverMobilizedStatus:150994945,CaregiverArrivedStatus:150994946,CaregiverSignedOutStatus:150994947,OperatorRegistration:167772160,OperatorUnregistration:167772161,DeviceConnected:184549376,DeviceDisconnected:184549377}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("genderValues",{Unknown:0,Male:1,Female:2}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("identityOwnerType",{None:0,Caregiver:1,DeviceManager:2,Operator:4,Subscriber:8,Debtor:16}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("incidentStateValues",{Unknown:0,Free:1,Inuse:2,Closed:3,New:4,FollowUp:5}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("invoiceAddressTypeValues",{Unknown:0,ResidenceAddress:1,DebtorAddress:2,InvoiceAddress:3}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("leaseCountCategoryValues",{Unknown:0,PersonAlarmAnaloge:1,PersonAlarmAnalogeSIP:2,IPAlarmSIPAudio:3,IPAlarmXMLInterface:4,MobileAlarmTalkMeHome:5,MobileAlarmTrackAndTrace:6,SMSInterface:7,TelemedicineDirect:8,TelemedicineIndirect:9,TelemedicineMedicineMonitoring:10,VideoSIPVideo:11,VideoMonitoring:12,KeySafe:13,DoorSystem:14,NoTax:15}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("loginOwningTypeValues",{None:0,Operator:1,Caregiver:2,Subscriber:4,Executable:8,Warden:16,Technician:32}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("operatorMessageType",{None:0,OperatorRequest:1,OperatorResult:2,IncidentUpdateNotification:3,ConferenceUpdateNotification:4,ConferenceUpdateRequest:5,ConferenceUpdateResult:6,ConferencesNotification:7,Alive:8,SystemActionRequest:9,SystemStatusUpdate:10}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("personalizationContexts",{DevicesInClientInfo:0,SubscribersInClientInfo:1,SubscriberWizardInClientInfo:2,ResidencesInClientInfo:3,SchemesInClientInfo:4,IncidentsInClientInfo:5,ProfessionalCaregiversInClientInfo:6,RelationalCaregiversInClientInfo:7,DeviceWizardInClientInfoConfiguration:8,ProfessionalAsRelationalCaregiversInClientInfo:9,SubscriberWizardInIntakerApp:10,ResidenceWizardInClientInfoConfiguration:11,RelationalCaregiverWizardInClientInfoConfiguration:12,ProfessionalCaregiverWizardInClientInfoConfiguration:13,SchemeWizardInClientInfoConfiguration:14,LoginsInSystemInfo:15,TraceLogsInSystemInfo:16,ReportsInSystemInfo:17,ReportsWizardInSystemInfo:18,UsersInSystemInfo:19,OperatorsInSystemInfo:20,OperatorsWizardInSystemInfo:21,RelationalCaregiverWizardInClientInfoConfigurationWithoutNotesTab:22}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("fieldType",{Unknown:0,Text:1,Date:2,DateTime:3,Password:4,Number:5,Textarea:6,Checkbox:7,DeviceCodeMask:8,Email:9,SelectOrganizationLevel1:10,SelectDeviceLinkingType:11,SelectDeviceType:12,SelectDeviceManager:13,SelectDeviceState:14,SelectDeviceReadyForPlacementState:15,SelectGender:16,SelectTitle:17,SelectSalutation:18,SelectLanguage:19,SelectSubscriberState:20,SelectMaritalState:21,SelectPointOfEntry:22,SelectResidenceType:23,SelectCity:24,SelectCountry:25,SelectRegion:26,SelectAspect:27,SelectAspectValue:28,SelectOrganizationLevel1AndBelow:29,SelectTemplate:30,SelectContactItemType:31,SelectMedicine:32,SelectMedicationPriority:33,SelectMedicalCondition:34,SelectMedicalConditionValue:35,SelectMedicalPriority:36,SelectCaregiverCategory:37,SelectCaregiverType:38,SelectConsumerState:39,SelectPaymentMethod:40,SelectInsurer:41,SelectTerminationReason:42,SelectTariff:43,SelectDistrict:44,SelectKeyLocation:45,SelectNonPeriodicalCostForTariffId:46,SelectPeriodicalCostForTariffId:47,SelectLinkAsType:48,SelectRelationType:49,SelectLinkingOfDevice:50,SelectSkill:51,SelectSelectableCity:52,SelectConsumerGroup:53,SelectAbsenceReason:54,SelectProject:55,SelectProjectDetail:56,SelectSecurityType:57,SelectEventSourceType:58,SelectTraceType:59,SelectReportEntityType:60,SelectReportType:61,SelectOrganization:62,SelectRoles:63,SelectImage:64,Time:65,SelectCallbackAppointmentType:66,SelectLanguageNonSelectable:67,SelectPostalCodeAPI:68,SelectNullableBoolean:69,SelectExternalWebLinkType:70,SelectModule:71}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("personalizationPanels",{DevicePanel:0,SubscriberPanel:1,ResidencePanel:2,SchemePanel:3,IncidentPanel:4,CaregiverPanel:5,SelectPanel:6,FinancialPanel:7,MedicalPanel:8,MedicationPanel:9,LoginPanel:10,TraceLogPanel:11,ReportPanel:12,UserPanel:13,OperatorPanel:14}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("personalizationTabs",{DeviceTab:0,SubscriberTab:1,ResidenceTab:2,SchemeTab:3,IncidentTab:4,CaregiverTab:5,FinancialTab:6,MedicalTab:7,MedicationTab:8,SelectTab:9,ContactItemsTab:10,AvailabilityTab:11,CharacteristicsTab:12,NotesTab:13,AuditTrailTab:14,StateHistoryTab:15,SubscriberPartnersTab:16,TestCallingTab:17,EventsTab:18,OperatorActionsTab:19,CaregiverActionsTab:20,LoginTab:21,TraceLogTab:22,ReportTab:23,OrganizationReportTab:24,UserTab:25,OperatorTab:26,SecurityTab:27,UserApprovalTab:28,UserLockTab:29,UserPasswordTab:30,UserRolesTab:31,OperatorApprovalTab:32,OperatorLockTab:33,OperatorPasswordTab:34,OperatorRolesTab:35,SubscriberWebLinksTab:36}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("postalCodeValidationResult",{UnknownResult:0,Valid:1,ProvinceUnknown:2,CityUnknownInProvince:3,PostalCodeUnknown:4}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("resultCodes",{None:0,InProgress:100,Success:200,GeneralError:500}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("roleLimitationsForDeletingValues",{None:0,IsDefault:1,HasUsersWithRole:2}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("serviceTaskStateValues",{Unknown:0,NotAssigned:1,Assigned:2,Planned:3,Finished:4}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("systemActionRequestType",{None:0,ReRegister:1}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("systemStatusTypes",{Healthy:0,LegacyUnavailable:1,IncidentProcessorUnavailable:2,ConferenceManagerUnavailable:3,Unknown:-1}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain.enums").constant("task",{Unknown:0,AbsenceReason_Create:1,AbsenceReason_Read:2,AbsenceReason_Update:3,AbsenceReason_Delete:4,Any_User_Update:5,AgreementType_Create:6,AgreementType_Read:7,AgreementType_Update:8,AgreementType_Delete:9,Appointment_Create:10,Appointment_Read:11,Appointment_Update:12,Appointment_Delete:13,AppointmentType_Create:14,AppointmentType_Read:15,AppointmentType_Update:16,AppointmentType_Delete:17,Aspect_Create:18,Aspect_Read:19,Aspect_Update:20,Aspect_Delete:21,AspectValue_Create:22,AspectValue_Read:23,AspectValue_Update:24,AspectValue_Delete:25,Audit_Read:26,Audit_Read_AccountabilityInfo:27,AutoAppointmentServiceSetting_Read:28,AutoAppointmentServiceSetting_Update:29,AvailableReport_Create:30,AvailableReport_Read:31,AvailableReport_Update:32,AvailableReport_Delete:33,Caregiver_Read:34,CaregiverLink_Create:35,CaregiverLink_Read:36,CaregiverLink_Update:37,CaregiverLink_Delete:38,CaregiverType_Create:39,CaregiverType_Read:40,CaregiverType_Update:41,CaregiverType_Delete:42,CareRequest_Read:43,CareRequest_Update:44,CareRequest_Subscription:45,City_Create:46,City_Read:47,City_Update:48,City_Delete:49,ClientDocument_Create:50,ClientDocument_Read:51,ClientDocument_Update:52,ClientDocument_Delete:53,CoInhabitantType_Create:54,CoInhabitantType_Read:55,CoInhabitantType_Update:56,CoInhabitantType_Delete:57,Company_Create:58,Company_Read:59,Company_Update:60,Company_Delete:61,ConferenceManager_DeviceStateChanged:62,ConferenceManager_ExtendConferenceLifetime:63,ConferenceManager_GetConferenceId:64,ConferenceManager_GetConferencePartId:65,ConferenceManager_GetConferenceParties:66,ConferenceManager_GetOrCreateConference:67,ConferenceManager_GetOrCreateConferenceParty:68,ConferenceManager_MoveConferencePartyTo:69,ConferenceManager_RemoveConference:70,ConferenceManager_RemoveConferenceParty:71,ConferenceManager_RequestConferencePartyState:72,ConferenceManager_SetConferencePartyConnection:73,ConsumerGroup_Create:74,ConsumerGroup_Read:75,ConsumerGroup_Update:76,ConsumerGroup_Delete:77,ConsumerState_Create:78,ConsumerState_Read:79,ConsumerState_Update:80,ConsumerState_Delete:81,ContactItemType_Create:82,ContactItemType_Read:83,ContactItemType_Update:84,ContactItemType_Delete:85,Contract_Create:86,Contract_Read:87,Contract_Update:88,Contract_Delete:89,ContractDocument_Create:90,ContractDocument_Read:91,ContractDocument_Update:92,ContractDocument_Delete:93,ContractHash_Create:94,ContractHash_Read:95,ContractHash_Update:96,ContractHash_Delete:97,Country_Create:98,Country_Read:99,Country_Update:100,Country_Delete:101,CurrentUser_Read:102,Debtor_Create:103,Debtor_Read:104,Debtor_Update:105,Debtor_Delete:106,Device_Create:107,Device_Read:108,Device_Update:109,Device_Delete:110,DeviceManagementSetting_Read:111,DeviceManager_Create:112,DeviceManager_Read:113,DeviceManager_Update:114,DeviceManager_Delete:115,DeviceType_Create:116,DeviceType_Read:117,DeviceType_Update:118,DeviceType_Delete:119,DeviceState_Create:120,DeviceState_Read:121,DeviceState_Update:122,DeviceState_Delete:123,DebugService_ApplicationList_Read:124,DebugService_CreateTraceLog:125,DebugService_CreateTraceLogSL:126,DebugService_ExtendSubscription:127,DebugService_ReadTraceLogPage:128,DebugService_ReadLoginTrailPage:129,DebugService_Subscribe:130,DebugService_TraceLevel_Update:131,DebugService_UnSubscribe:132,District_Create:133,District_Read:134,District_Update:135,District_Delete:136,DoctorReference_Create:137,DoctorReference_Read:138,DoctorReference_Update:139,DoctorReference_Delete:140,EmailService_SendMail:141,EmailService_SendMailWithAttachment:142,EmailService_SendMailTemplated:143,Event_Create:144,Event_Read:145,Event_Update:146,Event_Delete:147,EventAspect_Create:148,EventAspect_Read:149,EventAspect_Update:150,EventAspect_Delete:151,EventAspectCategory_Create:152,EventAspectCategory_Read:153,EventAspectCategory_Update:154,EventAspectCategory_Delete:155,EventAspectValue_Create:156,EventAspectValue_Read:157,EventAspectValue_Update:158,EventAspectValue_Delete:159,EventPriority_Create:160,EventPriority_Read:161,EventPriority_Update:162,EventPriority_Delete:163,EventProcedure_Create:164,EventProcedure_Read:165,EventProcedure_Update:166,EventProcedure_Delete:167,EventType_Create:168,EventType_Read:169,EventType_Update:170,EventType_Delete:171,ExternalWebLinkType_Read:172,GeneralDocument_Create:173,GeneralDocument_Read:174,GeneralDocument_Update:175,GeneralDocument_Delete:176,GeneralSetting_Read:177,GeneralSetting_Update:178,Incident_Create:179,Incident_Read:180,Incident_Update:181,Incident_Delete:182,IncidentKind_Create:183,IncidentKind_Read:184,IncidentKind_Update:185,IncidentKind_Delete:186,IncidentPriority_Create:187,IncidentPriority_Read:188,IncidentPriority_Update:189,IncidentPriority_Delete:190,IncidentProcessor_Subscription:191,IncidentProcessor_GetEventDetails:192,IncidentProcessor_GetEventsPage:193,IncidentProcessor_GetIncidentDetails:194,IncidentProcessor_GetIncidentsPage:195,IncidentProcessor_PutNewEventId:196,IncidentProcessor_PutNewOperatorRequest:197,Insurer_Create:198,Insurer_Read:199,Insurer_Update:200,Insurer_Delete:201,InsuranceClass_Create:202,InsuranceClass_Read:203,InsuranceClass_Update:204,InsuranceClass_Delete:205,InvoiceMethod_Create:206,InvoiceMethod_Read:207,InvoiceMethod_Update:208,InvoiceMethod_Delete:209,KeyLocation_Create:210,KeyLocation_Read:211,KeyLocation_Update:212,KeyLocation_Delete:213,Language_Create:214,Language_Read:215,Language_Update:216,Language_Delete:217,License_Read:218,Manage_WcfService:219,Manage_ServiceInfo_Read:220,Manage_ServiceInfo_Update:221,MaritalState_Create:222,MaritalState_Read:223,MaritalState_Update:224,MaritalState_Delete:225,MedicalCondition_Create:226,MedicalCondition_Read:227,MedicalCondition_Update:228,MedicalCondition_Delete:229,MedicalConditionValue_Create:230,MedicalConditionValue_Read:231,MedicalConditionValue_Update:232,MedicalConditionValue_Delete:233,MedicalInfo_Create:234,MedicalInfo_Read:235,MedicalInfo_Update:236,MedicalInfo_Delete:237,MedicalPriority_Create:238,MedicalPriority_Read:239,MedicalPriority_Update:240,MedicalPriority_Delete:241,Medication_Create:242,Medication_Read:243,Medication_Update:244,Medication_Delete:245,Medicine_Create:246,Medicine_Read:247,Medicine_Update:248,Medicine_Delete:249,Module_Read:250,NonPeriodicalCost_Create:251,NonPeriodicalCost_Read:252,NonPeriodicalCost_Update:253,NonPeriodicalCost_Delete:254,Operator_Create:255,Operator_Read:256,Operator_Update:257,Operator_Delete:258,Organization_Create:259,Organization_Read:260,Organization_Update:261,Organization_Delete:262,PaymentMethod_Create:263,PaymentMethod_Read:264,PaymentMethod_Update:265,PaymentMethod_Delete:266,PeriodicalCost_Create:267,PeriodicalCost_Read:268,PeriodicalCost_Update:269,PeriodicalCost_Delete:270,Person_Create:271,Person_Read:272,Person_Update:273,Person_Delete:274,Personalization_Create:275,Personalization_Read:276,Personalization_Update:277,Personalization_Delete:278,PointOfEntry_Create:279,PointOfEntry_Read:280,PointOfEntry_Update:281,PointOfEntry_Delete:282,ProfessionalCaregiver_Create:283,ProfessionalCaregiver_Read:284,ProfessionalCaregiver_Update:285,ProfessionalCaregiver_Delete:286,Project_Create:287,Project_Read:288,Project_Update:289,Project_Delete:290,PushNotificationSetting_Read:291,ReferralStatus_Create:292,ReferralStatus_Read:293,ReferralStatus_Update:294,ReferralStatus_Delete:295,Region_Create:296,Region_Read:297,Region_Update:298,Region_Delete:299,RelationalCaregiver_Create:300,RelationalCaregiver_Read:301,RelationalCaregiver_Update:302,RelationalCaregiver_Delete:303,RelationType_Create:304,RelationType_Read:305,RelationType_Update:306,RelationType_Delete:307,Report_Create:308,Report_Read:309,Report_Update:310,Report_Delete:311,Residence_Create:312,Residence_Read:313,Residence_Update:314,Residence_Delete:315,ResidenceType_Create:316,ResidenceType_Read:317,ResidenceType_Update:318,ResidenceType_Delete:319,ResponderSetting_Read:320,ResponderSetting_Update:321,Role_Create:322,Role_Read:323,Role_Update:324,Role_Delete:325,Salutation_Create:326,Salutation_Read:327,Salutation_Update:328,Salutation_Delete:329,ScheduledTaskType_Create:330,ScheduledTaskType_Read:331,ScheduledTaskType_Update:332,ScheduledTaskType_Delete:333,ScheduledTask_Create:334,ScheduledTask_Read:335,ScheduledTask_Update:336,ScheduledTask_Delete:337,ScheduledTask_Execute:338,Scheme_Create:339,Scheme_Read:340,Scheme_Update:341,Scheme_Delete:342,ServiceVersion_Read:343,Setting_Read:344,Setting_Update:345,Skill_Create:346,Skill_Read:347,Skill_Update:348,Skill_Delete:349,SkillEventType_Create:350,SkillEventType_Read:351,SkillEventType_Update:352,SkillEventType_Delete:353,Subscriber_Create:354,Subscriber_Read:355,Subscriber_Update:356,Subscriber_Delete:357,SubscriberExternalWebLink_Create:358,SubscriberExternalWebLink_Read:359,SubscriberExternalWebLink_Update:360,SubscriberExternalWebLink_Delete:361,SubscriberHoliday_Create:362,SubscriberHoliday_Read:363,SubscriberHoliday_Update:364,SubscriberHoliday_Delete:365,SubscriberHistory_Read:366,SubscriberState_Create:367,SubscriberState_Read:368,SubscriberState_Update:369,SubscriberState_Delete:370,SupportingDataManagementSetting_Read:371,Tariff_Create:372,Tariff_Read:373,Tariff_Update:374,Tariff_Delete:375,Task_Create:376,Task_Read:377,Task_Update:378,Task_Delete:379,TerminationReason_Create:380,TerminationReason_Read:381,TerminationReason_Update:382,TerminationReason_Delete:383,Title_Create:384,Title_Read:385,Title_Update:386,Title_Delete:387,UmoWebSetting_Read:388,UmoWebSetting_Update:389,User_Create:390,User_Read:391,User_Update:392,User_Delete:393,User_Reset:394,VatTariff_Create:395,VatTariff_Read:396,VatTariff_Update:397,VatTariff_Delete:398,Warden_Create:399,Warden_Read:400,Warden_Update:401,Warden_Delete:402}),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain").factory("organizationFactory",["domainDefaults",function(a){"use strict";var b={};return b.createSimpleOrganizationNote=function(a,b,c,d,e){return{CompanyId:a,Subject:b,Content:c,ValidPeriod:{FromDate:d,ToDate:e}}},b}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain").factory("residenceFactory",["domainDefaults",function(a){"use strict";var b={};return b.createSimpleResidence=function(b,c,d,e,f,g,h){return{StreetAddress:{HouseNumber:b,StreetName:c,CityId:d,RegionId:e,PostalCode:f},DefaultPhoneNumber:g,OrganizationId:h,StreetAddressId:a.emptyGuid}},b}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.domain").factory("subscriberFactory",["domainDefaults",function(a){"use strict";var b={};return b.createSimpleSubscriberNote=function(b,c,d,e,f,g){var h={PersonId:b,Subject:c,Content:d,IsEditDataRequired:e,IsPopUp:f,ValidPeriod:a.emptyString};return g&&(h.DefaultAttachment=g,
h.DefaultAttachmentMimeType=a.defaultImageMemeType,h.DefaultAttachmentName=a.emptyString),h},b.createSimpleSubscriber=function(a,b,c,d,e,f){return{Identity:{FirstName:a.firstName,Insertion:a.insertion,Gender:a.gender,BirthDate:b,LastName:a.surname},CitizenServiceNumber:a.serviceNr,DefaultRemark:a.remark,SubscriberStateId:c,OrganizationId:d,SubscriptionNumber:e,ResidenceId:f,SocialServiceNumber:{}}},b}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").constant("authorizationModuleConstants",{ClientManagement:"ClientManagement",SystemManagement:"SystemManagement",Personalization:"Personalization",Authorization:"Authorization",AuditTrail:"AuditTrail",MaintenanceInfo:"MaintenanceInfo",WellBeing:"WellBeing",Intaker:"Intaker",Responder:"Responder",DeviceInfo:"DeviceInfo"}),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").constant("authorizationTaskConstants",{none:"NoTaskForMethod",unknown:"Unknown",any_user_update:"Any_User_Update",agreementType_create:"AgreementType_Create",agreementType_read:"AgreementType_Read",agreementType_update:"AgreementType_Update",agreementType_delete:"AgreementType_Delete",appointment_create:"Appointment_Create",appointment_read:"Appointment_Read",appointment_update:"Appointment_Update",appointment_delete:"Appointment_Delete",appointmentType_create:"AppointmentType_Create",appointmentType_read:"AppointmentType_Read",appointmentType_update:"AppointmentType_Update",appointmentType_delete:"AppointmentType_Delete",aspect_create:"Aspect_Create",aspect_read:"Aspect_Read",aspect_update:"Aspect_Update",aspect_delete:"Aspect_Delete",aspectValue_create:"AspectValue_Create",aspectValue_read:"AspectValue_Read",aspectValue_update:"AspectValue_Update",aspectValue_delete:"AspectValue_Delete",audit_read:"Audit_Read",availableReport_create:"AvailableReport_Create",availableReport_read:"AvailableReport_Read",availableReport_update:"AvailableReport_Update",availableReport_delete:"AvailableReport_Delete",caregiver_read:"Caregiver_Read",caregiverLink_create:"CaregiverLink_Create",caregiverLink_read:"CaregiverLink_Read",caregiverLink_update:"CaregiverLink_Update",caregiverLink_delete:"CaregiverLink_Delete",caregiverType_create:"CaregiverType_Create",caregiverType_read:"CaregiverType_Read",caregiverType_update:"CaregiverType_Update",caregiverType_delete:"CaregiverType_Delete",careRequest_read:"CareRequest_Read",careRequest_update:"CareRequest_Update",careRequest_subscription:"CareRequest_Subscription",city_create:"City_Create",city_read:"City_Read",city_update:"City_Update",city_delete:"City_Delete",clientDocument_create:"ClientDocument_Create",clientDocument_read:"ClientDocument_Read",clientDocument_update:"ClientDocument_Update",clientDocument_delete:"ClientDocument_Delete",company_create:"Company_Create",company_read:"Company_Read",company_update:"Company_Update",company_delete:"Company_Delete",consumerGroup_create:"ConsumerGroup_Create",consumerGroup_read:"ConsumerGroup_Read",consumerGroup_update:"ConsumerGroup_Update",consumerGroup_delete:"ConsumerGroup_Delete",consumerState_create:"ConsumerState_Create",consumerState_read:"ConsumerState_Read",consumerState_update:"ConsumerState_Update",consumerState_delete:"ConsumerState_Delete ",contactItemType_create:"ContactItemType_Create",contactItemType_read:"ContactItemType_Read",contactItemType_update:"ContactItemType_Update",contactItemType_delete:"ContactItemType_Delete",contract_create:"Contract_Create",contract_read:"Contract_Read",contract_update:"Contract_Update",contract_delete:"Contract_Delete",contractDocument_create:"ContractDocument_Create",contractDocument_read:"ContractDocument_Read",contractDocument_update:"ContractDocument_Update",contractDocument_delete:"ContractDocument_Delete",contractHash_create:"ContractHash_Create",contractHash_read:"ContractHash_Read",contractHash_update:"ContractHash_Update",contractHash_delete:"ContractHash_Delete",country_create:"Country_Create",country_read:"Country_Read",country_update:"Country_Update",country_delete:"Country_Delete",coInhabitantType_create:"CoInhabitantType_Create",coInhabitantType_read:"CoInhabitantType_Read",coInhabitantType_update:"CoInhabitantType_Update",coInhabitantType_delete:"CoInhabitantType_Delete",currentUser_read:"CurrentUser_Read",debtor_create:"Debtor_Create",debtor_read:"Debtor_Read",debtor_update:"Debtor_Update",debtor_delete:"Debtor_Delete",debugService_applicationList_read:"DebugService_ApplicationList_Read",debugService_readLoginTrailPage:"DebugService_ReadLoginTrailPage",debugService_readTraceLogPage:"DebugService_ReadTraceLogPage",debugService_createTraceLog:"DebugService_CreateTraceLog",device_create:"Device_Create",device_read:"Device_Read",device_update:"Device_Update",device_delete:"Device_Delete",deviceManager_create:"DeviceManager_Create",deviceManager_read:"DeviceManager_Read",deviceManager_update:"DeviceManager_Update",deviceManager_delete:"DeviceManager_Delete",deviceType_create:"DeviceType_Create",deviceType_read:"DeviceType_Read",deviceType_update:"DeviceType_Update",deviceType_delete:"DeviceType_Delete",deviceState_create:"DeviceState_Create",deviceState_read:"DeviceState_Read",deviceState_update:"DeviceState_Update",deviceState_delete:"DeviceState_Delete",district_create:"District_Create",district_read:"District_Read",district_update:"District_Update",district_delete:"District_Delete",doctorReference_create:"DoctorReference_Create",doctorReference_read:"DoctorReference_Read",doctorReference_update:"DoctorReference_Update",doctorReference_delete:"DoctorReference_Delete",event_create:"Event_Create",event_read:"Event_Read",event_update:"Event_Update",event_delete:"Event_Delete",eventAspect_create:"EventAspect_Create",eventAspect_read:"EventAspect_Read",eventAspect_update:"EventAspect_Update",eventAspect_delete:"EventAspect_Delete",eventAspectCategory_create:"EventAspectCategory_Create",eventAspectCategory_read:"EventAspectCategory_Read",eventAspectCategory_update:"EventAspectCategory_Update",eventAspectCategory_delete:"EventAspectCategory_Delete",eventAspectValue_create:"EventAspectValue_Create",eventAspectValue_read:"EventAspectValue_Read",eventAspectValue_update:"EventAspectValue_Update",eventAspectValue_delete:"EventAspectValue_Delete",eventPriority_create:"EventPriority_Create",eventPriority_read:"EventPriority_Read",eventPriority_update:"EventPriority_Update",eventPriority_delete:"EventPriority_Delete",eventType_read:"EventType_Read",eventType_create:"EventType_Create",eventType_update:"EventType_Update",eventType_delete:"EventType_Delete",externalWebLinkType_read:"ExternalWebLinkType_Read",incident_create:"Incident_Create",incident_read:"Incident_Read",incident_update:"Incident_Update",incident_delete:"Incident_Delete",incidentKind_create:"IncidentKind_Create",incidentKind_read:"IncidentKind_Read",incidentKind_update:"IncidentKind_Update",incidentKind_delete:"IncidentKind_Delete",incidentPriority_create:"IncidentPriority_Create",incidentPriority_read:"IncidentPriority_Read",incidentPriority_update:"IncidentPriority_Update",incidentPriority_delete:"IncidentPriority_Delete",insurer_create:"Insurer_Create",insurer_read:"Insurer_Read",insurer_update:"Insurer_Update",insurer_delete:"Insurer_Delete",insuranceClass_create:"InsuranceClass_Create",insuranceClass_read:"InsuranceClass_Read",insuranceClass_update:"InsuranceClass_Update",insuranceClass_delete:"InsuranceClass_Delete",invoiceMethod_create:"InvoiceMethod_Create",invoiceMethod_read:"InvoiceMethod_Read",invoiceMethod_update:"InvoiceMethod_Update",invoiceMethod_delete:"InvoiceMethod_Delete",keyLocation_create:"KeyLocation_Create",keyLocation_read:"KeyLocation_Read",keyLocation_update:"KeyLocation_Update",keyLocation_delete:"KeyLocation_Delete",language_create:"Language_Create",language_read:"Language_Read",language_update:"Language_Update",language_delete:"Language_Delete",license_read:"License_Read",maritalState_create:"MaritalState_Create",maritalState_read:"MaritalState_Read",maritalState_update:"MaritalState_Update",maritalState_delete:"MaritalState_Delete",medicalCondition_create:"MedicalCondition_Create",medicalCondition_read:"MedicalCondition_Read",medicalCondition_update:"MedicalCondition_Update",medicalCondition_delete:"MedicalCondition_Delete",medicalConditionValue_create:"MedicalConditionValue_Create",medicalConditionValue_read:"MedicalConditionValue_Read",medicalConditionValue_update:"MedicalConditionValue_Update",medicalConditionValue_delete:"MedicalConditionValue_Delete",medicalInfo_create:"MedicalInfo_Create",medicalInfo_read:"MedicalInfo_Read",medicalInfo_update:"MedicalInfo_Update",medicalInfo_delete:"MedicalInfo_Delete",medicalPriority_create:"MedicalPriority_Create",medicalPriority_read:"MedicalPriority_Read",medicalPriority_update:"MedicalPriority_Update",medicalPriority_delete:"MedicalPriority_Delete",medication_create:"Medication_Create",medication_read:"Medication_Read",medication_update:"Medication_Update",medication_delete:"Medication_Delete",medicine_create:"Medicine_Create",medicine_read:"Medicine_Read",medicine_update:"Medicine_Update",medicine_delete:"Medicine_Delete",module_read:"Module_Read",nonPeriodicalCost_create:"NonPeriodicalCost_Create",nonPeriodicalCost_read:"NonPeriodicalCost_Read",nonPeriodicalCost_update:"NonPeriodicalCost_Update",nonPeriodicalCost_delete:"NonPeriodicalCost_Delete",operator_create:"Operator_Create",operator_read:"Operator_Read",operator_update:"Operator_Update",operator_delete:"Operator_Delete",organization_create:"Organization_Create",organization_read:"Organization_Read",organization_update:"Organization_Update",organization_delete:"Organization_Delete",paymentMethod_create:"PaymentMethod_Create",paymentMethod_read:"PaymentMethod_Read",paymentMethod_update:"PaymentMethod_Update",paymentMethod_delete:"PaymentMethod_Delete",periodicalCost_create:"PeriodicalCost_Create",periodicalCost_read:"PeriodicalCost_Read",periodicalCost_update:"PeriodicalCost_Update",periodicalCost_delete:"PeriodicalCost_Delete",person_create:"Person_Create",person_read:"Person_Read",person_update:"Person_Update",person_delete:"Person_Delete",personalization_create:"Personalization_Create",personalization_read:"Personalization_Read",personalization_update:"Personalization_Update",personalization_delete:"Personalization_Delete",pointOfEntry_create:"PointOfEntry_Create",pointOfEntry_read:"PointOfEntry_Read",pointOfEntry_update:"PointOfEntry_Update",pointOfEntry_delete:"PointOfEntry_Delete",professionalCaregiver_create:"ProfessionalCaregiver_Create",professionalCaregiver_read:"ProfessionalCaregiver_Read",professionalCaregiver_update:"ProfessionalCaregiver_Update",professionalCaregiver_delete:"ProfessionalCaregiver_Delete",referralStatus_create:"ReferralStatus_Create",referralStatus_read:"ReferralStatus_Read",referralStatus_update:"ReferralStatus_Update",referralStatus_delete:"ReferralStatus_Delete",region_create:"Region_Create",region_read:"Region_Read",region_update:"Region_Update",region_delete:"Region_Delete",relationalCaregiver_create:"RelationalCaregiver_Create",relationalCaregiver_read:"RelationalCaregiver_Read",relationalCaregiver_update:"RelationalCaregiver_Update",relationalCaregiver_delete:"RelationalCaregiver_Delete",relationType_create:"RelationType_Create",relationType_read:"RelationType_Read",relationType_update:"RelationType_Update",relationType_delete:"RelationType_Delete",report_create:"Report_Create",report_read:"Report_Read",report_update:"Report_Update",report_delete:"Report_Delete",residence_create:"Residence_Create",residence_read:"Residence_Read",residence_update:"Residence_Update",residence_delete:"Residence_Delete",residenceType_create:"ResidenceType_Create",residenceType_read:"ResidenceType_Read",residenceType_update:"ResidenceType_Update",residenceType_delete:"ResidenceType_Delete",responderSetting_read:"ResponderSetting_Read",intakerSetting_read:"IntakerSetting_Read",generalSetting_Read:"GeneralSetting_Read",generalSetting_Update:"GeneralSetting_Update",responderSetting_Read:"ResponderSetting_Read",responderSetting_Update:"ResponderSetting_Update",umoWebSetting_Read:"UmoWebSetting_Read",umoWebSetting_Update:"UmoWebSetting_Update",autoAppointmentServiceSetting_Read:"AutoAppointmentServiceSetting_Read",autoAppointmentServiceSetting_Update:"AutoAppointmentServiceSetting_Update",role_create:"Role_Create",role_read:"Role_Read",role_update:"Role_Update",role_delete:"Role_Delete",salutation_create:"Salutation_Create",salutation_read:"Salutation_Read",salutation_update:"Salutation_Update",salutation_delete:"Salutation_Delete",scheme_create:"Scheme_Create",scheme_read:"Scheme_Read",scheme_update:"Scheme_Update",scheme_delete:"Scheme_Delete",serviceVersion_read:"ServiceVersion_Read",setting_read:"Setting_Read",setting_update:"Setting_Update",skill_create:"Skill_Create",skill_read:"Skill_Read",skill_update:"Skill_Update",skill_delete:"Skill_Delete",skillEventType_create:"SkillEventType_Create",skillEventType_read:"SkillEventType_Read",skillEventType_update:"SkillEventType_Update",skillEventType_delete:"SkillEventType_Delete",subscriber_create:"Subscriber_Create",subscriber_read:"Subscriber_Read",subscriber_update:"Subscriber_Update",subscriber_delete:"Subscriber_Delete",subscriberHistory_read:"SubscriberHistory_Read",subscriberExternalWebLink_create:"SubscriberExternalWebLink_Create",subscriberExternalWebLink_read:"SubscriberExternalWebLink_Read",subscriberExternalWebLink_update:"SubscriberExternalWebLink_Update",subscriberExternalWebLink_delete:"SubscriberExternalWebLink_Delete",subscriberState_create:"SubscriberState_Create",subscriberState_read:"SubscriberState_Read",subscriberState_update:"SubscriberState_Update",subscriberState_delete:"SubscriberState_Delete",tariff_create:"Tariff_Create",tariff_read:"Tariff_Read",tariff_update:"Tariff_Update",tariff_delete:"Tariff_Delete",task_create:"Task_Create",task_read:"Task_Read",task_update:"Task_Update",task_delete:"Task_Delete",terminationReason_create:"TerminationReason_Create",terminationReason_read:"TerminationReason_Read",terminationReason_update:"TerminationReason_Update",terminationReason_delete:"TerminationReason_Delete",title_create:"Title_Create",title_read:"Title_Read",title_update:"Title_Update",title_delete:"Title_Delete",user_create:"User_Create",user_read:"User_Read",user_update:"User_Update",user_delete:"User_Delete",user_reset:"User_Reset",vatTariff_create:"VatTariff_Create",vatTariff_read:"VatTariff_Read",vatTariff_update:"VatTariff_Update",vatTariff_delete:"VatTariff_Delete",warden_create:"Warden_Create",warden_read:"Warden_Read",warden_update:"Warden_Update",warden_delete:"Warden_Delete"}),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").factory("CustomServiceUrl",function(){"use strict";function a(a,b){this.baseUrl=a,this.methodName=b,this.toString=function(){return[this.baseUrl,this.methodName].join("/")}}return a}),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").config(["settingsServiceProvider",function(a){a.addSetting({name:"SessionTokenString",options:{isTemporarily:!0}})}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").factory("GenericHttpErrorHandler",["$q","httpErrorCode",function(a,b){"use strict";function c(c){var d=c;this.handleError=function(a,b){var c=g(a.status,a);return i(a,b),c},this.handleAuthorizationError=function(a){var c=g(b.NotAuthorized);return i(null,null,a),c};var e=function(a){if(h(a))return f[a]},g=function(b,c){var d=e(b),f=!1;return angular.isFunction(d)&&(d(c),f=!0),a.reject({errorIsHandled:f,response:c||{}})},h=function(a){var b=angular.isFunction(f[a]),c=d.indexOf(a)>-1;return b&&c},i=function(a,b,c){console.log("============================================="),a&&b&&(console.log("Service error occured with error: "+a.status),console.log("to "+a.config.url),console.log("with data: "+JSON.stringify(a.data)),console.log("with request data: "+JSON.stringify(b))),c&&(console.log("is not sent to the service because lack of a security token"),console.log("to "+c)),console.log("---------------------------------------------")}}function d(a,b){for(var c=0;c<b.length;c++){var d=b[c];if(a===d)return c}return-1}function e(){return Object.keys(b).map(function(a){return b[a]})}var f={};return c.addErrorHandler=function(a,b){angular.isDefined(f[a])||(f[a]=b)},c.createWithAllErrorCodesEnabled=function(){var a=e(),b=new c(a);return b},c.createWithErrorCodesEnabled=function(a){var b=[];if(angular.isArray(arguments[0]))b=arguments[0];else for(var d=0;d<arguments.length;d++){var e=arguments[d];angular.isNumber(e)&&b.push(e)}return new c(b)},c.createWithAllErrorCodesEnabledExcept=function(){for(var a=e(),b=0;b<arguments.length;b++){var f=arguments[b],g=d(f,a);g!==-1&&a.splice(g,1)}return new c(a)},c}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").service("hashService",function(){"use strict";function a(a){function b(a,b){var c=(65535&a)+(65535&b),d=(a>>16)+(b>>16)+(c>>16);return d<<16|65535&c}function c(a,b){return a>>>b|a<<32-b}function d(a,b){return a>>>b}function e(a,b,c){return a&b^~a&c}function f(a,b,c){return a&b^a&c^b&c}function g(a){return c(a,2)^c(a,13)^c(a,22)}function h(a){return c(a,6)^c(a,11)^c(a,25)}function i(a){return c(a,7)^c(a,18)^d(a,3)}function j(a){return c(a,17)^c(a,19)^d(a,10)}function k(a,c){var d,k,l,m,n,o,p,q,r,s,t=new Array(1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298),u=new Array(1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225),v=new Array(64);a[c>>5]|=128<<24-c%32,a[(c+64>>9<<4)+15]=c;for(var w=0;w<a.length;w+=16){d=u[0],k=u[1],l=u[2],m=u[3],n=u[4],o=u[5],p=u[6],q=u[7];for(var x=0;x<64;x++)x<16?v[x]=a[x+w]:v[x]=b(b(b(j(v[x-2]),v[x-7]),i(v[x-15])),v[x-16]),r=b(b(b(b(q,h(n)),e(n,o,p)),t[x]),v[x]),s=b(g(d),f(d,k,l)),q=p,p=o,o=n,n=b(m,r),m=l,l=k,k=d,d=b(r,s);u[0]=b(d,u[0]),u[1]=b(k,u[1]),u[2]=b(l,u[2]),u[3]=b(m,u[3]),u[4]=b(n,u[4]),u[5]=b(o,u[5]),u[6]=b(p,u[6]),u[7]=b(q,u[7])}return u}function l(a){for(var b=[],c=(1<<o)-1,d=0;d<a.length*o;d+=o)b[d>>5]|=(a.charCodeAt(d/o)&c)<<24-d%32;return b}function m(a){a=a.replace(/\r\n/g,"\n");for(var b="",c=0;c<a.length;c++){var d=a.charCodeAt(c);d<128?b+=String.fromCharCode(d):d>127&&d<2048?(b+=String.fromCharCode(d>>6|192),b+=String.fromCharCode(63&d|128)):(b+=String.fromCharCode(d>>12|224),b+=String.fromCharCode(d>>6&63|128),b+=String.fromCharCode(63&d|128))}return b}function n(a){for(var b=p?"0123456789ABCDEF":"0123456789abcdef",c="",d=0;d<4*a.length;d++)c+=b.charAt(a[d>>2]>>8*(3-d%4)+4&15)+b.charAt(a[d>>2]>>8*(3-d%4)&15);return c}var o=8,p=0;return a=m(a),n(k(l(a),a.length*o))}this.CreatePasswordHash=function(b,c){var d=b.toLowerCase(),e=a(c),f=a(e+d),g=a(c+f);return g}}),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").constant("httpErrorCode",{Unknown:-1,NoConnection:0,BadRequest:400,NotAuthorized:401,Forbidden:403,NotFound:404,MethodNotAllowed:405,PayloadTooLarge:415,InternalServerError:500,ServiceUnavailable:503}),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").provider("moduleAuthorizationService",["authorizationModuleConstants",function(a){"use strict";var b=!1;this.supportModuleBasedAuthorization=function(a){b=a};var c=[];this.setApplicationSupportedModules=function(a){c=a},this.$get=["authorizationModuleConstants",function(a){var d=null,e={};return e.isAuthorizedForModule=function(c){if(b===!1)return!0;if(c===a.none)return!0;if(null===d)return!1;if("undefined"==typeof d[c])throw new Error("this module is not present in the authorizationModulesConstants or in this service version");return d[c]},e.getModules=function(){return d},e.setModules=function(a){d=a},e.clearModules=function(){d=null},e.getApplicationSupportedModules=function(){return c},e.isModuleAuthorizationSupported=function(){return b},e}]}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").service("pagingHelper",["$window",function(a){"use strict";this.retrieveFullResultSetFromService=function(b){function c(d,e){console.log(JSON.stringify(arguments));var f=Array.prototype.splice.call(arguments,2);return f[2].PageIndex=e,b.apply(null,f).then(function(b){if(a.isNullOrUndefined(b)||window.isNullOrUndefined(b.Rows)||window.isNullOrUndefined(b.TotalCount))return b;if(d=Array.prototype.concat.call(d,b.Rows),d.length<b.TotalCount){var g=Array.prototype.concat.call([d,++e],f);return c.apply(null,g)}return b.Rows=d,b})}var d=Array.prototype.concat.call([[],0],Array.prototype.splice.call(arguments,1));return c.apply(null,d)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").service("securityTokenService",["$timeout","settingsService",function(a,b){"use strict";var c,d,e=this,f=6e4,g=new Date,h=5,i=[];this.setToken=function(a){b.setSessionTokenString(a)},this.removeToken=function(){b.clearSessionTokenString(),j()},this.getToken=function(){return b.getSessionTokenString()},this.tokenIsPresent=function(){var a=b.getSessionTokenString();return null!==a&&"undefined"!=typeof a},this.setExperiationInMinutes=function(a){if(!this.tokenIsPresent())throw new Error("There is no token, so you cannot set the expiration in minutes");if(!Number.isFinite(a))throw new Error("expiration is not a number");c=a,console.log("expiration in minutes: "+a),this.renewTokenExpiration()},this.renewTokenExpiration=function(){Number.isFinite(c)!==!1&&k()},this.registerTokenExpirationCallback=function(a){if(!angular.isFunction(a))throw new Error("callback for token expiration is not a function");i.push(a)},this.isTokenExpired=function(){return g<=new Date};var j=function(){g=new Date,n()},k=function(){n();var b=c-h,e=b*f;l(e),d=a(m,e)},l=function(a){var b=new Date,c=b.getMilliseconds()+a;g=new Date(b.setMilliseconds(c))},m=function(){e.removeToken(),console.log("call token expired calls");for(var a=0;a<i.length;a++){var b=i[a];b()}},n=function(){d&&a.cancel(d)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").service("serviceRequestBodyFactory",["GenericHttpErrorHandler",function(a){"use strict";this.createSimplePageBody=function(a,b,c){return{pageDescriptor:c,filters:a,sort:b}},this.createComplexPageBody=function(a){return function(b,c,d,e){var f={pageDescriptor:e,filters:c,sort:d};return f[a]=b,f}},this.createSearchPageBody=function(a,b,c,d){return{searchText:a,pageDescriptor:d,filters:b,sort:c}},this.createParameteredBody=function(){var a=arguments;return function(){for(var b=arguments,c={},d=0;d<b.length;d++){var e=b[d],f=a[d];c[f]=e}return c}},this.createParameterlessBody=function(){return null}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").factory("StandardUmoxServiceUrl",["urlSettingsService",function(a){"use strict";function b(b,c){var d="clientGateway/WebHttpGatewayService.svc",e="json";this.serverName=b,this.methodName=c,this.toString=function(){var b=a.getBaseUrl();return[b,d,this.serverName,e,this.methodName].join("/")}}return b}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").factory("StandardUmoXWebSocketUrl",["urlSettingsService",function(a){"use strict";return function(){var b="OperatorGateway/OperatorGatewayService.svc",c="",d=a.getBaseUrl();return d.search("http://")!==-1?(c="ws://",d=d.replace("http://","")):d.search("https://")!==-1?(c="wss://",d=d.replace("https://","")):c="wss://",d=[c,d].join(""),[d,b].join("/")}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").provider("taskAuthorizationService",["authorizationTaskConstants",function(a){"use strict";var b=!1;this.supportTaskBasedAuthorization=function(a){b=a},this.$get=["authorizationTaskConstants",function(a){var c=null,d={};return d.isAuthorizedForTask=function(d){if(b===!1)return!0;if(d===a.none)return!0;if(null===c||angular.isDefined(d)===!1)return!1;if("undefined"==typeof c[d])throw new Error("this task is not present in the authorizationTasksConstants or in this service version");return c[d]},d.getTasks=function(){return c},d.setTasks=function(a){c=a},d.clearTasks=function(){c=null},d.isTaskAuthorizationSupported=function(){return b},d}]}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").service("umoOperationFactory",["$q","$window","webRequestService","GenericHttpErrorHandler","taskAuthorizationService",function(a,b,c,d,e){"use strict";this.createSecureProxyOperation=function(b,d,k){return g(d),h(k,b),i(b,k),function(){var g=b.toString(),h=j(arguments),i=f(arguments,d,h),l=e.isAuthorizedForTask(k);return l?c.authenticatedPost(g,i,h):a.reject("unauthorized exception")}},this.createSecureProxyDownloadOperation=function(b,d,k){return g(d),i(b,k),h(k,b),function(){var g=b.toString(),h=j(arguments),i=f(arguments,d,h),l=e.isAuthorizedForTask(k);return l?c.authenticatedDownloadPost(g,i,h):a.reject("unauthorized exception")}},this.createProxyOperation=function(a,b){return g(b),i(a),function(){var d=a.toString(),e=j(arguments),g=f(arguments,b,e);return c.post(d,g,e)}};var f=function(a,c,d){return b.isNullOrUndefined(d)===!1&&Array.prototype.pop.apply(a),c.apply(null,a)},g=function(a){if(!angular.isFunction(a))throw"data resolver is something other than error or no resolver at all"},h=function(a,b){if(!angular.isDefined(a))throw"task name is not present in authorization task constants mapping for service url : "+b},i=function(a,b){if("undefined"==typeof a)throw"url of proxy method is not defined of the method with task "+b},j=function(a){var b=a[a.length-1];return b instanceof d?b:null}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").provider("umoxServiceUrls",function(){"use strict";var a={},b={};this.setUmoxServiceUrls=function(b){a=b||a},this.setAlternativeServiceUrls=function(a){b=a||b},this.$get=["StandardUmoxServiceUrl","CustomServiceUrl",function(c,d){function e(a,e){return b[a]?new d(b[a],e):new c(a,e)}var f={};for(var g in a){f[g]={};for(var h=a[g],i=0;i<h.length;i++){var j=h[i];f[g][j]=e(g,j)}}return f}]}),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").constant("USER_ROLES",{all:"*",empty:"empty",installer:"installer",intaker:"intaker",subscriber:"subscriber",operator:"operator",caregiver:"caregiver"}),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").constant("USER_TYPES",{subscriber:"UT_Subscriber",operator:"UT_Operator",intaker:"UT_Intaker"}),angular.module("verklizan.umox.common.html5.vkz-webrequests.general").provider("webRequestService",function(){"use strict";var a=1e3,b=20*a;this.setTimeoutInMs=function(c){b=c*a},this.$get=["$http","$q","$window","securityTokenService","GenericHttpErrorHandler",function(a,c,d,e,f){function g(a,c){var d={params:a,timeout:b};return c&&(d.headers=c),d}function h(){var a=e.getToken();return{headers:{Identity:a}}}function i(a){return a.timeout=b,a}function j(a){return a.responseType="arraybuffer",a}function k(a,b,c){return b=m(b),b.handleError(a,c)}function l(a,b){return a=m(a),a.handleAuthorizationError(b)}function m(a){return a||o}var n={},o=f.createWithAllErrorCodesEnabled();n.get=function(c,d,e){return a.get(c,{params:d,timeout:b}).catch(function(a){return k(a,e)})},n.authenticatedGet=function(b,c,d){if(!e.tokenIsPresent())return l(d,b);var f=h();return a.get(b,g(c,f)).then(p).catch(function(a){return k(a,d)})},n.post=function(b,c,d){var e={};return i(e),a.post(b,c,e).catch(function(a){return k(a,d,c)})},n.authenticatedPost=function(b,c,d){if(!e.tokenIsPresent())return l(d,b);var f=h();return i(f),a.post(b,c,f).then(function(a){return p(),q(a)}).catch(function(a){return k(a,d,c)})},n.authenticatedDownloadPost=function(b,c,d){if(!e.tokenIsPresent())return l(d,b);var f=h();return i(f),j(f),a.post(b,c,f).then(function(a){return p(),q(a)}).catch(function(a){return k(a,d,c)})};var p=function(a){return e.renewTokenExpiration(),a},q=function(a){var b=null;if(!d.isNullOrUndefined(a.data))for(var c in a.data)c.endsWith("Result")&&(b=a.data[c]);return window.isNullOrUndefined(b)&&(b=a),b};return n}]}),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("appointmentManagementServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{readCurrentBlockingAppointment:a.createSecureProxyOperation(b.appointmentManagementService.readCurrentBlockingAppointment,c.createParameteredBody("calendarOwnerType","calendarOwnerId"),d.appointment_read),createRecurringAppointment:a.createSecureProxyOperation(b.appointmentManagementService.createRecurringAppointment,c.createParameteredBody("recurringAppointment","singleAppointmentId"),d.appointment_create),createSingleAppointment:a.createSecureProxyOperation(b.appointmentManagementService.createSingleAppointment,c.createParameteredBody("singleAppointment"),d.appointment_create),readAppointmentPage:a.createSecureProxyOperation(b.appointmentManagementService.readAppointmentPage,c.createSimplePageBody,d.appointment_read),readAppointmentTypePage:a.createSecureProxyOperation(b.appointmentManagementService.readAppointmentTypePage,c.createSimplePageBody,d.appointmentType_read),readRecurringAppointment:a.createSecureProxyOperation(b.appointmentManagementService.readRecurringAppointment,c.createParameteredBody("recurringAppointmentId"),d.appointment_read),readRecurringAppointmentOccurrence:a.createSecureProxyOperation(b.appointmentManagementService.readRecurringAppointmentOccurrence,c.createParameteredBody("recurringAppointmentId","recurrenceIndex"),d.appointment_read),readSingleAppointment:a.createSecureProxyOperation(b.appointmentManagementService.readSingleAppointment,c.createParameteredBody("singleAppointmentId"),d.appointment_read),updateRecurringAppointment:a.createSecureProxyOperation(b.appointmentManagementService.updateRecurringAppointment,c.createParameteredBody("recurringAppointment"),d.appointment_update),updateRecurringAppointmentOccurrence:a.createSecureProxyOperation(b.appointmentManagementService.updateRecurringAppointmentOccurrence,c.createParameteredBody("recurringAppointmentOccurrence"),d.appointment_update),updateSingleAppointment:a.createSecureProxyOperation(b.appointmentManagementService.updateSingleAppointment,c.createParameteredBody("singleAppointment"),d.appointment_update),deleteRecurringAppointment:a.createSecureProxyOperation(b.appointmentManagementService.deleteRecurringAppointment,c.createParameteredBody("recurringAppointment"),d.appointment_delete),deleteRecurringAppointmentOccurrence:a.createSecureProxyOperation(b.appointmentManagementService.deleteRecurringAppointmentOccurrence,c.createParameteredBody("recurringAppointmentId","recurrenceIndex"),d.appointment_delete),deleteSingleAppointment:a.createSecureProxyOperation(b.appointmentManagementService.deleteSingleAppointment,c.createParameteredBody("singleAppointment"),d.appointment_delete),readCallBackAppointmentPage:a.createSecureProxyOperation(b.appointmentManagementService.readCallBackAppointmentPage,c.createSimplePageBody,d.appointment_read)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("auditTrailServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{readAuditPage:a.createSecureProxyOperation(b.auditTrailService.readAuditPage,c.createSimplePageBody,d.audit_read),readEntityAuditPage:a.createSecureProxyOperation(b.auditTrailService.readEntityAuditPage,c.createParameteredBody("entityTypeName","entityId","filters","sort","pageDescriptor"),d.audit_read),
readAuditChangePage:a.createSecureProxyOperation(b.auditTrailService.readAuditChangePage,c.createParameteredBody("entityTypeName","entityId","auditLogIds","filters","sort","pageDescriptor"),d.audit_read),readAccountabilityInfo:a.createSecureProxyOperation(b.auditTrailService.readAccountabilityInfo,c.createParameteredBody("entityTypeName","entityId"),d.audit_read)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("careProviderManagementServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{searchProfessionalCaregivers:a.createSecureProxyOperation(b.careProviderManagementService.searchProfessionalCaregivers,c.createSearchPageBody,d.caregiver_read),readProfessionalCaregiverPage:a.createSecureProxyOperation(b.careProviderManagementService.readProfessionalCaregiverPage,c.createSimplePageBody,d.caregiver_read),readCaregiverTypePage:a.createSecureProxyOperation(b.careProviderManagementService.readCaregiverTypePage,c.createSimplePageBody,d.caregiverType_read),readCaregiverType:a.createSecureProxyOperation(b.careProviderManagementService.readCaregiverType,c.createParameteredBody("caregiverTypeId"),d.caregiverType_read),createCaregiverType:a.createSecureProxyOperation(b.careProviderManagementService.createCaregiverType,c.createParameteredBody("caregiverType"),d.caregiverType_create),updateCaregiverType:a.createSecureProxyOperation(b.careProviderManagementService.updateCaregiverType,c.createParameteredBody("caregiverType"),d.caregiverType_update),deleteCaregiverType:a.createSecureProxyOperation(b.careProviderManagementService.deleteCaregiverType,c.createParameteredBody("caregiverType"),d.caregiverType_delete),readCaregiversForSubscriberPage:a.createSecureProxyOperation(b.careProviderManagementService.readCaregiversForSubscriberPage,c.createComplexPageBody("subscriberId"),d.caregiver_read),readCaregiversForSubscriberTemplatePage:a.createSecureProxyOperation(b.careProviderManagementService.readCaregiversForSubscriberTemplatePage,c.createComplexPageBody("subscriberId"),d.caregiver_read),readCaregiversForResidencePage:a.createSecureProxyOperation(b.careProviderManagementService.readCaregiversForResidencePage,c.createComplexPageBody("residenceId"),d.caregiver_read),readCaregiversForSchemePage:a.createSecureProxyOperation(b.careProviderManagementService.readCaregiversForSchemePage,c.createComplexPageBody("schemeId"),d.caregiver_read),readCaregiversForSchemeResidencesPage:a.createSecureProxyOperation(b.careProviderManagementService.readCaregiversForSchemeResidencesPage,c.createComplexPageBody("schemeId"),d.caregiver_read),readProfessionalCaregiverContactItemPage:a.createSecureProxyOperation(b.careProviderManagementService.readProfessionalCaregiverContactItemPage,c.createComplexPageBody("caregiverId"),d.professionalCaregiver_read),readRelationalCaregiverContactItemPage:a.createSecureProxyOperation(b.careProviderManagementService.readRelationalCaregiverContactItemPage,c.createComplexPageBody("caregiverId"),d.relationalCaregiver_read),readCaregiversForSubscriberResidenceSchemePage:a.createSecureProxyOperation(b.careProviderManagementService.readCaregiversForSubscriberResidenceSchemePage,c.createComplexPageBody("subscriberId"),d.caregiver_read),readCaregiverVisualViewInformation:a.createSecureProxyOperation(b.careProviderManagementService.readCaregiverVisualViewInformation,c.createParameteredBody("caregiverId"),d.caregiver_read),createProfessionalCaregiverWithDto:a.createSecureProxyOperation(b.careProviderManagementService.createProfessionalCaregiverWithDto,c.createParameteredBody("caregiver"),d.professionalCaregiver_create),readProfessionalCaregiverWithDto:a.createSecureProxyOperation(b.careProviderManagementService.readProfessionalCaregiverWithDto,c.createParameteredBody("caregiverId"),d.professionalCaregiver_read),updateProfessionalCaregiverWithDto:a.createSecureProxyOperation(b.careProviderManagementService.updateProfessionalCaregiverWithDto,c.createParameteredBody("caregiver"),d.professionalCaregiver_update),deleteProfessionalCaregiverWithDto:a.createSecureProxyOperation(b.careProviderManagementService.deleteProfessionalCaregiverWithDto,c.createParameteredBody("caregiverId"),d.professionalCaregiver_delete),createProfessionalCaregiverNoteWithDto:a.createSecureProxyOperation(b.careProviderManagementService.createProfessionalCaregiverNoteWithDto,c.createParameteredBody("note"),d.professionalCaregiver_update),createProfessionalCaregiverNoteList:a.createSecureProxyOperation(b.careProviderManagementService.createProfessionalCaregiverNoteList,c.createParameteredBody("noteList"),d.professionalCaregiver_update),readProfessionalCaregiverNoteWithDto:a.createSecureProxyOperation(b.careProviderManagementService.readProfessionalCaregiverNoteWithDto,c.createParameteredBody("noteId"),d.professionalCaregiver_read),readProfessionalCaregiverNoteDtoPage:a.createSecureProxyOperation(b.careProviderManagementService.readProfessionalCaregiverNoteDtoPage,c.createComplexPageBody("caregiverId"),d.professionalCaregiver_read),updateProfessionalCaregiverNoteWithDto:a.createSecureProxyOperation(b.careProviderManagementService.updateProfessionalCaregiverNoteWithDto,c.createParameteredBody("note"),d.professionalCaregiver_update),deleteProfessionalCaregiverNoteWithDto:a.createSecureProxyOperation(b.careProviderManagementService.deleteProfessionalCaregiverNoteWithDto,c.createParameteredBody("noteId"),d.professionalCaregiver_update),createRelationalCaregiverForSubscriberWithDto:a.createSecureProxyOperation(b.careProviderManagementService.createRelationalCaregiverForSubscriberWithDto,c.createParameteredBody("caregiver","subscriberId","order","isNextOfKin"),d.relationalCaregiver_create),readRelationalCaregiverWithDto:a.createSecureProxyOperation(b.careProviderManagementService.readRelationalCaregiverWithDto,c.createParameteredBody("caregiverId"),d.relationalCaregiver_read),updateRelationalCaregiverWithDto:a.createSecureProxyOperation(b.careProviderManagementService.updateRelationalCaregiverWithDto,c.createParameteredBody("caregiver"),d.relationalCaregiver_update),createRelationalCaregiverNoteWithDto:a.createSecureProxyOperation(b.careProviderManagementService.createRelationalCaregiverNoteWithDto,c.createParameteredBody("note"),d.relationalCaregiver_update),createRelationalCaregiverNoteList:a.createSecureProxyOperation(b.careProviderManagementService.createRelationalCaregiverNoteList,c.createParameteredBody("noteList"),d.relationalCaregiver_update),readRelationalCaregiverNoteWithDto:a.createSecureProxyOperation(b.careProviderManagementService.readRelationalCaregiverNoteWithDto,c.createParameteredBody("noteId"),d.relationalCaregiver_read),readRelationalCaregiverNoteDtoPage:a.createSecureProxyOperation(b.careProviderManagementService.readRelationalCaregiverNoteDtoPage,c.createComplexPageBody("caregiverId"),d.relationalCaregiver_read),updateRelationalCaregiverNoteWithDto:a.createSecureProxyOperation(b.careProviderManagementService.updateRelationalCaregiverNoteWithDto,c.createParameteredBody("note"),d.relationalCaregiver_update),deleteRelationalCaregiverNoteWithDto:a.createSecureProxyOperation(b.careProviderManagementService.deleteRelationalCaregiverNoteWithDto,c.createParameteredBody("noteId"),d.relationalCaregiver_update),createProfessionalCaregiverPhoneNumberWithDto:a.createSecureProxyOperation(b.careProviderManagementService.createProfessionalCaregiverPhoneNumberWithDto,c.createParameteredBody("phoneNumber"),d.professionalCaregiver_update),readProfessionalCaregiverPhoneNumberDtoPage:a.createSecureProxyOperation(b.careProviderManagementService.readProfessionalCaregiverPhoneNumberDtoPage,c.createComplexPageBody("caregiverId"),d.professionalCaregiver_read),readProfessionalCaregiverPhoneNumberWithDto:a.createSecureProxyOperation(b.careProviderManagementService.readProfessionalCaregiverPhoneNumberWithDto,c.createParameteredBody("phoneNumberId"),d.professionalCaregiver_read),updateProfessionalCaregiverPhoneNumberWithDto:a.createSecureProxyOperation(b.careProviderManagementService.updateProfessionalCaregiverPhoneNumberWithDto,c.createParameteredBody("phoneNumber"),d.professionalCaregiver_update),deleteProfessionalCaregiverPhoneNumberWithDto:a.createSecureProxyOperation(b.careProviderManagementService.deleteProfessionalCaregiverPhoneNumberWithDto,c.createParameteredBody("phoneNumberId"),d.professionalCaregiver_update),createProfessionalCaregiverPhoneNumberList:a.createSecureProxyOperation(b.careProviderManagementService.createProfessionalCaregiverPhoneNumberList,c.createParameteredBody("phoneNumberList"),d.professionalCaregiver_update),createRelationalCaregiverPhoneNumberList:a.createSecureProxyOperation(b.careProviderManagementService.createRelationalCaregiverPhoneNumberList,c.createParameteredBody("phoneNumberList"),d.relationalCaregiver_update),createRelationalCaregiverPhoneNumberWithDto:a.createSecureProxyOperation(b.careProviderManagementService.createRelationalCaregiverPhoneNumberWithDto,c.createParameteredBody("phoneNumber"),d.relationalCaregiver_update),readRelationalCaregiverPhoneNumberDtoPage:a.createSecureProxyOperation(b.careProviderManagementService.readRelationalCaregiverPhoneNumberDtoPage,c.createComplexPageBody("caregiverId"),d.relationalCaregiver_read),readRelationalCaregiverPhoneNumberWithDto:a.createSecureProxyOperation(b.careProviderManagementService.readRelationalCaregiverPhoneNumberWithDto,c.createParameteredBody("phoneNumberId"),d.relationalCaregiver_read),updateRelationalCaregiverPhoneNumberWithDto:a.createSecureProxyOperation(b.careProviderManagementService.updateRelationalCaregiverPhoneNumberWithDto,c.createParameteredBody("phoneNumber"),d.relationalCaregiver_update),deleteRelationalCaregiverPhoneNumberWithDto:a.createSecureProxyOperation(b.careProviderManagementService.deleteRelationalCaregiverPhoneNumberWithDto,c.createParameteredBody("phoneNumberId"),d.relationalCaregiver_update),createRelationalCaregiverAvailability:a.createSecureProxyOperation(b.careProviderManagementService.createRelationalCaregiverAvailability,c.createParameteredBody("caregiverId","availability"),d.relationalCaregiver_create),readRelationalCaregiverAvailability:a.createSecureProxyOperation(b.careProviderManagementService.readRelationalCaregiverAvailability,c.createParameteredBody("caregiverId"),d.relationalCaregiver_read),createProfessionalCaregiverAvailability:a.createSecureProxyOperation(b.careProviderManagementService.createProfessionalCaregiverAvailability,c.createParameteredBody("caregiverId","availability"),d.professionalCaregiver_create),readProfessionalCaregiverAvailability:a.createSecureProxyOperation(b.careProviderManagementService.readProfessionalCaregiverAvailability,c.createParameteredBody("caregiverId"),d.professionalCaregiver_read)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("contractManagementServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{createTerminationReason:a.createSecureProxyOperation(b.contractManagementService.createTerminationReason,c.createParameteredBody("terminationReason"),d.terminationReason_create),readTerminationReason:a.createSecureProxyOperation(b.contractManagementService.readTerminationReason,c.createParameteredBody("terminationReasonId"),d.terminationReason_read),updateTerminationReason:a.createSecureProxyOperation(b.contractManagementService.updateTerminationReason,c.createParameteredBody("terminationReason"),d.terminationReason_update),deleteTerminationReason:a.createSecureProxyOperation(b.contractManagementService.deleteTerminationReason,c.createParameteredBody("terminationReason"),d.terminationReason_delete),readTerminationReasonPage:a.createSecureProxyOperation(b.contractManagementService.readTerminationReasonPage,c.createSimplePageBody,d.terminationReason_read),createPaymentMethod:a.createSecureProxyOperation(b.contractManagementService.createPaymentMethod,c.createParameteredBody("paymentMethod"),d.paymentMethod_create),readPaymentMethod:a.createSecureProxyOperation(b.contractManagementService.readPaymentMethod,c.createParameteredBody("paymentMethodId"),d.paymentMethod_read),updatePaymentMethod:a.createSecureProxyOperation(b.contractManagementService.updatePaymentMethod,c.createParameteredBody("paymentMethod"),d.paymentMethod_update),deletePaymentMethod:a.createSecureProxyOperation(b.contractManagementService.deletePaymentMethod,c.createParameteredBody("paymentMethod"),d.paymentMethod_delete),readPaymentMethodPage:a.createSecureProxyOperation(b.contractManagementService.readPaymentMethodPage,c.createSimplePageBody,d.paymentMethod_read),readSubscriberPeriodicalCostPage:a.createSecureProxyOperation(b.contractManagementService.readSubscriberPeriodicalCostPage,c.createComplexPageBody("subscriberId"),d.subscriber_read),readSubscriberNonPeriodicalCostPage:a.createSecureProxyOperation(b.contractManagementService.readSubscriberNonPeriodicalCostPage,c.createComplexPageBody("subscriberId"),d.subscriber_read),createVATTariff:a.createSecureProxyOperation(b.contractManagementService.createVATTariff,c.createParameteredBody("vatTariff"),d.vatTariff_create),readVATTariff:a.createSecureProxyOperation(b.contractManagementService.readVATTariff,c.createParameteredBody("vatTariffId"),d.vatTariff_read),updateVATTariff:a.createSecureProxyOperation(b.contractManagementService.updateVATTariff,c.createParameteredBody("vatTariff"),d.vatTariff_update),deleteVATTariff:a.createSecureProxyOperation(b.contractManagementService.deleteVATTariff,c.createParameteredBody("vatTariff"),d.vatTariff_delete),readVATTariffPage:a.createSecureProxyOperation(b.contractManagementService.readVATTariffPage,c.createSimplePageBody,d.vatTariff_read),createTariff:a.createSecureProxyOperation(b.contractManagementService.createTariff,c.createParameteredBody("tariff"),d.tariff_create),readTariff:a.createSecureProxyOperation(b.contractManagementService.readTariff,c.createParameteredBody("tariffId"),d.tariff_read),updateTariff:a.createSecureProxyOperation(b.contractManagementService.updateTariff,c.createParameteredBody("tariff"),d.tariff_update),deleteTariff:a.createSecureProxyOperation(b.contractManagementService.deleteTariff,c.createParameteredBody("tariff"),d.tariff_delete),readTariffPage:a.createSecureProxyOperation(b.contractManagementService.readTariffPage,c.createSimplePageBody,d.tariff_read),createPeriodicalCost:a.createSecureProxyOperation(b.contractManagementService.createPeriodicalCost,c.createParameteredBody("periodicalCost"),d.periodicalCost_create),readPeriodicalCost:a.createSecureProxyOperation(b.contractManagementService.readPeriodicalCost,c.createParameteredBody("periodicalCostId"),d.periodicalCost_read),updatePeriodicalCost:a.createSecureProxyOperation(b.contractManagementService.updatePeriodicalCost,c.createParameteredBody("periodicalCost"),d.periodicalCost_update),deletePeriodicalCost:a.createSecureProxyOperation(b.contractManagementService.deletePeriodicalCost,c.createParameteredBody("periodicalCost"),d.periodicalCost_delete),readPeriodicalCostPage:a.createSecureProxyOperation(b.contractManagementService.readPeriodicalCostPage,c.createComplexPageBody("tariffId"),d.periodicalCost_read),createNonPeriodicalCost:a.createSecureProxyOperation(b.contractManagementService.createNonPeriodicalCost,c.createParameteredBody("nonPeriodicalCost"),d.nonPeriodicalCost_create),readNonPeriodicalCost:a.createSecureProxyOperation(b.contractManagementService.readNonPeriodicalCost,c.createParameteredBody("nonPeriodicalCostId"),d.nonPeriodicalCost_read),updateNonPeriodicalCost:a.createSecureProxyOperation(b.contractManagementService.updateNonPeriodicalCost,c.createParameteredBody("nonPeriodicalCost"),d.nonPeriodicalCost_update),deleteNonPeriodicalCost:a.createSecureProxyOperation(b.contractManagementService.deleteNonPeriodicalCost,c.createParameteredBody("nonPeriodicalCost"),d.nonPeriodicalCost_delete),readNonPeriodicalCostPage:a.createSecureProxyOperation(b.contractManagementService.readNonPeriodicalCostPage,c.createComplexPageBody("tariffId"),d.nonPeriodicalCost_read),createSubscriberDeviceLink:a.createSecureProxyOperation(b.contractManagementService.createSubscriberDeviceLink,c.createParameteredBody("subscriberId","deviceId","newDeviceStateId","isDirect"),d.contract_update),deleteSubscriberDeviceLink:a.createSecureProxyOperation(b.contractManagementService.deleteSubscriberDeviceLink,c.createParameteredBody("subscriberId","deviceId","newDeviceStateId"),d.contract_update),createResidenceDeviceLink:a.createSecureProxyOperation(b.contractManagementService.createResidenceDeviceLink,c.createParameteredBody("residenceId","deviceId","newDeviceStateId","isDirect"),d.contract_update),deleteResidenceDeviceLink:a.createSecureProxyOperation(b.contractManagementService.deleteResidenceDeviceLink,c.createParameteredBody("residenceId","deviceId","newDeviceStateId"),d.contract_update),getSubscriberCostInfo:a.createSecureProxyOperation(b.contractManagementService.getSubscriberCostInfo,c.createParameteredBody("subscriberId"),d.subscriber_read),readPeriodicalCostDto:a.createSecureProxyOperation(b.contractManagementService.readPeriodicalCostDto,c.createParameteredBody("periodicalCostId"),d.periodicalCost_read),readPeriodicalCostDtoPage:a.createSecureProxyOperation(b.contractManagementService.readPeriodicalCostDtoPage,c.createComplexPageBody("tariffId"),d.periodicalCost_read),readNonPeriodicalCostDto:a.createSecureProxyOperation(b.contractManagementService.readNonPeriodicalCostDto,c.createParameteredBody("nonPeriodicalCostId"),d.nonPeriodicalCost_read),readNonPeriodicalCostDtoPage:a.createSecureProxyOperation(b.contractManagementService.readNonPeriodicalCostDtoPage,c.createComplexPageBody("tariffId"),d.nonPeriodicalCost_read),readSubscriberPeriodicalCostDtoPage:a.createSecureProxyOperation(b.contractManagementService.readSubscriberPeriodicalCostDtoPage,c.createComplexPageBody("subscriberId"),d.subscriber_read),readSubscriberPeriodicalCostDto:a.createSecureProxyOperation(b.contractManagementService.readSubscriberPeriodicalCostDto,c.createComplexPageBody("subscriberPeriodicalCostId"),d.subscriber_read),updateSubscriberPeriodicalCostDto:a.createSecureProxyOperation(b.contractManagementService.updateSubscriberPeriodicalCostDto,c.createParameteredBody("subscriberPeriodicalCostDto"),d.subscriber_update),createSubscriberNonPeriodicalCostDto:a.createSecureProxyOperation(b.contractManagementService.createSubscriberNonPeriodicalCostDto,c.createParameteredBody("subscriberId","subscriberNonPeriodicalCostDto"),d.subscriber_update),readSubscriberNonPeriodicalCostDtoPage:a.createSecureProxyOperation(b.contractManagementService.readSubscriberNonPeriodicalCostDtoPage,c.createComplexPageBody("subscriberId"),d.subscriber_read),readSubscriberNonPeriodicalCostDto:a.createSecureProxyOperation(b.contractManagementService.readSubscriberNonPeriodicalCostDto,c.createComplexPageBody("subscriberNonPeriodicalCostId"),d.subscriber_read),updateSubscriberNonPeriodicalCostDto:a.createSecureProxyOperation(b.contractManagementService.updateSubscriberNonPeriodicalCostDto,c.createParameteredBody("subscriberNonPeriodicalCostDto"),d.subscriber_update),deleteSubscriberNonPeriodicalCostDto:a.createSecureProxyOperation(b.contractManagementService.deleteSubscriberNonPeriodicalCostDto,c.createParameteredBody("subscriberNonPeriodicalCostDtoId"),d.subscriber_update)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("debugServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{createTrace:a.createSecureProxyOperation(b.debugService.createClientDataTraces,c.createParameteredBody("traceDataList"),d.debugService_createTraceLog),readLoginTrailPage:a.createSecureProxyOperation(b.debugService.readLoginTrailPageDto,c.createSimplePageBody,d.debugService_readLoginTrailPage),readTraceLogPage:a.createSecureProxyOperation(b.debugService.readTraceLogPageDto,c.createSimplePageBody,d.debugService_readTraceLogPage)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("deviceManagementServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{readDevice:a.createSecureProxyOperation(b.deviceManagementService.readDevice,c.createParameteredBody("homeUnitId"),d.device_read),readSimpleDevicePage:a.createSecureProxyOperation(b.deviceManagementService.readSimpleDevicePage,c.createComplexPageBody("deviceId"),d.device_read),readSimpleDevicesForDevicePage:a.createSecureProxyOperation(b.deviceManagementService.readSimpleDevicesForDevicePage,c.createComplexPageBody("deviceId"),d.device_read),readDeviceServiceTaskPage:a.createSecureProxyOperation(b.deviceManagementService.readDeviceServiceTaskPage,c.createComplexPageBody("deviceId"),d.device_read),readDeviceRepairPage:a.createSecureProxyOperation(b.deviceManagementService.readDeviceRepairPage,c.createComplexPageBody("deviceId"),d.device_read),readDeviceInfoVisualView:a.createSecureProxyOperation(b.deviceManagementService.readDeviceInfoVisualView,c.createParameteredBody("deviceId"),d.device_read),readDeviceRowDto:a.createSecureProxyOperation(b.deviceManagementService.readDeviceRowDto,c.createParameteredBody("deviceId"),d.device_read),readDevicePage:a.createSecureProxyOperation(b.deviceManagementService.readDevicePage,c.createSimplePageBody,d.device_read),searchDevice:a.createSecureProxyOperation(b.deviceManagementService.searchDevice,c.createSearchPageBody,d.device_create),readDevicePageForSchemeResidences:a.createSecureProxyOperation(b.deviceManagementService.readDevicePageForSchemeResidences,c.createComplexPageBody("schemeId"),d.device_read),readDevicesForSubscriberResidencePage:a.createSecureProxyOperation(b.deviceManagementService.readDevicesForSubscriberResidencePage,c.createComplexPageBody("subscriberId"),d.device_read),readDeviceStatePage:a.createSecureProxyOperation(b.deviceManagementService.readDeviceStatePage,c.createSimplePageBody,d.deviceState_read),createDeviceState:a.createSecureProxyOperation(b.deviceManagementService.createDeviceState,c.createParameteredBody("deviceState"),d.deviceState_create),readDeviceState:a.createSecureProxyOperation(b.deviceManagementService.readDeviceState,c.createParameteredBody("deviceStateId"),d.deviceState_read),updateDeviceState:a.createSecureProxyOperation(b.deviceManagementService.updateDeviceState,c.createParameteredBody("deviceState"),d.deviceState_update),deleteDeviceState:a.createSecureProxyOperation(b.deviceManagementService.deleteDeviceState,c.createParameteredBody("deviceState"),d.deviceState_delete),readSubscriberDevices:a.createSecureProxyOperation(b.deviceManagementService.readSubscriberDevices,c.createComplexPageBody("subscriberId"),d.device_read),createDeviceType:a.createSecureProxyOperation(b.deviceManagementService.createDeviceType,c.createParameteredBody("deviceType"),d.deviceType_create),readDeviceType:a.createSecureProxyOperation(b.deviceManagementService.readDeviceType,c.createParameteredBody("deviceTypeId"),d.deviceType_read),updateDeviceType:a.createSecureProxyOperation(b.deviceManagementService.updateDeviceType,c.createParameteredBody("deviceType"),d.deviceType_update),deleteDeviceType:a.createSecureProxyOperation(b.deviceManagementService.deleteDeviceType,c.createParameteredBody("deviceType"),d.deviceType_delete),readDeviceTypePage:a.createSecureProxyOperation(b.deviceManagementService.readDeviceTypePage,c.createSimplePageBody,d.deviceType_read),readDeviceManagerPage:a.createSecureProxyOperation(b.deviceManagementService.readDeviceManagerPage,c.createSimplePageBody,d.deviceManager_read),validateHomeUnitPropertiesForUI:a.createSecureProxyOperation(b.deviceManagementService.validateHomeUnitPropertiesForUI,c.createParameteredBody("homeUnit"),d.device_read),readDevicesForResidencePage:a.createSecureProxyOperation(b.deviceManagementService.readDevicesForResidencePage,c.createComplexPageBody("residenceId"),d.device_read),readDevicesForSubscriberPage:a.createSecureProxyOperation(b.deviceManagementService.readDevicesForSubscriberPage,c.createComplexPageBody("subscriberId"),d.device_read),readTechniciansForDevicePage:a.createSecureProxyOperation(b.deviceManagementService.readTechniciansForDevicePage,c.createComplexPageBody("deviceId"),d.device_read),readDeviceCharacteristicRowDtoPage:a.createSecureProxyOperation(b.deviceManagementService.readDeviceCharacteristicRowDtoPage,c.createComplexPageBody("deviceId"),d.device_read),readDeviceStateHistoryPage:a.createSecureProxyOperation(b.deviceManagementService.readDeviceStateHistoryPage,c.createComplexPageBody("deviceId"),d.device_read),readHomeUnitWithDto:a.createSecureProxyOperation(b.deviceManagementService.readHomeUnitWithDto,c.createParameteredBody("homeUnitId"),d.device_read),createHomeUnitWithDto:a.createSecureProxyOperation(b.deviceManagementService.createHomeUnitWithDto,c.createParameteredBody("homeUnitDto"),d.device_create),updateHomeUnitWithDto:a.createSecureProxyOperation(b.deviceManagementService.updateHomeUnitWithDto,c.createParameteredBody("homeUnitDto"),d.device_update),deleteHomeUnitWithDto:a.createSecureProxyOperation(b.deviceManagementService.deleteHomeUnitWithDto,c.createParameteredBody("homeUnitId"),d.device_delete),getCodeOfHomeUnitWithPhoneNumber:a.createSecureProxyOperation(b.deviceManagementService.getCodeOfHomeUnitWithPhoneNumber,c.createParameteredBody("phoneNumber","ignoreDeviceId"),d.device_update),createDeviceCharacteristicWithDto:a.createSecureProxyOperation(b.deviceManagementService.createDeviceCharacteristicWithDto,c.createParameteredBody("characteristic"),d.device_update),readDeviceCharacteristicWithDto:a.createSecureProxyOperation(b.deviceManagementService.readDeviceCharacteristicWithDto,c.createParameteredBody("characteristicId"),d.device_read),updateDeviceCharacteristicWithDto:a.createSecureProxyOperation(b.deviceManagementService.updateDeviceCharacteristicWithDto,c.createParameteredBody("characteristic"),d.device_update),deleteDeviceCharacteristicWithDto:a.createSecureProxyOperation(b.deviceManagementService.deleteDeviceCharacteristicWithDto,c.createParameteredBody("characteristicId"),d.device_delete),readClientInfoDeviceVisualView:a.createSecureProxyOperation(b.deviceManagementService.readClientInfoDeviceVisualView,c.createParameteredBody("deviceId"),d.device_read)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("incidentManagementServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{countIncidentRows:a.createSecureProxyOperation(b.incidentManagementService.countIncidentRows,c.createParameteredBody("filters"),d.incident_read),createEventType:a.createSecureProxyOperation(b.incidentManagementService.createEventType,c.createParameteredBody("eventType"),d.eventType_create),readEventType:a.createSecureProxyOperation(b.incidentManagementService.readEventType,c.createParameteredBody("eventTypeId"),d.eventType_read),updateEventType:a.createSecureProxyOperation(b.incidentManagementService.updateEventType,c.createParameteredBody("eventType"),d.eventType_update),deleteEventType:a.createSecureProxyOperation(b.incidentManagementService.deleteEventType,c.createParameteredBody("eventType"),d.eventType_delete),readEventTypePage:a.createSecureProxyOperation(b.incidentManagementService.readEventTypePage,c.createSimplePageBody,d.eventType_read),readIncidentPageForSubscriber:a.createSecureProxyOperation(b.incidentManagementService.readIncidentPageForSubscriber,c.createComplexPageBody("subscriberId"),d.incident_read),readIncidentPageForResidenceSubscribers:a.createSecureProxyOperation(b.incidentManagementService.readIncidentPageForResidenceSubscribers,c.createComplexPageBody("residenceId"),d.incident_read),readIncidentPageForSchemeSubscribers:a.createSecureProxyOperation(b.incidentManagementService.readIncidentPageForSchemeSubscribers,c.createComplexPageBody("schemeId"),d.incident_read),readIncident:a.createSecureProxyOperation(b.incidentManagementService.readIncident,c.createParameteredBody("incidentId"),d.incident_read),readIncidentDto:a.createSecureProxyOperation(b.incidentManagementService.readIncidentDto,c.createParameteredBody("incidentId"),d.incident_read),readIncidentWithDto:a.createSecureProxyOperation(b.incidentManagementService.readIncidentWithDto,c.createParameteredBody("incidentId"),d.incident_read),readIncidentPage:a.createSecureProxyOperation(b.incidentManagementService.readIncidentPage,c.createComplexPageBody("includeCount"),d.incident_read),readIncidentKindPage:a.createSecureProxyOperation(b.incidentManagementService.readIncidentKindPage,c.createSimplePageBody,d.incidentKind_read),createIncidentKind:a.createSecureProxyOperation(b.incidentManagementService.createIncidentKind,c.createParameteredBody("incidentKind"),d.incidentKind_create),readIncidentKind:a.createSecureProxyOperation(b.incidentManagementService.readIncidentKind,c.createParameteredBody("incidentKindId"),d.incidentKind_read),updateIncidentKind:a.createSecureProxyOperation(b.incidentManagementService.updateIncidentKind,c.createParameteredBody("incidentKind"),d.incidentKind_update),deleteIncidentKind:a.createSecureProxyOperation(b.incidentManagementService.deleteIncidentKind,c.createParameteredBody("incidentKind"),d.incidentKind_delete),readIncidentVisualViewInformation:a.createSecureProxyOperation(b.incidentManagementService.readIncidentVisualViewInformation,c.createParameteredBody("incidentId"),d.incident_read),searchIncident:a.createSecureProxyOperation(b.incidentManagementService.searchIncident,c.createSearchPageBody,d.incident_read),readIncidentNoteDtoPage:a.createSecureProxyOperation(b.incidentManagementService.readIncidentNoteDtoPage,c.createComplexPageBody("incidentId"),d.incident_read),readEventCharacteristicDtoPage:a.createSecureProxyOperation(b.incidentManagementService.readEventCharacteristicDtoPage,c.createComplexPageBody("incidentId"),d.event_read),readEventPage:a.createSecureProxyOperation(b.incidentManagementService.readEventPage,c.createComplexPageBody("incidentId"),d.event_read),readCarerEventPage:a.createSecureProxyOperation(b.incidentManagementService.readCarerEventPage,c.createComplexPageBody("incidentId"),d.event_read),readOperatorEventPage:a.createSecureProxyOperation(b.incidentManagementService.readOperatorEventPage,c.createComplexPageBody("incidentId"),d.event_read),readTraceEventPage:a.createSecureProxyOperation(b.incidentManagementService.readTraceEventPage,c.createComplexPageBody("incidentId"),d.event_read),readIncidentPriorityPage:a.createSecureProxyOperation(b.incidentManagementService.readIncidentPriorityPage,c.createSimplePageBody,d.incidentPriority_read)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("loginServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{login:a.createProxyOperation(b.loginService.login,c.createParameteredBody("username","password","desiredModules")),logout:a.createSecureProxyOperation(b.loginService.logout,c.createParameterlessBody,d.none),readCurrentUserInfo:a.createSecureProxyOperation(b.loginService.readCurrentUserInfo,c.createParameterlessBody,d.none)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("personalizationServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{readPersonalizationSettingsForContext:a.createSecureProxyOperation(b.personalizationService.readPersonalizationSettingsForContext,c.createParameteredBody("context","organizationId"),d.personalization_read),deletePersonalizationContext:a.createSecureProxyOperation(b.personalizationService.deletePersonalizationContext,c.createParameteredBody("personalizationContextDto"),d.personalization_delete),
updatePersonalizationContext:a.createSecureProxyOperation(b.personalizationService.updatePersonalizationContext,c.createParameteredBody("personalizationContextDto"),d.personalization_update),readPersonalizationContexts:a.createSecureProxyOperation(b.personalizationService.readPersonalizationContexts,c.createParameterlessBody,d.personalization_read)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").constant("urlConstants",{auditTrailService:["readAuditPage","readEntityAuditPage","readAuditChangePage","readAccountabilityInfo"],loginService:["login","logout","readCurrentUserInfo"],settingsService:["getResponderSettings","getIntakerSettings","getUmoWebSettings","getUmoWebSettingsForOrganization"],settingsManagementService:["readGeneralSettings","updateGeneralSettings","readResponderSettings","updateResponderSettings","readUmoWebSettings","updateUmoWebSettings","readWellBeingAutoAppointmentServiceSettings","updateWellBeingAutoAppointmentServiceSettings"],userManagementService:["updateOperator","readCurrentOperator","readOperatorPhoneNumberPage","registerSubscriber","requestPasswordReset","resetPassword","changeUserPassword","registerSubscriber","activateUserAccount","checkTaskAuthorization","checkModuleAuthorization","changePassword","createSubscriberUserAccount","createProfessionalCaregiverUserAccount","readLoginInfo","searchLoginInfo","readLoginInfoPage","getAllRoles","getRolesForUser","readPersonIdForLogin","readPerson","updatePerson","readOperatorPage","searchOperators","deleteLogin","readPersonIdForOperator","readOperator","deleteOperator","createOperator","createOperatorWithDto","searchOperators","enableUser","disableUser","unlockUser","removeRolesFromUser","addRolesToUser","readRolePage","readRoleDto","deleteRoleDto","updateRoleDto","createRoleDto","validForDeletion","readModulePage","readRoleDtoPage"],subscriberManagementService:["createSubscriberWithDto","readSubscriberWithDto","updateSubscriberWithDto","deleteSubscriberWithDto","readSubscriberVisualViewInformation","searchSubscribers","readSubscriber","readSubscriberPage","readSubscribersForResidencePage","createSubscriber","readMedicalInfoPage","readMedicationPage","createSubscriberNote","readSubscriberHtmlNote","readSubscriberHtmlNotePage","readSubscriberNote","readSubscriberNotePage","createSubscriberNoteWithDto","readSubscriberNoteWithDto","readSubscriberNoteDtoPage","updateSubscriberNoteWithDto","deleteSubscriberNoteWithDto","readCurrentSubscriber","readReferralStatusPage","readSubscriberContactItemPage","readSubscriberTemplatePage","readInsurerPage","readMedicalPriorityPage","readMedicalPriority","createMedicalPriority","updateMedicalPriority","deleteMedicalPriority","readReferralStatusPage","readReferralStatus","createReferralStatus","updateReferralStatus","deleteReferralStatus","readMedicalConditionValuePage","readMedicalConditionValue","createMedicalConditionValue","updateMedicalConditionValue","deleteMedicalConditionValue","readMedicalConditionPage","readMedicalCondition","createMedicalCondition","deleteMedicalCondition","updateMedicalCondition","readMedicinePage","readMedicine","createMedicine","updateMedicine","deleteMedicine","readSubscriberMedicationPage","readSubscriberMedicationWithDto","updateSubscriberMedicationWithDto","deleteSubscriberMedicationWithDto","createSubscriberMedicationWithDto","readSubscriberMedicalInfoPage","readSubscriberMedicalInfoWithDto","updateSubscriberMedicalInfoWithDto","deleteSubscriberMedicalInfoWithDto","createSubscriberMedicalInfoWithDto","readSubscriberStatePage","readSubscriberState","readSubscriberStateHistoryDtoPage","createSubscriberCaregiverLink","updateSubscriberCaregiverLink","deleteSubscriberCaregiverLink","createSubscriberState","updateSubscriberState","deleteSubscriberState","readSubscriberCharacteristicPage","readSubscriberCharacteristicRowDtoPage","readSubscriberCharacteristicWithDto","createSubscriberCharacteristicWithDto","updateSubscriberCharacteristicWithDto","deleteSubscriberCharacteristicWithDto","createSubscriberPhoneNumberWithDto","readSubscriberPhoneNumberWithDto","updateSubscriberPhoneNumberWithDto","deleteSubscriberPhoneNumberWithDto","readSubscriberPhoneNumberDtoPage","readSubscriberNotes","readTemplatePage","readSubscriberHolidayPage","createSubscriberHoliday","readSubscriberHoliday","updateSubscriberHoliday","deleteSubscriberHoliday","readAbsenceReasonPage","createAbsenceReason","readAbsenceReason","updateAbsenceReason","deleteAbsenceReason","readSubscriberCaregiverLink","readProjectPage","readProjectDetailPage","readProjectTreePage","readProjectDetailTreePage","readExternalWebLinksForSubscriberPage","createSubscriberExternalWebLink","readSubscriberExternalWebLink","updateSubscriberExternalWebLink","deleteSubscriberExternalWebLink","readExternalWebLinkTypePage","readSubscribersForCaregiverPage"],residenceManagementService:["readResidence","readResidenceRowDto","readResidenceVisualViewInformation","createResidence","readResidenceTypePage","readResidenceType","createResidenceType","updateResidenceType","deleteResidenceType","readKeyLocationPage","createKeyLocation","readKeyLocation","readPointOfEntrancePage","createPointOfEntry","readPointOfEntry","updatePointOfEntry","deletePointOfEntry","readResidenceCharacteristicPage","createResidenceCharacteristicWithDto","readResidenceCharacteristicRowDtoPage","readResidenceCharacteristicWithDto","updateResidenceCharacteristicWithDto","deleteResidenceCharacteristicWithDto","readResidenceNotePage","readResidencePage","readResidencesForSchemePage","validateResidence","readSchemeRowDto","readSchemePage","searchScheme","searchResidence","readWarden","createResidenceWithDto","deleteResidenceWithDto","updateResidenceWithDto","readSchemeVisualViewInformation","readResidenceNoteDtoPage","readResidenceNoteWithDto","createResidenceNoteWithDto","updateResidenceNoteWithDto","deleteResidenceNoteWithDto","createSchemeWithDto","readSchemeWithDto","updateSchemeWithDto","deleteSchemeWithDto","createSchemeNoteWithDto","readSchemeNoteWithDto","readSchemeNoteDtoPage","updateSchemeNoteWithDto","deleteSchemeNoteWithDto","readResidenceCaregiverLink","updateResidenceCaregiverLink","updateSchemeCaregiverLink","readSchemeCaregiverLink","createSchemeCaregiverLink","deleteSchemeCaregiverLink","readStreetAddressByZipCode","validateSpanishPostalCode","readSchemesForCaregiverPage"],careProviderManagementService:["readCaregiversForSubscriberResidenceSchemePage","readCurrentProfessionalCaregiver","readProfessionalCaregiverContactItemPage","readRelationalCaregiverContactItemPage","readProfessionalCaregiverPage","searchProfessionalCaregivers","readCaregiverTypePage","readCaregiverType","createCaregiverType","updateCaregiverType","deleteCaregiverType","readCaregiversForSubscriberPage","searchProfessionalCaregivers","readProfessionalCaregiverPage","readCaregiversForSubscriberPage","readCaregiversForResidencePage","readCaregiversForSchemePage","readCaregiversForSchemeResidencesPage","readCaregiversForSubscriberTemplatePage","readCaregiverVisualViewInformation","createProfessionalCaregiverWithDto","readProfessionalCaregiverWithDto","updateProfessionalCaregiverWithDto","deleteProfessionalCaregiverWithDto","createProfessionalCaregiverPhoneNumberWithDto","createProfessionalCaregiverPhoneNumberList","readProfessionalCaregiverPhoneNumberWithDto","readProfessionalCaregiverPhoneNumberDtoPage","updateProfessionalCaregiverPhoneNumberWithDto","deleteProfessionalCaregiverPhoneNumberWithDto","createRelationalCaregiverForSubscriberWithDto","readRelationalCaregiverWithDto","updateRelationalCaregiverWithDto","createRelationalCaregiverPhoneNumberList","createRelationalCaregiverPhoneNumberWithDto","readRelationalCaregiverPhoneNumberWithDto","readRelationalCaregiverPhoneNumberDtoPage","updateRelationalCaregiverPhoneNumberWithDto","deleteRelationalCaregiverPhoneNumberWithDto","readProfessionalCaregiverNoteDtoPage","readProfessionalCaregiverNoteWithDto","createProfessionalCaregiverNoteWithDto","createProfessionalCaregiverNoteList","updateProfessionalCaregiverNoteWithDto","deleteProfessionalCaregiverNoteWithDto","readRelationalCaregiverNoteDtoPage","readRelationalCaregiverNoteWithDto","createRelationalCaregiverNoteWithDto","createRelationalCaregiverNoteList","updateRelationalCaregiverNoteWithDto","deleteRelationalCaregiverNoteWithDto","createRelationalCaregiverAvailability","readRelationalCaregiverAvailability","createProfessionalCaregiverAvailability","readProfessionalCaregiverAvailability"],deviceManagementService:["readDevicesForSubscriberResidencePage","readDevicesForResidencePage","readDevicesForSubscriberPage","readDevice","searchDevice","readDeviceStatePage","createDeviceState","readDeviceState","updateDeviceState","deleteDeviceState","readDeviceManagerPage","readDeviceRowDto","createDeviceType","readDeviceType","updateDeviceType","deleteDeviceType","readDeviceTypePage","readSubscriberDevices","validateHomeUnitPropertiesForUI","readDevicePage","readDevicePageForSchemeResidences","readDeviceInfoVisualView","readSimpleDevicePage","readSimpleDevicesForDevicePage","readDeviceServiceTaskPage","readDeviceRepairPage","readDeviceServiceTaskPage","readTechniciansForDevicePage","readDeviceCharacteristicRowDtoPage","readDeviceStateHistoryPage","createHomeUnitWithDto","readHomeUnitWithDto","updateHomeUnitWithDto","deleteHomeUnitWithDto","getCodeOfHomeUnitWithPhoneNumber","createDeviceCharacteristicWithDto","readDeviceCharacteristicWithDto","updateDeviceCharacteristicWithDto","deleteDeviceCharacteristicWithDto","readClientInfoDeviceVisualView"],incidentManagementService:["countIncidentRows","createEventType","readEventType","updateEventType","deleteEventType","readEventTypePage","readIncident","readIncidentDto","readIncidentWithDto","readIncidentPage","readIncidentKindPage","readIncidentPriorityPage","createIncidentKind","readIncidentKind","updateIncidentKind","deleteIncidentKind","readIncidentVisualViewInformation","searchIncident","readIncidentNoteDtoPage","readIncidentPageForSubscriber","readIncidentPageForResidenceSubscribers","readIncidentPageForSchemeSubscribers","readEventCharacteristicDtoPage","readEventPage","readCarerEventPage","readOperatorEventPage","readTraceEventPage"],supportingDataManagementService:["readOrganization","readOrganizationPage","readFullOrganizationPage","readLevel1OrganizationPage","readRootOrganizationAndUserOrganizationsAtLevel1InTree","readNewOrganizationMessageCount","createOrganizationNote","readOrganizationNotePage","readContractVersion","readPersonalization_Panelsettings","readPersonalization_Fieldsettings","readSalutationPage","readSalutation","createSalutation","deleteSalutation","updateSalutation","createTitle","readTitle","updateTitle","deleteTitle","readTitlePage","readLanguagePage","readMaritalStatePage","createMaritalState","readMaritalState","updateMaritalState","deleteMaritalState","createContactItemType","readContactItemType","updateContactItemType","deleteContactItemType","readContactItemTypePage","readCountryPage","createCountry","readCountry","updateCountry","deleteCountry","readDistrictPage","createDistrict","readDistrict","updateDistrict","deleteDistrict","readRegionPage","createRegion","readRegion","updateRegion","deleteRegion","readCityPage","createCity","readCity","updateCity","deleteCity","readConsumerState","createConsumerState","updateConsumerState","deleteConsumerState","readConsumerStatePage","createAspect","readAspect","readAspectForCharacteristicPage","updateAspect","deleteAspect","readAspectPage","createAspectValue","readAspectValue","updateAspectValue","deleteAspectValue","readAspectValuePage","readAvailableOrganizationReportPage","readAvailableReportPage","readAvailableReport","createAvailableReport","updateAvailableReport","deleteAvailableReport","searchAvailableReports","readOrganizationReportPage","createOrganizationReport","readOrganizationReport","updateOrganizationReport","deleteOrganizationReportWithId","readRelationTypePage","createRelationType","readRelationType","updateRelationType","deleteRelationType","readSkillPage","readCoInhabitantTypePage","createCoInhabitantType","readCoInhabitantType","updateCoInhabitantType","deleteCoInhabitantType","readAgreementTypePage","createAgreementType","readAgreementType","updateAgreementType","deleteAgreementType","readDoctorReferencePage","createDoctorReference","readDoctorReference","updateDoctorReference","deleteDoctorReference","readInsuranceClass","readInsuranceClassPage","createInsuranceClass","updateInsuranceClass","deleteInsuranceClass","readInsurer","readInsurerPage","createInsurer","updateInsurer","deleteInsurer","downloadClientDocument","readConsumerGroupPage","createOrganizationOperatorPhoneNumber","readConsumerGroupForDevicePage","getDefaultConsumerGroupForDeviceLinkedToSubscriberInOrganization"],contractManagementService:["createSubscriberDeviceLink","deleteSubscriberDeviceLink","createResidenceDeviceLink","deleteResidenceDeviceLink","createTerminationReason","readTerminationReason","updateTerminationReason","deleteTerminationReason","readTerminationReasonPage","createPaymentMethod","readPaymentMethod","updatePaymentMethod","deletePaymentMethod","readPaymentMethodPage","createTariff","readTariff","updateTariff","deleteTariff","readTariffPage","createPeriodicalCost","readPeriodicalCost","updatePeriodicalCost","deletePeriodicalCost","readPeriodicalCostPage","createNonPeriodicalCost","readNonPeriodicalCost","updateNonPeriodicalCost","deleteNonPeriodicalCost","readNonPeriodicalCostPage","readSubscriberPeriodicalCostPage","readSubscriberNonPeriodicalCostPage","createVATTariff","readVATTariff","updateVATTariff","deleteVATTariff","readVATTariffPage","getSubscriberCostInfo","readPeriodicalCostDto","readPeriodicalCostDtoPage","readNonPeriodicalCostDto","readNonPeriodicalCostDtoPage","readSubscriberPeriodicalCostDto","readSubscriberPeriodicalCostDtoPage","updateSubscriberPeriodicalCostDto","createSubscriberNonPeriodicalCostDto","readSubscriberNonPeriodicalCostDto","readSubscriberNonPeriodicalCostDtoPage","updateSubscriberNonPeriodicalCostDto","deleteSubscriberNonPeriodicalCostDto"],pushNotificationService:["registerDevice","unregisterDevice","readCareRequestPage","updateCareRequestStatus","acceptCareRequestWithSpeak","getCareRequest","declineSpeechRequest"],appointmentManagementService:["createRecurringAppointment","createSingleAppointment","readAppointmentPage","readAppointmentTypePage","readSingleAppointment","readRecurringAppointment","readRecurringAppointmentOccurrence","readRecurringAppointment","readCurrentBlockingAppointment","updateRecurringAppointment","updateRecurringAppointmentOccurrence","updateSingleAppointment","deleteRecurringAppointment","deleteRecurringAppointmentOccurrence","deleteSingleAppointment","readCallBackAppointmentPage"],wizardService:["createSubscriber","updateSubscriber"],reportService:["renderAndCache","renderAndCacheHtml","renderAndCachePdf","getDocumentPage","exportReport","listRenderingExtensions","resources/getrenderstream?"],reportExtensionsService:["signContract","mailReports","readContractPage","readContract","readManagementReportFilterItemPage","mailManagementReport"],debugService:["createClientDataTraces","readLoginTrailPageDto","readTraceLogPageDto"],wellBeingDataManagementService:["readCallBackAppointmentPage","readCallBackAppointmentTypePage","createCallBackAppointment","createCallBackAppointmentBatch","readCallBackAppointment","updateCallBackAppointment","deleteCallBackAppointment","deactivateWellBeing","readSubscriberInfo","createCallBackAppointmentType","readCallBackAppointmentType","updateCallBackAppointmentType","deleteCallBackAppointmentType","readPlannedCallBackAppointmentNumberAtTimeOfDayPage","postponeCallBackAppointments","updateCallBackAppointmentDetails","unlockAppointmentLockedByCurrentUser","unlockAllAppointmentsLockedByCurrentUser"],scheduledTaskService:["getScheduledTaskSystemTimeZone"],personalizationService:["readPersonalizationSettingsForContext","deletePersonalizationContext","updatePersonalizationContext","readPersonalizationContexts"]}),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").config(["umoxServiceUrlsProvider","urlConstants",function(a,b){a.setUmoxServiceUrls(b)}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("pushNotificationServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{registerDevice:a.createSecureProxyOperation(b.pushNotificationService.registerDevice,c.createParameteredBody("device","subscriptionType"),d.careRequest_subscription),unregisterDevice:a.createSecureProxyOperation(b.pushNotificationService.unregisterDevice,c.createParameteredBody("phoneNumber","subscriptionType"),d.careRequest_subscription),readCareRequestPage:a.createSecureProxyOperation(b.pushNotificationService.readCareRequestPage,c.createComplexPageBody("phoneNumber"),d.careRequest_read),updateCareRequestStatus:a.createSecureProxyOperation(b.pushNotificationService.updateCareRequestStatus,c.createParameteredBody("requestMessage"),d.careRequest_update),acceptCareRequestWithSpeak:a.createSecureProxyOperation(b.pushNotificationService.acceptCareRequestWithSpeak,c.createParameteredBody("sessionId"),d.careRequest_update),getCareRequest:a.createSecureProxyOperation(b.pushNotificationService.getCareRequest,c.createParameteredBody("sessionId"),d.careRequest_read),declineSpeechRequest:a.createSecureProxyOperation(b.pushNotificationService.declineSpeechRequest,c.createParameteredBody("sessionId"),d.careRequest_update)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("reportExtensionsServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{signContract:a.createSecureProxyOperation(b.reportExtensionsService.signContract,c.createParameteredBody("instanceId","signature","referralStateId","subscriberId"),d.contractDocument_create),mailReports:a.createSecureProxyOperation(b.reportExtensionsService.mailReports,c.createParameteredBody("instanceIds","emailAddress","subject","body","deviceInfo"),d.report_read),readContractPage:a.createSecureProxyOperation(b.reportExtensionsService.readContractPage,c.createParameteredBody("organizationId","subscriberId"),d.contractDocument_read),readContract:a.createSecureProxyOperation(b.reportExtensionsService.readContract,c.createParameteredBody("fullFileName"),d.contractDocument_read),readManagementReportFilterItemPage:a.createSecureProxyOperation(b.reportExtensionsService.readManagementReportFilterItemPage,c.createParameteredBody("filterName","selectedOrganizationId","pageDescriptor"),d.report_read),mailManagementReport:a.createSecureProxyOperation(b.reportExtensionsService.mailManagementReport,c.createParameteredBody("taskTypeValue","filters","filterPropertyPathsDisplayText","settings","cultureId","toEmailAddress","title"),d.report_read)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("reportServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{renderAndCache:a.createSecureProxyOperation(b.reportService.renderAndCacheHtml,c.createParameteredBody("format","report","deviceInfo","parameters"),d.report_read),getDocumentPage:a.createSecureProxyOperation(b.reportService.getDocumentPage,c.createParameteredBody("instanceID","pageNumber"),d.report_read),listRenderingExtensions:a.createSecureProxyOperation(b.reportService.listRenderingExtensions,c.createParameteredBody(),d.none),exportReport:a.createSecureProxyDownloadOperation(b.reportService.exportReport,c.createParameteredBody("format","report","deviceInfo"),d.report_read)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("residenceManagementServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{readKeyLocationPage:a.createSecureProxyOperation(b.residenceManagementService.readKeyLocationPage,c.createSimplePageBody,d.keyLocation_read),createKeyLocation:a.createSecureProxyOperation(b.residenceManagementService.createKeyLocation,c.createParameteredBody("keyLocation"),d.keyLocation_create),readKeyLocation:a.createSecureProxyOperation(b.residenceManagementService.readKeyLocation,c.createParameteredBody("keyLocationId"),d.keyLocation_read),readPointOfEntrancePage:a.createSecureProxyOperation(b.residenceManagementService.readPointOfEntrancePage,c.createSimplePageBody,d.pointOfEntry_read),createPointOfEntry:a.createSecureProxyOperation(b.residenceManagementService.createPointOfEntry,c.createParameteredBody("pointOfEntry"),d.pointOfEntry_create),readPointOfEntry:a.createSecureProxyOperation(b.residenceManagementService.readPointOfEntry,c.createParameteredBody("pointOfEntryId"),d.pointOfEntry_read),updatePointOfEntry:a.createSecureProxyOperation(b.residenceManagementService.updatePointOfEntry,c.createParameteredBody("pointOfEntry"),d.pointOfEntry_update),deletePointOfEntry:a.createSecureProxyOperation(b.residenceManagementService.deletePointOfEntry,c.createParameteredBody("pointOfEntry"),d.pointOfEntry_delete),readResidenceTypePage:a.createSecureProxyOperation(b.residenceManagementService.readResidenceTypePage,c.createSimplePageBody,d.residenceType_read),readResidenceType:a.createSecureProxyOperation(b.residenceManagementService.readResidenceType,c.createParameteredBody("residenceTypeId"),d.residenceType_read),createResidenceType:a.createSecureProxyOperation(b.residenceManagementService.createResidenceType,c.createParameteredBody("residenceType"),d.residenceType_create),updateResidenceType:a.createSecureProxyOperation(b.residenceManagementService.updateResidenceType,c.createParameteredBody("residenceType"),d.residenceType_update),deleteResidenceType:a.createSecureProxyOperation(b.residenceManagementService.deleteResidenceType,c.createParameteredBody("residenceType"),d.residenceType_delete),readResidenceCharacteristicPage:a.createSecureProxyOperation(b.residenceManagementService.readResidenceCharacteristicPage,c.createComplexPageBody("residenceId"),d.residence_read),readResidenceCharacteristicRowDtoPage:a.createSecureProxyOperation(b.residenceManagementService.readResidenceCharacteristicRowDtoPage,c.createComplexPageBody("residenceId"),d.residence_read),createResidenceCharacteristicWithDto:a.createSecureProxyOperation(b.residenceManagementService.createResidenceCharacteristicWithDto,c.createParameteredBody("characteristic"),d.residence_update),readResidenceCharacteristicWithDto:a.createSecureProxyOperation(b.residenceManagementService.readResidenceCharacteristicWithDto,c.createParameteredBody("characteristicId"),d.residence_read),updateResidenceCharacteristicWithDto:a.createSecureProxyOperation(b.residenceManagementService.updateResidenceCharacteristicWithDto,c.createParameteredBody("characteristic"),d.residence_update),deleteResidenceCharacteristicWithDto:a.createSecureProxyOperation(b.residenceManagementService.deleteResidenceCharacteristicWithDto,c.createParameteredBody("characteristicId"),d.residence_delete),readResidenceNotePage:a.createSecureProxyOperation(b.residenceManagementService.readResidenceNotePage,c.createComplexPageBody("residenceId"),d.residence_read),readResidence:a.createSecureProxyOperation(b.residenceManagementService.readResidence,c.createParameteredBody("residenceId"),d.residence_read),readResidenceVisualViewInformation:a.createSecureProxyOperation(b.residenceManagementService.readResidenceVisualViewInformation,c.createParameteredBody("residenceId"),d.residence_read),readResidencePage:a.createSecureProxyOperation(b.residenceManagementService.readResidencePage,c.createSimplePageBody,d.residence_read),readResidencesForSchemePage:a.createSecureProxyOperation(b.residenceManagementService.readResidencesForSchemePage,c.createComplexPageBody("schemeId"),d.residence_read),createResidence:a.createSecureProxyOperation(b.residenceManagementService.createResidence,c.createParameteredBody("residence"),d.scheme_read),readSchemeRowDto:a.createSecureProxyOperation(b.residenceManagementService.readSchemeRowDto,c.createParameteredBody("schemeId"),d.scheme_read),readSchemePage:a.createSecureProxyOperation(b.residenceManagementService.readSchemePage,c.createSimplePageBody,d.scheme_read),searchScheme:a.createSecureProxyOperation(b.residenceManagementService.searchScheme,c.createSearchPageBody,d.scheme_read),readSchemeVisualViewInformation:a.createSecureProxyOperation(b.residenceManagementService.readSchemeVisualViewInformation,c.createParameteredBody("schemeId"),d.scheme_read),searchResidence:a.createSecureProxyOperation(b.residenceManagementService.searchResidence,c.createSearchPageBody,d.residence_read),readWarden:a.createSecureProxyOperation(b.residenceManagementService.readWarden,c.createParameteredBody("wardenId"),d.residence_read),createResidenceWithDto:a.createSecureProxyOperation(b.residenceManagementService.createResidenceWithDto,c.createParameteredBody("residenceDto"),d.residence_create),readResidenceRowDto:a.createSecureProxyOperation(b.residenceManagementService.readResidenceRowDto,c.createParameteredBody("residenceId"),d.residence_read),updateResidenceWithDto:a.createSecureProxyOperation(b.residenceManagementService.updateResidenceWithDto,c.createParameteredBody("residenceDto"),d.residence_update),deleteResidenceWithDto:a.createSecureProxyOperation(b.residenceManagementService.deleteResidenceWithDto,c.createParameteredBody("residenceId"),d.residence_delete),createSchemeWithDto:a.createSecureProxyOperation(b.residenceManagementService.createSchemeWithDto,c.createParameteredBody("schemeDto"),d.scheme_create),readSchemeWithDto:a.createSecureProxyOperation(b.residenceManagementService.readSchemeWithDto,c.createParameteredBody("schemeId"),d.scheme_read),updateSchemeWithDto:a.createSecureProxyOperation(b.residenceManagementService.updateSchemeWithDto,c.createParameteredBody("schemeDto"),d.scheme_update),deleteSchemeWithDto:a.createSecureProxyOperation(b.residenceManagementService.deleteSchemeWithDto,c.createParameteredBody("schemeId"),d.scheme_delete),createResidenceNoteWithDto:a.createSecureProxyOperation(b.residenceManagementService.createResidenceNoteWithDto,c.createParameteredBody("note"),d.residence_update),readResidenceNoteWithDto:a.createSecureProxyOperation(b.residenceManagementService.readResidenceNoteWithDto,c.createParameteredBody("noteId"),d.residence_read),readResidenceNoteDtoPage:a.createSecureProxyOperation(b.residenceManagementService.readResidenceNoteDtoPage,c.createComplexPageBody("residenceId"),d.residence_read),updateResidenceNoteWithDto:a.createSecureProxyOperation(b.residenceManagementService.updateResidenceNoteWithDto,c.createParameteredBody("note"),d.residence_update),deleteResidenceNoteWithDto:a.createSecureProxyOperation(b.residenceManagementService.deleteResidenceNoteWithDto,c.createParameteredBody("noteId"),d.residence_update),createSchemeNoteWithDto:a.createSecureProxyOperation(b.residenceManagementService.createSchemeNoteWithDto,c.createParameteredBody("note"),d.scheme_update),readSchemeNoteWithDto:a.createSecureProxyOperation(b.residenceManagementService.readSchemeNoteWithDto,c.createParameteredBody("noteId"),d.scheme_read),readSchemeNoteDtoPage:a.createSecureProxyOperation(b.residenceManagementService.readSchemeNoteDtoPage,c.createComplexPageBody("schemeId"),d.scheme_read),updateSchemeNoteWithDto:a.createSecureProxyOperation(b.residenceManagementService.updateSchemeNoteWithDto,c.createParameteredBody("note"),d.scheme_update),deleteSchemeNoteWithDto:a.createSecureProxyOperation(b.residenceManagementService.deleteSchemeNoteWithDto,c.createParameteredBody("noteId"),d.scheme_update),readSchemeCaregiverLink:a.createSecureProxyOperation(b.residenceManagementService.readSchemeCaregiverLink,c.createParameteredBody("caregiverLinkId"),d.caregiverLink_read),updateSchemeCaregiverLink:a.createSecureProxyOperation(b.residenceManagementService.updateSchemeCaregiverLink,c.createParameteredBody("caregiverLink"),d.caregiverLink_update),createSchemeCaregiverLink:a.createSecureProxyOperation(b.residenceManagementService.createSchemeCaregiverLink,c.createParameteredBody("schemeId","careProviderId","order","autoCare","autoCallSkillId","autoEmail","autoSms","alarmtypeDependent","autoMessageSkillId"),d.caregiverLink_create),deleteSchemeCaregiverLink:a.createSecureProxyOperation(b.residenceManagementService.deleteSchemeCaregiverLink,c.createParameteredBody("schemeId","careProviderId"),d.caregiverLink_delete),readResidenceCaregiverLink:a.createSecureProxyOperation(b.residenceManagementService.readResidenceCaregiverLink,c.createParameteredBody("caregiverLinkId"),d.caregiverLink_read),updateResidenceCaregiverLink:a.createSecureProxyOperation(b.residenceManagementService.updateResidenceCaregiverLink,c.createParameteredBody("caregiverLink"),d.caregiverLink_update),readStreetAddressByZipCode:a.createSecureProxyOperation(b.residenceManagementService.readStreetAddressByZipCode,c.createParameteredBody("zipCode","houseNumber"),d.residence_read),validateSpanishPostalCode:a.createSecureProxyOperation(b.residenceManagementService.validateSpanishPostalCode,c.createParameteredBody("region","city","postalCode"),d.residence_read),readSchemesForCaregiverPage:a.createSecureProxyOperation(b.residenceManagementService.readSchemesForCaregiverPage,c.createComplexPageBody("caregiverId"),d.scheme_read)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("scheduledTaskServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{getScheduledTaskSystemTimeZone:a.createSecureProxyOperation(b.scheduledTaskService.getScheduledTaskSystemTimeZone,c.createParameterlessBody,d.report_create)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("settingsManagementServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{readGeneralSettings:a.createSecureProxyOperation(b.settingsManagementService.readGeneralSettings,c.createParameteredBody("organizationId"),d.generalSetting_Read),updateGeneralSettings:a.createSecureProxyOperation(b.settingsManagementService.updateGeneralSettings,c.createParameteredBody("newSettings","organizationId"),d.generalSetting_Update),readResponderSettings:a.createSecureProxyOperation(b.settingsManagementService.readResponderSettings,c.createParameteredBody("organizationId"),d.responderSetting_Read),updateResponderSettings:a.createSecureProxyOperation(b.settingsManagementService.updateResponderSettings,c.createParameteredBody("newSettings","organizationId"),d.responderSetting_Update),readUmoWebSettings:a.createSecureProxyOperation(b.settingsManagementService.readUmoWebSettings,c.createParameteredBody("organizationId"),d.umoWebSetting_Read),updateUmoWebSettings:a.createSecureProxyOperation(b.settingsManagementService.updateUmoWebSettings,c.createParameteredBody("newSettings","organizationId"),d.umoWebSetting_Update),readWellBeingAutoAppointmentServiceSettings:a.createSecureProxyOperation(b.settingsManagementService.readWellBeingAutoAppointmentServiceSettings,c.createParameteredBody("organizationId"),d.autoAppointmentServiceSetting_Read),updateWellBeingAutoAppointmentServiceSettings:a.createSecureProxyOperation(b.settingsManagementService.updateWellBeingAutoAppointmentServiceSettings,c.createParameteredBody("newSettings","organizationId"),d.autoAppointmentServiceSetting_Update)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("settingsServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{getResponderSettings:a.createSecureProxyOperation(b.settingsService.getResponderSettings,c.createParameterlessBody,d.none),
getUmoWebSettings:a.createSecureProxyOperation(b.settingsService.getUmoWebSettings,c.createParameterlessBody,d.none),getUmoWebSettingsForOrganization:a.createSecureProxyOperation(b.settingsService.getUmoWebSettingsForOrganization,c.createParameteredBody("organizationId"),d.none)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("subscriberManagementServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{createSubscriberWithDto:a.createSecureProxyOperation(b.subscriberManagementService.createSubscriberWithDto,c.createParameteredBody("subscriberDto"),d.subscriber_read),readSubscriberWithDto:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberWithDto,c.createParameteredBody("subscriberId"),d.subscriber_read),updateSubscriberWithDto:a.createSecureProxyOperation(b.subscriberManagementService.updateSubscriberWithDto,c.createParameteredBody("subscriberDto"),d.subscriber_read),deleteSubscriberWithDto:a.createSecureProxyOperation(b.subscriberManagementService.deleteSubscriberWithDto,c.createParameteredBody("subscriberId"),d.subscriber_read),readSubscriberVisualViewInformation:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberVisualViewInformation,c.createParameteredBody("subscriberId"),d.subscriber_read),searchSubscribers:a.createSecureProxyOperation(b.subscriberManagementService.searchSubscribers,c.createSearchPageBody,d.subscriber_read),readSubscriber:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriber,c.createParameteredBody("subscriberId"),d.subscriber_read),createSubscriber:a.createSecureProxyOperation(b.subscriberManagementService.createSubscriber,c.createParameteredBody("subscriber"),d.subscriber_create),readMedicalInfoPage:a.createSecureProxyOperation(b.subscriberManagementService.readMedicalInfoPage,c.createComplexPageBody("subscriberId"),d.medicalInfo_read),readMedicationPage:a.createSecureProxyOperation(b.subscriberManagementService.readMedicationPage,c.createComplexPageBody("subscriberId"),d.medication_read),readSubscriberMedicationPage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberMedicationPage,c.createComplexPageBody("subscriberId"),d.medication_read),createSubscriberMedicationWithDto:a.createSecureProxyOperation(b.subscriberManagementService.createSubscriberMedicationWithDto,c.createParameteredBody("subscriberId","medication"),d.medication_create),readSubscriberMedicationWithDto:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberMedicationWithDto,c.createParameteredBody("medicationId"),d.medication_read),updateSubscriberMedicationWithDto:a.createSecureProxyOperation(b.subscriberManagementService.updateSubscriberMedicationWithDto,c.createParameteredBody("medication"),d.medication_update),deleteSubscriberMedicationWithDto:a.createSecureProxyOperation(b.subscriberManagementService.deleteSubscriberMedicationWithDto,c.createParameteredBody("medicationId"),d.medication_delete),readSubscriberMedicalInfoPage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberMedicalInfoPage,c.createComplexPageBody("subscriberId"),d.medicalInfo_read),createSubscriberMedicalInfoWithDto:a.createSecureProxyOperation(b.subscriberManagementService.createSubscriberMedicalInfoWithDto,c.createParameteredBody("subscriberId","medicalInfo"),d.medicalInfo_create),readSubscriberMedicalInfoWithDto:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberMedicalInfoWithDto,c.createParameteredBody("medicalInfoId"),d.medicalInfo_read),updateSubscriberMedicalInfoWithDto:a.createSecureProxyOperation(b.subscriberManagementService.updateSubscriberMedicalInfoWithDto,c.createParameteredBody("medicalInfo"),d.medicalInfo_update),deleteSubscriberMedicalInfoWithDto:a.createSecureProxyOperation(b.subscriberManagementService.deleteSubscriberMedicalInfoWithDto,c.createParameteredBody("medicalInfoId"),d.medicalInfo_delete),createSubscriberNote:a.createSecureProxyOperation(b.subscriberManagementService.createSubscriberNote,c.createParameteredBody("note"),d.subscriber_update),readCurrentSubscriber:a.createSecureProxyOperation(b.subscriberManagementService.readCurrentSubscriber,c.createParameterlessBody,d.subscriber_read),readSubscriberHtmlNote:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberHtmlNote,c.createParameteredBody("noteId"),d.subscriber_read),readSubscriberHtmlNotePage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberHtmlNotePage,c.createComplexPageBody("subscriberId"),d.subscriber_read),createSubscriberNoteWithDto:a.createSecureProxyOperation(b.subscriberManagementService.createSubscriberNoteWithDto,c.createParameteredBody("note"),d.subscriber_update),readSubscriberNoteWithDto:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberNoteWithDto,c.createParameteredBody("noteId"),d.subscriber_read),readSubscriberNoteDtoPage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberNoteDtoPage,c.createComplexPageBody("subscriberId"),d.subscriber_read),updateSubscriberNoteWithDto:a.createSecureProxyOperation(b.subscriberManagementService.updateSubscriberNoteWithDto,c.createParameteredBody("note"),d.subscriber_update),deleteSubscriberNoteWithDto:a.createSecureProxyOperation(b.subscriberManagementService.deleteSubscriberNoteWithDto,c.createParameteredBody("noteId"),d.subscriber_update),readSubscriberSoapNotePage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberNotePage,c.createComplexPageBody("subscriberId"),d.subscriber_read),readMedicalConditionPage:a.createSecureProxyOperation(b.subscriberManagementService.readMedicalConditionPage,c.createSimplePageBody,d.medicalCondition_read),readMedicalCondition:a.createSecureProxyOperation(b.subscriberManagementService.readMedicalCondition,c.createParameteredBody("medicalConditionId"),d.medicalCondition_read),createMedicalCondition:a.createSecureProxyOperation(b.subscriberManagementService.createMedicalCondition,c.createParameteredBody("medicalCondition"),d.medicalCondition_create),updateMedicalCondition:a.createSecureProxyOperation(b.subscriberManagementService.updateMedicalCondition,c.createParameteredBody("medicalCondition"),d.medicalCondition_update),deleteMedicalCondition:a.createSecureProxyOperation(b.subscriberManagementService.deleteMedicalCondition,c.createParameteredBody("medicalCondition"),d.medicalCondition_delete),readMedicalConditionValuePage:a.createSecureProxyOperation(b.subscriberManagementService.readMedicalConditionValuePage,c.createSimplePageBody,d.medicalConditionValue_read),readMedicalConditionValue:a.createSecureProxyOperation(b.subscriberManagementService.readMedicalConditionValue,c.createParameteredBody("medicalConditionValueId"),d.medicalConditionValue_read),createMedicalConditionValue:a.createSecureProxyOperation(b.subscriberManagementService.createMedicalConditionValue,c.createParameteredBody("medicalConditionValue"),d.medicalConditionValue_create),updateMedicalConditionValue:a.createSecureProxyOperation(b.subscriberManagementService.updateMedicalConditionValue,c.createParameteredBody("medicalConditionValue"),d.medicalConditionValue_update),deleteMedicalConditionValue:a.createSecureProxyOperation(b.subscriberManagementService.deleteMedicalConditionValue,c.createParameteredBody("medicalConditionValue"),d.medicalConditionValue_delete),readSubscriberPage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberPage,c.createSimplePageBody,d.subscriber_read),readSubscribersForResidencePage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscribersForResidencePage,c.createComplexPageBody("residenceId"),d.subscriber_read),readSubscriberCharacteristicPage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberCharacteristicPage,c.createComplexPageBody("subscriberId"),d.subscriber_read),readSubscriberCharacteristicRowDtoPage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberCharacteristicRowDtoPage,c.createComplexPageBody("subscriberId"),d.subscriber_read),readSubscriberCharacteristicWithDto:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberCharacteristicWithDto,c.createParameteredBody("characteristicId"),d.subscriber_read),createSubscriberCharacteristicWithDto:a.createSecureProxyOperation(b.subscriberManagementService.createSubscriberCharacteristicWithDto,c.createParameteredBody("characteristic"),d.subscriber_update),updateSubscriberCharacteristicWithDto:a.createSecureProxyOperation(b.subscriberManagementService.updateSubscriberCharacteristicWithDto,c.createParameteredBody("characteristic"),d.subscriber_update),deleteSubscriberCharacteristicWithDto:a.createSecureProxyOperation(b.subscriberManagementService.deleteSubscriberCharacteristicWithDto,c.createParameteredBody("characteristicId"),d.subscriber_update),readSubscriberPhoneNumberDtoPage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberPhoneNumberDtoPage,c.createComplexPageBody("subscriberId"),d.subscriber_read),readSubscriberPhoneNumberWithDto:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberPhoneNumberWithDto,c.createParameteredBody("contactItemId"),d.subscriber_read),createSubscriberPhoneNumberWithDto:a.createSecureProxyOperation(b.subscriberManagementService.createSubscriberPhoneNumberWithDto,c.createParameteredBody("contactItem"),d.subscriber_update),updateSubscriberPhoneNumberWithDto:a.createSecureProxyOperation(b.subscriberManagementService.updateSubscriberPhoneNumberWithDto,c.createParameteredBody("contactItem"),d.subscriber_update),deleteSubscriberPhoneNumberWithDto:a.createSecureProxyOperation(b.subscriberManagementService.deleteSubscriberPhoneNumberWithDto,c.createParameteredBody("contactItemId"),d.subscriber_delete),readSubscriberContactItemPage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberContactItemPage,c.createParameteredBody("subscriberId"),d.subscriber_read),readInsurerPage:a.createSecureProxyOperation(b.subscriberManagementService.readInsurerPage,c.createSimplePageBody,d.insurer_read),readMedicalPriorityPage:a.createSecureProxyOperation(b.subscriberManagementService.readMedicalPriorityPage,c.createSimplePageBody,d.medicalPriority_read),readMedicalPriority:a.createSecureProxyOperation(b.subscriberManagementService.readMedicalPriority,c.createParameteredBody("medicalPriorityId"),d.medicalPriority_read),createMedicalPriority:a.createSecureProxyOperation(b.subscriberManagementService.createMedicalPriority,c.createParameteredBody("medicalPriority"),d.medicalPriority_create),updateMedicalPriority:a.createSecureProxyOperation(b.subscriberManagementService.updateMedicalPriority,c.createParameteredBody("medicalPriority"),d.medicalPriority_update),deleteMedicalPriority:a.createSecureProxyOperation(b.subscriberManagementService.deleteMedicalPriority,c.createParameteredBody("medicalPriority"),d.medicalPriority_delete),readMedicinePage:a.createSecureProxyOperation(b.subscriberManagementService.readMedicinePage,c.createSimplePageBody,d.medicine_read),readMedicine:a.createSecureProxyOperation(b.subscriberManagementService.readMedicine,c.createParameteredBody("medicineId"),d.medicine_read),createMedicine:a.createSecureProxyOperation(b.subscriberManagementService.createMedicine,c.createParameteredBody("medicine"),d.medicine_create),updateMedicine:a.createSecureProxyOperation(b.subscriberManagementService.updateMedicine,c.createParameteredBody("medicine"),d.medicine_update),deleteMedicine:a.createSecureProxyOperation(b.subscriberManagementService.deleteMedicine,c.createParameteredBody("medicine"),d.medicine_delete),readSubscriberNotes:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberNotes,c.createComplexPageBody("subscriberId"),d.subscriber_read),readtemplatepage:a.createSecureProxyOperation(b.subscriberManagementService.readTemplatePage,c.createSimplePageBody,d.subscriber_read),readReferralStatusPage:a.createSecureProxyOperation(b.subscriberManagementService.readReferralStatusPage,c.createSimplePageBody,d.referralStatus_read),readReferralStatus:a.createSecureProxyOperation(b.subscriberManagementService.readReferralStatus,c.createParameteredBody("referralStatusId"),d.referralStatus_read),createReferralStatus:a.createSecureProxyOperation(b.subscriberManagementService.createReferralStatus,c.createParameteredBody("referralStatus"),d.referralStatus_create),updateReferralStatus:a.createSecureProxyOperation(b.subscriberManagementService.updateReferralStatus,c.createParameteredBody("referralStatus"),d.referralStatus_update),deleteReferralStatus:a.createSecureProxyOperation(b.subscriberManagementService.deleteReferralStatus,c.createParameteredBody("referralStatus"),d.referralStatus_delete),readSubscriberStatePage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberStatePage,c.createSimplePageBody,d.subscriberState_read),readSubscriberState:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberState,c.createParameteredBody("subscriberStateId"),d.subscriberState_read),createSubscriberState:a.createSecureProxyOperation(b.subscriberManagementService.createSubscriberState,c.createParameteredBody("subscriberState"),d.subscriberState_create),updateSubscriberState:a.createSecureProxyOperation(b.subscriberManagementService.updateSubscriberState,c.createParameteredBody("subscriberState"),d.subscriberState_update),deleteSubscriberState:a.createSecureProxyOperation(b.subscriberManagementService.deleteSubscriberState,c.createParameteredBody("subscriberState"),d.subscriberState_delete),readSubscriberStateHistoryDtoPage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberStateHistoryDtoPage,c.createComplexPageBody("subscriberId"),d.subscriber_read),readSubscriberCaregiverLink:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberCaregiverLink,c.createParameteredBody("caregiverLinkId"),d.caregiverLink_read),createSubscriberCaregiverLink:a.createSecureProxyOperation(b.subscriberManagementService.createSubscriberCaregiverLink,c.createParameteredBody("subscriberId","careProviderId","linkProfessionalAsRelational","isAutoLinked","order","caregiverHasKey","careAreaLink","linkRemark","caregiverIsNextOfKin","travelMinutes","autoCare","autoCallSkillId","autoEmail","autoSms","alarmtypeDependent","autoMessageSkillId","relationTypeId"),d.caregiverLink_create),deleteSubscriberCaregiverLink:a.createSecureProxyOperation(b.subscriberManagementService.deleteSubscriberCaregiverLink,c.createParameteredBody("subscriberId","careProviderId"),d.caregiverLink_delete),updateSubscriberCaregiverLink:a.createSecureProxyOperation(b.subscriberManagementService.updateSubscriberCaregiverLink,c.createParameteredBody("caregiverLink"),d.caregiverLink_update),readSubscriberHolidayPage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberHolidayPage,c.createComplexPageBody("subscriberId"),d.subscriber_read),readSubscriberHoliday:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberHoliday,c.createParameteredBody("holidayId"),d.subscriber_read),createSubscriberHoliday:a.createSecureProxyOperation(b.subscriberManagementService.createSubscriberHoliday,c.createParameteredBody("holiday"),d.subscriber_update),updateSubscriberHoliday:a.createSecureProxyOperation(b.subscriberManagementService.updateSubscriberHoliday,c.createParameteredBody("holiday"),d.subscriber_update),deleteSubscriberHoliday:a.createSecureProxyOperation(b.subscriberManagementService.deleteSubscriberHoliday,c.createParameteredBody("holidayId"),d.subscriber_delete),readAbsenceReasonPage:a.createSecureProxyOperation(b.subscriberManagementService.readAbsenceReasonPage,c.createSimplePageBody,d.subscriber_read),readAbsenceReason:a.createSecureProxyOperation(b.subscriberManagementService.readAbsenceReason,c.createParameteredBody("absenceReasonId"),d.subscriber_read),createAbsenceReason:a.createSecureProxyOperation(b.subscriberManagementService.createAbsenceReason,c.createParameteredBody("absenceReason"),d.subscriber_create),updateAbsenceReason:a.createSecureProxyOperation(b.subscriberManagementService.updateAbsenceReason,c.createParameteredBody("absenceReason"),d.subscriber_update),deleteAbsenceReason:a.createSecureProxyOperation(b.subscriberManagementService.deleteAbsenceReason,c.createParameteredBody("absenceReasonId"),d.subscriber_delete),readSubscriberTemplatePage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberTemplatePage,c.createSimplePageBody,d.subscriber_read),readProjectPage:a.createSecureProxyOperation(b.subscriberManagementService.readProjectPage,c.createComplexPageBody("organizationId"),d.subscriber_read),readProjectDetailPage:a.createSecureProxyOperation(b.subscriberManagementService.readProjectDetailPage,c.createComplexPageBody("projectId"),d.subscriber_read),readProjectTreePage:a.createSecureProxyOperation(b.subscriberManagementService.readProjectTreePage,c.createSimplePageBody,d.subscriber_read),readProjectDetailTreePage:a.createSecureProxyOperation(b.subscriberManagementService.readProjectDetailTreePage,c.createSimplePageBody,d.subscriber_read),readExternalWebLinksForSubscriberPage:a.createSecureProxyOperation(b.subscriberManagementService.readExternalWebLinksForSubscriberPage,c.createComplexPageBody("subscriberId"),d.subscriberExternalWebLink_read),createSubscriberExternalWebLink:a.createSecureProxyOperation(b.subscriberManagementService.createSubscriberExternalWebLink,c.createParameteredBody("externalWebLink"),d.subscriberExternalWebLink_create),readSubscriberExternalWebLink:a.createSecureProxyOperation(b.subscriberManagementService.readSubscriberExternalWebLink,c.createParameteredBody("externalWebLinkId"),d.subscriberExternalWebLink_read),updateSubscriberExternalWebLink:a.createSecureProxyOperation(b.subscriberManagementService.updateSubscriberExternalWebLink,c.createParameteredBody("externalWebLink"),d.subscriberExternalWebLink_update),deleteSubscriberExternalWebLink:a.createSecureProxyOperation(b.subscriberManagementService.deleteSubscriberExternalWebLink,c.createParameteredBody("externalWebLinkId"),d.subscriberExternalWebLink_delete),readExternalWebLinkTypePage:a.createSecureProxyOperation(b.subscriberManagementService.readExternalWebLinkTypePage,c.createSimplePageBody,d.externalWebLinkType_read),readSubscribersForCaregiverPage:a.createSecureProxyOperation(b.subscriberManagementService.readSubscribersForCaregiverPage,c.createComplexPageBody("caregiverId"),d.subscriber_read)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("supportingDataManagementServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{readContractVersion:a.createSecureProxyOperation(b.supportingDataManagementService.readContractVersion,c.createParameteredBody("client"),d.serviceVersion_read),readRegionPage:a.createSecureProxyOperation(b.supportingDataManagementService.readRegionPage,c.createSimplePageBody,d.region_read),createRegion:a.createSecureProxyOperation(b.supportingDataManagementService.createRegion,c.createParameteredBody("region"),d.region_create),readRegion:a.createSecureProxyOperation(b.supportingDataManagementService.readRegion,c.createParameteredBody("regionId"),d.region_read),updateRegion:a.createSecureProxyOperation(b.supportingDataManagementService.updateRegion,c.createParameteredBody("region"),d.region_update),deleteRegion:a.createSecureProxyOperation(b.supportingDataManagementService.deleteRegion,c.createParameteredBody("region"),d.region_delete),readOrganization:a.createSecureProxyOperation(b.supportingDataManagementService.readOrganization,c.createParameteredBody("organizationId"),d.organization_read),readOrganizationPage:a.createSecureProxyOperation(b.supportingDataManagementService.readOrganizationPage,c.createSimplePageBody,d.organization_read),readFullOrganizationPage:a.createSecureProxyOperation(b.supportingDataManagementService.readFullOrganizationPage,c.createSimplePageBody,d.organization_read),readLevel1OrganizationPage:a.createSecureProxyOperation(b.supportingDataManagementService.readLevel1OrganizationPage,c.createSimplePageBody,d.organization_read),readAvailableOrganizationReportPage:a.createSecureProxyOperation(b.supportingDataManagementService.readAvailableOrganizationReportPage,c.createSimplePageBody,d.report_read),readAvailableReportPage:a.createSecureProxyOperation(b.supportingDataManagementService.readAvailableReportPage,c.createSimplePageBody,d.report_read),readAvailableReport:a.createSecureProxyOperation(b.supportingDataManagementService.readAvailableReport,c.createParameteredBody("availableReportId"),d.report_read),createAvailableReport:a.createSecureProxyOperation(b.supportingDataManagementService.createAvailableReport,c.createParameteredBody("availableReport"),d.report_create),updateAvailableReport:a.createSecureProxyOperation(b.supportingDataManagementService.updateAvailableReport,c.createParameteredBody("availableReport"),d.report_update),deleteAvailableReport:a.createSecureProxyOperation(b.supportingDataManagementService.deleteAvailableReport,c.createParameteredBody("availableReport"),d.report_delete),searchAvailableReports:a.createSecureProxyOperation(b.supportingDataManagementService.searchAvailableReports,c.createSearchPageBody,d.report_read),readOrganizationReportPage:a.createSecureProxyOperation(b.supportingDataManagementService.readOrganizationReportPage,c.createSimplePageBody,d.report_read),createOrganizationReport:a.createSecureProxyOperation(b.supportingDataManagementService.createOrganizationReport,c.createParameteredBody("organizationReport"),d.report_create),readOrganizationReport:a.createSecureProxyOperation(b.supportingDataManagementService.readOrganizationReport,c.createParameteredBody("organizationReportId"),d.report_read),updateOrganizationReport:a.createSecureProxyOperation(b.supportingDataManagementService.updateOrganizationReport,c.createParameteredBody("organizationReport"),d.report_update),deleteOrganizationReport:a.createSecureProxyOperation(b.supportingDataManagementService.deleteOrganizationReportWithId,c.createParameteredBody("organizationReportId"),d.report_delete),readCoInhabitantTypePage:a.createSecureProxyOperation(b.supportingDataManagementService.readCoInhabitantTypePage,c.createSimplePageBody,d.coInhabitantType_read),createCoInhabitantType:a.createSecureProxyOperation(b.supportingDataManagementService.createCoInhabitantType,c.createParameteredBody("coInhabitantType"),d.coInhabitantType_create),readCoInhabitantType:a.createSecureProxyOperation(b.supportingDataManagementService.readCoInhabitantType,c.createParameteredBody("coInhabitantTypeId"),d.coInhabitantType_read),updateCoInhabitantType:a.createSecureProxyOperation(b.supportingDataManagementService.updateCoInhabitantType,c.createParameteredBody("coInhabitantType"),d.coInhabitantType_update),deleteCoInhabitantType:a.createSecureProxyOperation(b.supportingDataManagementService.deleteCoInhabitantType,c.createParameteredBody("coInhabitantType"),d.coInhabitantType_delete),readDistrictPage:a.createSecureProxyOperation(b.supportingDataManagementService.readDistrictPage,c.createSimplePageBody,d.district_read),createDistrict:a.createSecureProxyOperation(b.supportingDataManagementService.createDistrict,c.createParameteredBody("district"),d.district_create),readDistrict:a.createSecureProxyOperation(b.supportingDataManagementService.readDistrict,c.createParameteredBody("districtId"),d.district_read),updateDistrict:a.createSecureProxyOperation(b.supportingDataManagementService.updateDistrict,c.createParameteredBody("district"),d.district_update),deleteDistrict:a.createSecureProxyOperation(b.supportingDataManagementService.deleteDistrict,c.createParameteredBody("district"),d.district_delete),readRelationTypePage:a.createSecureProxyOperation(b.supportingDataManagementService.readRelationTypePage,c.createSimplePageBody,d.relationType_read),createRelationType:a.createSecureProxyOperation(b.supportingDataManagementService.createRelationType,c.createParameteredBody("relationType"),d.relationType_create),readRelationType:a.createSecureProxyOperation(b.supportingDataManagementService.readRelationType,c.createParameteredBody("relationTypeId"),d.relationType_read),updateRelationType:a.createSecureProxyOperation(b.supportingDataManagementService.updateRelationType,c.createParameteredBody("relationType"),d.relationType_update),deleteRelationType:a.createSecureProxyOperation(b.supportingDataManagementService.deleteRelationType,c.createParameteredBody("relationType"),d.relationType_delete),readSkillPage:a.createSecureProxyOperation(b.supportingDataManagementService.readSkillPage,c.createSimplePageBody,d.skill_read),createAspect:a.createSecureProxyOperation(b.supportingDataManagementService.createAspect,c.createParameteredBody("aspect"),d.aspect_create),readAspect:a.createSecureProxyOperation(b.supportingDataManagementService.readAspect,c.createParameteredBody("aspectId"),d.aspect_read),readAspectForCharacteristicPage:a.createSecureProxyOperation(b.supportingDataManagementService.readAspectForCharacteristicPage,c.createComplexPageBody("level1OrganizationId"),d.aspect_read),updateAspect:a.createSecureProxyOperation(b.supportingDataManagementService.updateAspect,c.createParameteredBody("aspect"),d.aspect_update),deleteAspect:a.createSecureProxyOperation(b.supportingDataManagementService.deleteAspect,c.createParameteredBody("aspect"),d.aspect_delete),readAspectPage:a.createSecureProxyOperation(b.supportingDataManagementService.readAspectPage,c.createSimplePageBody,d.aspect_read),createAspectValue:a.createSecureProxyOperation(b.supportingDataManagementService.createAspectValue,c.createParameteredBody("aspectValue"),d.aspectValue_create),readAspectValue:a.createSecureProxyOperation(b.supportingDataManagementService.readAspectValue,c.createParameteredBody("aspectValueId"),d.aspectValue_read),updateAspectValue:a.createSecureProxyOperation(b.supportingDataManagementService.updateAspectValue,c.createParameteredBody("aspectValue"),d.aspectValue_update),deleteAspectValue:a.createSecureProxyOperation(b.supportingDataManagementService.deleteAspectValue,c.createParameteredBody("aspectValue"),d.aspectValue_delete),readAspectValuePage:a.createSecureProxyOperation(b.supportingDataManagementService.readAspectValuePage,c.createSimplePageBody,d.aspectValue_read),readContactItemType:a.createSecureProxyOperation(b.supportingDataManagementService.readContactItemType,c.createParameteredBody("contactItemTypeId"),d.contactItemType_read),createContactItemType:a.createSecureProxyOperation(b.supportingDataManagementService.createContactItemType,c.createParameteredBody("contactItemType"),d.contactItemType_create),updateContactItemType:a.createSecureProxyOperation(b.supportingDataManagementService.updateContactItemType,c.createParameteredBody("contactItemType"),d.contactItemType_update),deleteContactItemType:a.createSecureProxyOperation(b.supportingDataManagementService.deleteContactItemType,c.createParameteredBody("contactItemType"),d.contactItemType_delete),readContactItemTypePage:a.createSecureProxyOperation(b.supportingDataManagementService.readContactItemTypePage,c.createSimplePageBody,d.contactItemType_read),readConsumerState:a.createSecureProxyOperation(b.supportingDataManagementService.readConsumerState,c.createParameteredBody("consumerStateId"),d.consumerState_read),createConsumerState:a.createSecureProxyOperation(b.supportingDataManagementService.createConsumerState,c.createParameteredBody("consumerState"),d.consumerState_create),updateConsumerState:a.createSecureProxyOperation(b.supportingDataManagementService.updateConsumerState,c.createParameteredBody("consumerState"),d.consumerState_update),deleteConsumerState:a.createSecureProxyOperation(b.supportingDataManagementService.deleteConsumerState,c.createParameteredBody("consumerState"),d.consumerState_delete),readConsumerStatePage:a.createSecureProxyOperation(b.supportingDataManagementService.readConsumerStatePage,c.createSimplePageBody,d.consumerState_read),readPersonalizationPanelSettings:a.createSecureProxyOperation(b.supportingDataManagementService.readPersonalization_Panelsettings,c.createParameteredBody("organizationId"),d.personalization_read),readPersonalizationFieldSettings:a.createSecureProxyOperation(b.supportingDataManagementService.readPersonalization_Fieldsettings,c.createParameteredBody("organizationId"),d.personalization_read),readCountryPage:a.createSecureProxyOperation(b.supportingDataManagementService.readCountryPage,c.createSimplePageBody,d.country_read),createCountry:a.createSecureProxyOperation(b.supportingDataManagementService.createCountry,c.createParameteredBody("country"),d.country_create),readCountry:a.createSecureProxyOperation(b.supportingDataManagementService.readCountry,c.createParameteredBody("countryId"),d.country_read),updateCountry:a.createSecureProxyOperation(b.supportingDataManagementService.updateCountry,c.createParameteredBody("country"),d.country_update),deleteCountry:a.createSecureProxyOperation(b.supportingDataManagementService.deleteCountry,c.createParameteredBody("country"),d.country_delete),readSalutationPage:a.createSecureProxyOperation(b.supportingDataManagementService.readSalutationPage,c.createSimplePageBody,d.salutation_read),readSalutation:a.createSecureProxyOperation(b.supportingDataManagementService.readSalutation,c.createParameteredBody("salutationId"),d.salutation_read),createSalutation:a.createSecureProxyOperation(b.supportingDataManagementService.createSalutation,c.createParameteredBody("salutation"),d.salutation_create),updateSalutation:a.createSecureProxyOperation(b.supportingDataManagementService.updateSalutation,c.createParameteredBody("salutation"),d.salutation_update),deleteSalutation:a.createSecureProxyOperation(b.supportingDataManagementService.deleteSalutation,c.createParameteredBody("salutation"),d.salutation_delete),createTitle:a.createSecureProxyOperation(b.supportingDataManagementService.createTitle,c.createParameteredBody("title"),d.title_create),readTitle:a.createSecureProxyOperation(b.supportingDataManagementService.readTitle,c.createParameteredBody("titleId"),d.title_read),updateTitle:a.createSecureProxyOperation(b.supportingDataManagementService.updateTitle,c.createParameteredBody("title"),d.title_update),deleteTitle:a.createSecureProxyOperation(b.supportingDataManagementService.deleteTitle,c.createParameteredBody("title"),d.title_delete),readTitlePage:a.createSecureProxyOperation(b.supportingDataManagementService.readTitlePage,c.createSimplePageBody,d.title_read),readLanguagePage:a.createSecureProxyOperation(b.supportingDataManagementService.readLanguagePage,c.createSimplePageBody,d.language_read),readMaritalStatePage:a.createSecureProxyOperation(b.supportingDataManagementService.readMaritalStatePage,c.createSimplePageBody,d.maritalState_read),createMaritalState:a.createSecureProxyOperation(b.supportingDataManagementService.createMaritalState,c.createParameteredBody("maritalState"),d.maritalState_create),readMaritalState:a.createSecureProxyOperation(b.supportingDataManagementService.readMaritalState,c.createParameteredBody("maritalStateId"),d.maritalState_read),updateMaritalState:a.createSecureProxyOperation(b.supportingDataManagementService.updateMaritalState,c.createParameteredBody("maritalState"),d.maritalState_update),deleteMaritalState:a.createSecureProxyOperation(b.supportingDataManagementService.deleteMaritalState,c.createParameteredBody("maritalState"),d.maritalState_delete),readNewOrganizationMessageCount:a.createSecureProxyOperation(b.supportingDataManagementService.readNewOrganizationMessageCount,c.createParameteredBody("currentSortIndex"),d.none),readOrganizationNotePage:a.createSecureProxyOperation(b.supportingDataManagementService.readOrganizationNotePage,c.createSimplePageBody,d.organization_read),
createOrganizationNote:a.createSecureProxyOperation(b.supportingDataManagementService.createOrganizationNote,c.createParameteredBody("note"),d.organization_create),readCityPage:a.createSecureProxyOperation(b.supportingDataManagementService.readCityPage,c.createSimplePageBody,d.city_read),createCity:a.createSecureProxyOperation(b.supportingDataManagementService.createCity,c.createParameteredBody("city"),d.city_create),readCity:a.createSecureProxyOperation(b.supportingDataManagementService.readCity,c.createParameteredBody("cityId"),d.city_read),updateCity:a.createSecureProxyOperation(b.supportingDataManagementService.updateCity,c.createParameteredBody("city"),d.city_update),deleteCity:a.createSecureProxyOperation(b.supportingDataManagementService.deleteCity,c.createParameteredBody("city"),d.city_delete),readAgreementTypePage:a.createSecureProxyOperation(b.supportingDataManagementService.readAgreementTypePage,c.createSimplePageBody,d.agreementType_read),createAgreementType:a.createSecureProxyOperation(b.supportingDataManagementService.createAgreementType,c.createParameteredBody("agreementType"),d.agreementType_create),readAgreementType:a.createSecureProxyOperation(b.supportingDataManagementService.readAgreementType,c.createParameteredBody("agreementTypeId"),d.agreementType_read),updateAgreementType:a.createSecureProxyOperation(b.supportingDataManagementService.updateAgreementType,c.createParameteredBody("agreementType"),d.agreementType_update),deleteAgreementType:a.createSecureProxyOperation(b.supportingDataManagementService.deleteAgreementType,c.createParameteredBody("agreementType"),d.agreementType_delete),readDoctorReferencePage:a.createSecureProxyOperation(b.supportingDataManagementService.readDoctorReferencePage,c.createSimplePageBody,d.doctorReference_read),readDoctorReference:a.createSecureProxyOperation(b.supportingDataManagementService.readDoctorReference,c.createParameteredBody("doctorReferenceId"),d.doctorReference_read),createDoctorReference:a.createSecureProxyOperation(b.supportingDataManagementService.createDoctorReference,c.createParameteredBody("doctorReference"),d.doctorReference_create),updateDoctorReference:a.createSecureProxyOperation(b.supportingDataManagementService.updateDoctorReference,c.createParameteredBody("doctorReference"),d.doctorReference_update),deleteDoctorReference:a.createSecureProxyOperation(b.supportingDataManagementService.deleteDoctorReference,c.createParameteredBody("doctorReference"),d.doctorReference_delete),readInsuranceClassPage:a.createSecureProxyOperation(b.supportingDataManagementService.readInsuranceClassPage,c.createSimplePageBody,d.insuranceClass_read),readInsuranceClass:a.createSecureProxyOperation(b.supportingDataManagementService.readInsuranceClass,c.createParameteredBody("insuranceClassId"),d.insuranceClass_read),createInsuranceClass:a.createSecureProxyOperation(b.supportingDataManagementService.createInsuranceClass,c.createParameteredBody("insuranceClass"),d.insuranceClass_create),updateInsuranceClass:a.createSecureProxyOperation(b.supportingDataManagementService.updateInsuranceClass,c.createParameteredBody("insuranceClass"),d.insuranceClass_update),deleteInsuranceClass:a.createSecureProxyOperation(b.supportingDataManagementService.deleteInsuranceClass,c.createParameteredBody("insuranceClass"),d.insuranceClass_delete),downloadClientDocument:a.createSecureProxyOperation(b.supportingDataManagementService.downloadClientDocument,c.createParameteredBody("subscriptionNumber","documentPath"),d.clientDocument_read),readInsurerPage:a.createSecureProxyOperation(b.supportingDataManagementService.readInsurerPage,c.createSimplePageBody,d.insurer_read),createInsurer:a.createSecureProxyOperation(b.supportingDataManagementService.createInsurer,c.createParameteredBody("insurer"),d.insurer_create),readInsurer:a.createSecureProxyOperation(b.supportingDataManagementService.readInsurer,c.createParameteredBody("insurerId"),d.insurer_read),updateInsurer:a.createSecureProxyOperation(b.supportingDataManagementService.updateInsurer,c.createParameteredBody("insurer"),d.insurer_update),deleteInsurer:a.createSecureProxyOperation(b.supportingDataManagementService.deleteInsurer,c.createParameteredBody("insurer"),d.insurer_delete),readRootOrganizationAndUserOrganizationsAtLevel1InTree:a.createSecureProxyOperation(b.supportingDataManagementService.readRootOrganizationAndUserOrganizationsAtLevel1InTree,c.createSimplePageBody,d.organization_read),readConsumerGroupPage:a.createSecureProxyOperation(b.supportingDataManagementService.readConsumerGroupPage,c.createSimplePageBody,d.consumerGroup_read),createOrganizationOperatorPhoneNumber:a.createSecureProxyOperation(b.supportingDataManagementService.createOrganizationOperatorPhoneNumber,c.createParameteredBody("phoneNumber"),d.organization_create),readConsumerGroupForDevicePage:a.createSecureProxyOperation(b.supportingDataManagementService.readConsumerGroupForDevicePage,c.createSimplePageBody,d.consumerGroup_read),getDefaultConsumerGroupForDeviceLinkedToSubscriberInOrganization:a.createSecureProxyOperation(b.supportingDataManagementService.getDefaultConsumerGroupForDeviceLinkedToSubscriberInOrganization,c.createParameteredBody("subscriberOrganizationId"),d.consumerGroup_read)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("userManagementServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{registerSubscriber:a.createProxyOperation(b.userManagementService.registerSubscriber,c.createParameteredBody("email","password")),activateUserAccount:a.createProxyOperation(b.userManagementService.activateUserAccount,c.createParameteredBody("email","activationCode")),requestPasswordReset:a.createProxyOperation(b.userManagementService.requestPasswordReset,c.createParameteredBody("email")),resetPassword:a.createProxyOperation(b.userManagementService.resetPassword,c.createParameteredBody("email","password","resetCode")),changeUserPassword:a.createSecureProxyOperation(b.userManagementService.changeUserPassword,c.createParameteredBody("username","newPassword"),d.any_user_update),changePassword:a.createSecureProxyOperation(b.userManagementService.changePassword,c.createParameteredBody("oldPassword","newPassword"),d.user_update),checkTaskAuthorization:a.createSecureProxyOperation(b.userManagementService.checkTaskAuthorization,c.createParameteredBody("taskNames"),d.none),checkModuleAuthorization:a.createSecureProxyOperation(b.userManagementService.checkModuleAuthorization,c.createParameteredBody("moduleNames"),d.none),readCurrentOperator:a.createSecureProxyOperation(b.userManagementService.readCurrentOperator,c.createParameterlessBody,d.operator_read),readOperatorPhoneNumberPage:a.createSecureProxyOperation(b.userManagementService.readOperatorPhoneNumberPage,c.createComplexPageBody("operatorId"),d.operator_read),createSubscriberUserAccount:a.createSecureProxyOperation(b.userManagementService.createSubscriberUserAccount,c.createParameteredBody("subscriberId","newPassword","passwordQuestion","passwordAnswer"),d.subscriber_update),createProfessionalCaregiverUserAccount:a.createSecureProxyOperation(b.userManagementService.createProfessionalCaregiverUserAccount,c.createParameteredBody("professionalCaregiverId","newPassword","passwordQuestion","passwordAnswer"),d.professionalCaregiver_update),readLoginInfoPage:a.createSecureProxyOperation(b.userManagementService.readLoginInfoPage,c.createSimplePageBody,d.user_read),readLoginInfo:a.createSecureProxyOperation(b.userManagementService.readLoginInfo,c.createParameteredBody("loginId"),d.user_read),searchLoginInfo:a.createSecureProxyOperation(b.userManagementService.searchLoginInfo,c.createSearchPageBody,d.user_read),getAllRoles:a.createSecureProxyOperation(b.userManagementService.getAllRoles,c.createParameterlessBody,d.role_read),readRolePage:a.createSecureProxyOperation(b.userManagementService.readRolePage,c.createSimplePageBody,d.role_read),readRoleDto:a.createSecureProxyOperation(b.userManagementService.readRoleDto,c.createParameteredBody("roleId"),d.role_read),readRoleDtoPage:a.createSecureProxyOperation(b.userManagementService.readRoleDtoPage,c.createParameterlessBody,d.role_read),deleteRoleDto:a.createSecureProxyOperation(b.userManagementService.deleteRoleDto,c.createParameteredBody("roleId"),d.role_delete),updateRoleDto:a.createSecureProxyOperation(b.userManagementService.updateRoleDto,c.createParameteredBody("roleInformationDto"),d.role_update),createRoleDto:a.createSecureProxyOperation(b.userManagementService.createRoleDto,c.createParameteredBody("roleInformationDto"),d.role_create),validForDeletion:a.createSecureProxyOperation(b.userManagementService.validForDeletion,c.createParameteredBody("roleId"),d.role_read),getRolesForUser:a.createSecureProxyOperation(b.userManagementService.getRolesForUser,c.createParameteredBody("username"),d.role_read),readPersonIdForLogin:a.createSecureProxyOperation(b.userManagementService.readPersonIdForLogin,c.createParameteredBody("loginId"),d.operator_read),readPerson:a.createSecureProxyOperation(b.userManagementService.readPerson,c.createParameteredBody("personId"),d.person_read),updatePerson:a.createSecureProxyOperation(b.userManagementService.updatePerson,c.createParameteredBody("person"),d.person_update),readOperatorPage:a.createSecureProxyOperation(b.userManagementService.readOperatorPage,c.createSimplePageBody,d.operator_read),searchOperators:a.createSecureProxyOperation(b.userManagementService.searchOperators,c.createSearchPageBody,d.operator_read),deleteLogin:a.createSecureProxyOperation(b.userManagementService.deleteLogin,c.createParameteredBody("loginId"),d.user_delete),readPersonIdForOperator:a.createSecureProxyOperation(b.userManagementService.readPersonIdForOperator,c.createParameteredBody("operatorId"),d.person_read),readOperator:a.createSecureProxyOperation(b.userManagementService.readOperator,c.createParameteredBody("operatorId"),d.operator_read),createOperator:a.createSecureProxyOperation(b.userManagementService.createOperator,c.createParameteredBody("newOperator","password","emailAddress","passwordQuestion","passwordAnswer"),d.operator_create),createOperatorWithDto:a.createSecureProxyOperation(b.userManagementService.createOperatorWithDto,c.createParameteredBody("operatorDto"),d.operator_create),updateOperator:a.createSecureProxyOperation(b.userManagementService.updateOperator,c.createParameteredBody("domainOperator"),d.operator_update),deleteOperator:a.createSecureProxyOperation(b.userManagementService.deleteOperator,c.createParameteredBody("domainOperator"),d.operator_delete),enableUser:a.createSecureProxyOperation(b.userManagementService.enableUser,c.createParameteredBody("username"),d.user_update),disableUser:a.createSecureProxyOperation(b.userManagementService.disableUser,c.createParameteredBody("username"),d.user_update),unlockUser:a.createSecureProxyOperation(b.userManagementService.unlockUser,c.createParameteredBody("username"),d.user_update),removeRolesFromUser:a.createSecureProxyOperation(b.userManagementService.removeRolesFromUser,c.createParameteredBody("username","roleNames"),d.user_update),addRolesToUser:a.createSecureProxyOperation(b.userManagementService.addRolesToUser,c.createParameteredBody("username","roleNames"),d.user_update),readModulePage:a.createSecureProxyOperation(b.userManagementService.readModulePage,c.createSimplePageBody,d.none)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("wellBeingManagementServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{readCallBackAppointmentPage:a.createSecureProxyOperation(b.wellBeingDataManagementService.readCallBackAppointmentPage,c.createSimplePageBody,d.appointment_read),readCallBackAppointmentTypePage:a.createSecureProxyOperation(b.wellBeingDataManagementService.readCallBackAppointmentTypePage,c.createSimplePageBody,d.appointmentType_read),createCallBackAppointment:a.createSecureProxyOperation(b.wellBeingDataManagementService.createCallBackAppointment,c.createParameteredBody("subscriberId","plannedTime","appointmentTypeId","preferredCaller","rangeStartDate","rangeEndDate","remarks","recurrenceType","recurrenceFrequency"),d.appointment_create),createCallBackAppointmentBatch:a.createSecureProxyOperation(b.wellBeingDataManagementService.createCallBackAppointmentBatch,c.createParameteredBody("subscriberFilter","callBackAppointment"),d.appointment_create),readCallBackAppointment:a.createSecureProxyOperation(b.wellBeingDataManagementService.readCallBackAppointment,c.createParameteredBody("appointmentId","noLock"),d.appointment_read),updateCallBackAppointment:a.createSecureProxyOperation(b.wellBeingDataManagementService.updateCallBackAppointment,c.createParameteredBody("appointmentId","escalate","message","nextAppointmentInitialState","nextAppointmentPlannedTime","nextAppointmentPreferredCaller","postpone","cancel"),d.appointment_update),deleteCallBackAppointment:a.createSecureProxyOperation(b.wellBeingDataManagementService.deleteCallBackAppointment,c.createParameteredBody("appointmentId"),d.appointment_delete),deactivateWellBeing:a.createSecureProxyOperation(b.wellBeingDataManagementService.deactivateWellBeing,c.createParameteredBody("subscriberId"),d.appointment_delete),readSubscriberInfo:a.createSecureProxyOperation(b.wellBeingDataManagementService.readSubscriberInfo,c.createParameteredBody("subscriberId"),d.appointment_read),createCallBackAppointmentType:a.createSecureProxyOperation(b.wellBeingDataManagementService.createCallBackAppointmentType,c.createParameteredBody("callBackAppointmentType"),d.appointmentType_create),readCallBackAppointmentType:a.createSecureProxyOperation(b.wellBeingDataManagementService.readCallBackAppointmentType,c.createParameteredBody("callBackAppointmentTypeId"),d.appointmentType_read),updateCallBackAppointmentType:a.createSecureProxyOperation(b.wellBeingDataManagementService.updateCallBackAppointmentType,c.createParameteredBody("callBackAppointmentType"),d.appointmentType_update),deleteCallBackAppointmentType:a.createSecureProxyOperation(b.wellBeingDataManagementService.deleteCallBackAppointmentType,c.createParameteredBody("callBackAppointmentType"),d.appointmentType_delete),readPlannedCallBackAppointmentNumberAtTimeOfDayPage:a.createSecureProxyOperation(b.wellBeingDataManagementService.readPlannedCallBackAppointmentNumberAtTimeOfDayPage,c.createParameteredBody("startDate","endDate","topOrganizationId","preferredCaller"),d.appointment_read),postponeCallBackAppointments:a.createSecureProxyOperation(b.wellBeingDataManagementService.postponeCallBackAppointments,c.createParameteredBody("filters","postponeMinutes","postponeToMoment"),d.appointment_update),updateCallBackAppointmentDetails:a.createSecureProxyOperation(b.wellBeingDataManagementService.updateCallBackAppointmentDetails,c.createParameteredBody("appointmentId","rangeStartDate","rangeEndDate","remarks"),d.appointmentType_update),unlockAppointmentLockedByCurrentUser:a.createSecureProxyOperation(b.wellBeingDataManagementService.unlockAppointmentLockedByCurrentUser,c.createParameteredBody("appointmentId"),d.appointment_read),unlockAllAppointmentsLockedByCurrentUser:a.createSecureProxyOperation(b.wellBeingDataManagementService.unlockAllAppointmentsLockedByCurrentUser,c.createSimplePageBody,d.appointment_read)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.proxy").factory("wizardServiceProxy",["umoOperationFactory","umoxServiceUrls","serviceRequestBodyFactory","authorizationTaskConstants",function(a,b,c,d){"use strict";return{createSubscriber:a.createSecureProxyOperation(b.wizardService.createSubscriber,c.createParameteredBody("subscriber"),d.none),updateSubscriber:a.createSecureProxyOperation(b.wizardService.updateSubscriber,c.createParameteredBody("subscriber"),d.none)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.service").provider("debugService",function(){"use strict";var a=!1,b=!1;this.appImplementsTraceLogging=function(b){a=b},this.appImplementsTraceCaching=function(a){b=a},this.$get=["$q","$window","debugServiceProxy","domainEnums","instanceGUIDService","clientSettings","settingsService","dateExtensionService","GenericHttpErrorHandler",function(c,d,e,f,g,h,i,j,k){function l(a,b){if(d.isNullOrUndefined(b))throw"bad configuration TraceData";this.Data=b,this.ReferenceNumber=null,this.TraceStamp=j.convertDateToMsUtc(new Date),this.InstanceGuid=g.createOrRetrieveInstanceGUID(),this.ClientSessionGuid=void 0,this.Source=f.traceSourceType.Executable,this.TraceEventType=a,this.UmoXUser=p,this.__type="ClientTraceData:www.verklizan.com"}function m(a,b){var c=new l(a,b);return c.ApplicationName=i.getApplicationName(),c.ApplicationVersion=i.getApplicationVersion(),c.BrowserName=h.browserName,c.BrowserVersion=h.browserVersion,c.BrowserPlatform=h.browserEngine,c.UserAgent=h.browser,c.OSInfo=h.systemInfo,c.DeviceInfo=d.isNullOrUndefined(h.device)===!1?JSON.stringify(h.device):null,c}function n(a){return function(c){if(c===!0&&b===!0){var d=q.indexOf(a);d!==-1&&q.splice(d,1)}return{isSuccess:c,trace:a}}}function o(a){b===!0&&q.push(a)}var p,q=[],r=k.createWithErrorCodesEnabled(),s={startUpTrace:function(){if(a===!1)return c.resolve();var b=new m(f.traceEventTypeEnum.Start,"Startup");return o(b),e.createTrace([b],r).then(n(b))},stopTrace:function(){if(a===!1)return c.resolve();var b=new l(f.traceEventTypeEnum.Stop,"Stop");return o(b),e.createTrace([b],r).then(n(b))},errorTrace:function(b){if(a===!1)return c.resolve();if(d.isNullOrUndefined(b))throw new Error("Missing data for Error Trace");var g=new l(f.traceEventTypeEnum.Error,b);return g.ExceptionType="VKZ_Client_Exception",o(g),e.createTrace([g],r).then(n(g))},getTraceCache:function(){return q},setUmoXUser:function(a){p=a}};return s}]}),angular.module("verklizan.umox.common.html5.vkz-webrequests.service").service("loginService",["$q","$window","securityTokenService","hashService","loginServiceProxy","userManagementServiceProxy","authorizationTaskConstants","taskAuthorizationService","moduleAuthorizationService","debugService",function(a,b,c,d,e,f,g,h,i,j){"use strict";var k=0;this.login=function(c,f){if(b.isNullOrUndefined(c)||b.isNullOrUndefined(f))return a.reject(new Error("userName or password missing"));var g=d.CreatePasswordHash(c,f);return e.login(c,g,i.getApplicationSupportedModules()).then(l)},this.logout=function(){return j.stopTrace().then(m).catch(m)},this.isLoginTokenPresent=function(){return!!c.tokenIsPresent()},this.getAmountOfSuccesfulLogins=function(){return k};var l=function(b){var d=b.data.LoginResult;return d===!0?(k++,c.setToken(b.headers("Identity")),a.resolve(b)):a.reject(new Error("_LoginError_Failed_"))},m=function(){return e.logout().then(n).catch(o)},n=function(b){var d=b;return d===!0?(c.removeToken(),h.clearTasks(),i.clearModules(),a.resolve(b)):a.reject(new Error("_LogoutError_Failed_"))},o=function(b){return a.reject(b)}}]),angular.module("verklizan.umox.common.html5.vkz-webrequests.service").provider("userDataManagerService",function(){"use strict";var a;this.setUserType=function(b){a=b},this.$get=["$q","USER_ROLES","USER_TYPES","cachedLocalStorageService","securityTokenService","loginService","loginServiceProxy","subscriberManagementServiceProxy","userManagementServiceProxy","hashService","authorizationTaskConstants","authorizationModuleConstants","taskAuthorizationService","moduleAuthorizationService","$window","debugService",function(b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){var r,s,t,u,v="UserId",w=null,x={readCurrentUser:function(){return b.all([H(),G()]).then(F)},getUserId:function(){return angular.isDefined(r)?t:new Error("User not logged in")},sessionIsFreshStart:function(){var a=this.isFirstLoginSinceAppStart(),b=!this.isFirstLoginSinceAppStart()&&!s;return a||b},requestPasswordReset:function(a){return j.requestPasswordReset(a)},resetPassword:function(a,b,c){var d=k.CreatePasswordHash(a,b);return j.resetPassword(a,d,c)},changePassword:function(a,b,c){var d=k.CreatePasswordHash(a,b),e=k.CreatePasswordHash(a,c);return j.changeUserPassword(d,e)},resetCurrentUser:function(){r=null,u=c.empty,w=null,n.clearTasks(),o.clearModules()},isFirstLoginSinceAppStart:function(){return 1===g.getAmountOfSuccesfulLogins()},getUserOrganizationId:function(){return p.isNullOrUndefined(r.ProfessionalCaregiverIdentity)?p.isNullOrUndefined(r.OperatorIdentity)?p.isNullOrUndefined(r.OrganizationId)?null:r.OrganizationId:r.OperatorIdentity.OrganizationId:r.ProfessionalCaregiverIdentity.OrganizationId},isAuthorized:function(){return null!==r&&"object"==typeof r},isAuthorizedForRole:function(a){return angular.isArray(a)||(a=[a]),a.indexOf(c.empty)!==-1||(a.indexOf(c.all)!==-1&&u!==c.empty||a.indexOf(u)!==-1)},isCurrentUserTheSameAsPreviousUser:function(){return s}},y=function(a){return z(),A(),r},z=function(){p.isNullOrUndefined(r)?u=c.empty:p.isNullOrUndefined(r.ProfessionalCaregiverIdentity)?p.isNullOrUndefined(r.OperatorIdentity)?p.isNullOrUndefined(r.SubscriptionNumber)||(u=c.subscriber):u=c.operator:u=c.caregiver},A=function(){return B()?s=E():(D(t),s=!0,null)},B=function(){var a=C();return null!==a},C=function(){return e.getLocalStorageItem(v)},D=function(a){e.setLocalStorageItem(v,a)},E=function(){return t===C()||(D(t),!1)},F=function(){return r?b.when(r):h.readCurrentUserInfo().then(function(c){r=c,t=r.Person.Id,f.setExperiationInMinutes(r.CacheTimeoutMinutes);var e=b.when(r);return a===d.subscriber?e.then(function(){return i.readCurrentSubscriber().then(function(a){return r=a,t=r.Id,b.resolve(r).then(y)})}):e.then(y)}).finally(function(){q.setUmoXUser(r.UserName),q.startUpTrace()})},G=function(){if(p.isNullOrUndefined(n.getTasks())===!1)return b.resolve();var a=[];for(var c in l)l.hasOwnProperty(c)&&a.push(l[c]);return j.checkTaskAuthorization(a).then(function(a){for(var c={},d=0;d<a.length;d++)c[a[d].TaskName]=a[d].IsAuthorized;return n.setTasks(c),b.resolve(c)})},H=function(){if(p.isNullOrUndefined(o.getModules())===!1)return b.resolve();var a=[];for(var c in m)m.hasOwnProperty(c)&&a.push(m[c]);return j.checkModuleAuthorization(a).then(function(a){for(var c={},d=0;d<a.length;d++)c[a[d].ModuleName]={IsAuthorized:a[d].IsAuthorized,FailureReason:a[d].FailureReason};return o.setModules(c),b.when(c)})};return x}]});